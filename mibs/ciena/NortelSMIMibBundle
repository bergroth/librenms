-- SNMP SMI MIBs - Version 1.0.8.0
-- (For Use With 565/5100/5200 SMI)
-- Packaged on Wed Jan  6 01:57:36 EST 2016

SNMPv2-SMI DEFINITIONS ::= BEGIN


-- the path to the root

org            OBJECT IDENTIFIER ::= { iso 3 }  --  "iso" = 1
dod            OBJECT IDENTIFIER ::= { org 6 }
internet       OBJECT IDENTIFIER ::= { dod 1 }

directory      OBJECT IDENTIFIER ::= { internet 1 }

mgmt           OBJECT IDENTIFIER ::= { internet 2 }
mib-2          OBJECT IDENTIFIER ::= { mgmt 1 }
transmission   OBJECT IDENTIFIER ::= { mib-2 10 }

experimental   OBJECT IDENTIFIER ::= { internet 3 }

private        OBJECT IDENTIFIER ::= { internet 4 }
enterprises    OBJECT IDENTIFIER ::= { private 1 }

security       OBJECT IDENTIFIER ::= { internet 5 }

snmpV2         OBJECT IDENTIFIER ::= { internet 6 }

-- transport domains
snmpDomains    OBJECT IDENTIFIER ::= { snmpV2 1 }

-- transport proxies
snmpProxys     OBJECT IDENTIFIER ::= { snmpV2 2 }

-- module identities
snmpModules    OBJECT IDENTIFIER ::= { snmpV2 3 }

-- Extended UTCTime, to allow dates with four-digit years
-- (Note that this definition of ExtUTCTime is not to be IMPORTed
--  by MIB modules.)
ExtUTCTime ::= OCTET STRING(SIZE(11 | 13))
    -- format is YYMMDDHHMMZ or YYYYMMDDHHMMZ
    --   where: YY   - last two digits of year (only years
    --                 between 1900-1999)
    --          YYYY - last four digits of the year (any year)
    --          MM   - month (01 through 12)
    --          DD   - day of month (01 through 31)
    --          HH   - hours (00 through 23)
    --          MM   - minutes (00 through 59)
    --          Z    - denotes GMT (the ASCII character Z)
    --
    -- For example, "9502192015Z" and "199502192015Z" represent
    -- 8:15pm GMT on 19 February 1995. Years after 1999 must use
    -- the four digit year format. Years 1900-1999 may use the
    -- two or four digit format.

END


SNMPv2-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,
    TimeTicks, Counter32, snmpModules, mib-2
        FROM SNMPv2-SMI
    DisplayString, TestAndIncr, TimeStamp
        FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP
        FROM SNMPv2-CONF;

snmpMIB MODULE-IDENTITY
    LAST-UPDATED "9511090000Z"
    ORGANIZATION "IETF SNMPv2 Working Group"
    CONTACT-INFO
            "        Marshall T. Rose

             Postal: Dover Beach Consulting, Inc.
                     420 Whisman Court
                     Mountain View, CA  94043-2186
                     US

                Tel: +1 415 968 1052

             E-mail: mrose@dbc.mtview.ca.us"
    DESCRIPTION
            "The MIB module for SNMPv2 entities."
    REVISION      "9304010000Z"
    DESCRIPTION
            "The initial revision of this MIB module was published as
            RFC 1450."
    ::= { snmpModules 1 }


snmpMIBObjects OBJECT IDENTIFIER ::= { snmpMIB 1 }

--  ::= { snmpMIBObjects 1 }        this OID is obsolete
--  ::= { snmpMIBObjects 2 }        this OID is obsolete
--  ::= { snmpMIBObjects 3 }        this OID is obsolete


-- the System group
--
-- a collection of objects common to all managed systems.

system   OBJECT IDENTIFIER ::= { mib-2 1 }

sysDescr OBJECT-TYPE
    SYNTAX      DisplayString (SIZE (0..255))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A textual description of the entity.  This value should
            include the full name and version identification of the
            system's hardware type, software operating-system, and
            networking software."
    ::= { system 1 }

sysObjectID OBJECT-TYPE

    SYNTAX      OBJECT IDENTIFIER
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The vendor's authoritative identification of the network
            management subsystem contained in the entity.  This value is
            allocated within the SMI enterprises subtree (1.3.6.1.4.1)
            and provides an easy and unambiguous means for determining
            `what kind of box' is being managed.  For example, if vendor
            `Flintstones, Inc.' was assigned the subtree
            1.3.6.1.4.1.4242, it could assign the identifier
            1.3.6.1.4.1.4242.1.1 to its `Fred Router'."
    ::= { system 2 }

sysUpTime OBJECT-TYPE
    SYNTAX      TimeTicks
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The time (in hundredths of a second) since the network
            management portion of the system was last re-initialized."
    ::= { system 3 }

sysContact OBJECT-TYPE
    SYNTAX      DisplayString (SIZE (0..255))
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The textual identification of the contact person for this
            managed node, together with information on how to contact
            this person.  If no contact information is known, the value
            is the zero-length string."
    ::= { system 4 }

sysName OBJECT-TYPE
    SYNTAX      DisplayString (SIZE (0..255))
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "An administratively-assigned name for this managed node.
            By convention, this is the node's fully-qualified domain
            name.  If the name is unknown, the value is the zero-length
            string."
    ::= { system 5 }

sysLocation OBJECT-TYPE
    SYNTAX      DisplayString (SIZE (0..255))
    MAX-ACCESS  read-write

    STATUS      current
    DESCRIPTION
            "The physical location of this node (e.g., `telephone
            closet, 3rd floor').  If the location is unknown, the value
            is the zero-length string."
    ::= { system 6 }

sysServices OBJECT-TYPE
    SYNTAX      INTEGER (0..127)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A value which indicates the set of services that this
            entity may potentially offers.  The value is a sum.  This
            sum initially takes the value zero, Then, for each layer, L,
            in the range 1 through 7, that this node performs
            transactions for, 2 raised to (L - 1) is added to the sum.
            For example, a node which performs only routing functions
            would have a value of 4 (2^(3-1)).  In contrast, a node
            which is a host offering application services would have a
            value of 72 (2^(4-1) + 2^(7-1)).  Note that in the context
            of the Internet suite of protocols, values should be
            calculated accordingly:

                 layer      functionality
                   1        physical (e.g., repeaters)
                   2        datalink/subnetwork (e.g., bridges)
                   3        internet (e.g., supports the IP)
                   4        end-to-end  (e.g., supports the TCP)
                   7        applications (e.g., supports the SMTP)

            For systems including OSI protocols, layers 5 and 6 may also
            be counted."
    ::= { system 7 }


-- object resource information
--
-- a collection of objects which describe the SNMPv2 entity's
-- (statically and dynamically configurable) support of
-- various MIB modules.

sysORLastChange OBJECT-TYPE
    SYNTAX     TimeStamp
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The value of sysUpTime at the time of the most recent

            change in state or value of any instance of sysORID."
    ::= { system 8 }

sysORTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF SysOREntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table listing the capabilities of the
            local SNMPv2 entity acting in an agent role with respect to
            various MIB modules.  SNMPv2 entities having dynamically-
            configurable support of MIB modules will have a
            dynamically-varying number of conceptual rows."
    ::= { system 9 }

sysOREntry OBJECT-TYPE
    SYNTAX     SysOREntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) in the sysORTable."
    INDEX      { sysORIndex }
    ::= { sysORTable 1 }

SysOREntry ::= SEQUENCE {
    sysORIndex     INTEGER,
    sysORID        OBJECT IDENTIFIER,
    sysORDescr     DisplayString,
    sysORUpTime    TimeStamp
}

sysORIndex OBJECT-TYPE
    SYNTAX     INTEGER (1..2147483647)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The auxiliary variable used for identifying instances of
            the columnar objects in the sysORTable."
    ::= { sysOREntry 1 }

sysORID OBJECT-TYPE
    SYNTAX     OBJECT IDENTIFIER
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "An authoritative identification of a capabilities statement
            with respect to various MIB modules supported by the local
            SNMPv2 entity acting in an agent role."

    ::= { sysOREntry 2 }

sysORDescr OBJECT-TYPE
    SYNTAX     DisplayString
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "A textual description of the capabilities identified by the
            corresponding instance of sysORID."
    ::= { sysOREntry 3 }

sysORUpTime OBJECT-TYPE
    SYNTAX     TimeStamp
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The value of sysUpTime at the time this conceptual row was
            last instanciated."
    ::= { sysOREntry 4 }


-- the SNMP group
--
-- a collection of objects providing basic instrumentation and
-- control of an SNMP entity.

snmp     OBJECT IDENTIFIER ::= { mib-2 11 }

snmpInPkts OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of messages delivered to the SNMP entity
            from the transport service."
    ::= { snmp 1 }

snmpInBadVersions OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of SNMP messages which were delivered to
            the SNMP entity and were for an unsupported SNMP version."
    ::= { snmp 3 }

snmpInBadCommunityNames OBJECT-TYPE
    SYNTAX     Counter32

    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of SNMP messages delivered to the SNMP
            entity which used a SNMP community name not known to said
            entity."
    ::= { snmp 4 }

snmpInBadCommunityUses OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of SNMP messages delivered to the SNMP
            entity which represented an SNMP operation which was not
            allowed by the SNMP community named in the message."
    ::= { snmp 5 }

snmpInASNParseErrs OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of ASN.1 or BER errors encountered by the
            SNMP entity when decoding received SNMP messages."
    ::= { snmp 6 }

snmpEnableAuthenTraps OBJECT-TYPE
    SYNTAX      INTEGER { enabled(1), disabled(2) }
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "Indicates whether the SNMP entity is permitted to generate
            authenticationFailure traps.  The value of this object
            overrides any configuration information; as such, it
            provides a means whereby all authenticationFailure traps may
            be disabled.

            Note that it is strongly recommended that this object be
            stored in non-volatile memory so that it remains constant
            across re-initializations of the network management system."
    ::= { snmp 30 }

snmpSilentDrops OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION

            "The total number of GetRequest-PDUs, GetNextRequest-PDUs,
            GetBulkRequest-PDUs, SetRequest-PDUs, and InformRequest-PDUs
            delivered to the SNMP entity which were silently dropped
            because the size of a reply containing an alternate
            Response-PDU with an empty variable-bindings field was
            greater than either a local constraint or the maximum
            message size associated with the originator of the request."
    ::= { snmp 31 }

snmpProxyDrops OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of GetRequest-PDUs, GetNextRequest-PDUs,
            GetBulkRequest-PDUs, SetRequest-PDUs, and InformRequest-PDUs
            delivered to the SNMP entity which were silently dropped
            because the transmission of the (possibly translated)
            message to a proxy target failed in a manner (other than a
            time-out) such that no Response-PDU could be returned."
    ::= { snmp 32 }


-- information for notifications
--
-- a collection of objects which allow the SNMPv2 entity, when
-- acting in an agent role, to be configured to generate
-- SNMPv2-Trap-PDUs.

snmpTrap       OBJECT IDENTIFIER ::= { snmpMIBObjects 4 }


snmpTrapOID OBJECT-TYPE
    SYNTAX     OBJECT IDENTIFIER
    MAX-ACCESS accessible-for-notify
    STATUS     current
    DESCRIPTION
            "The authoritative identification of the notification
            currently being sent.  This variable occurs as the second
            varbind in every SNMPv2-Trap-PDU and InformRequest-PDU."
    ::= { snmpTrap 1 }

--  ::= { snmpTrap 2 }   this OID is obsolete

snmpTrapEnterprise OBJECT-TYPE
    SYNTAX     OBJECT IDENTIFIER
    MAX-ACCESS accessible-for-notify
    STATUS     current

    DESCRIPTION
            "The authoritative identification of the enterprise
            associated with the trap currently being sent.  When a
            SNMPv2 proxy agent is mapping an RFC1157 Trap-PDU into a
            SNMPv2-Trap-PDU, this variable occurs as the last varbind."
    ::= { snmpTrap 3 }

--  ::= { snmpTrap 4 }   this OID is obsolete


-- well-known traps

snmpTraps      OBJECT IDENTIFIER ::= { snmpMIBObjects 5 }

coldStart NOTIFICATION-TYPE
    STATUS  current
    DESCRIPTION
            "A coldStart trap signifies that the SNMPv2 entity, acting
            in an agent role, is reinitializing itself and that its
            configuration may have been altered."
    ::= { snmpTraps 1 }

warmStart NOTIFICATION-TYPE
    STATUS  current
    DESCRIPTION
            "A warmStart trap signifies that the SNMPv2 entity, acting
            in an agent role, is reinitializing itself such that its
            configuration is unaltered."
    ::= { snmpTraps 2 }

-- Note the linkDown NOTIFICATION-TYPE ::= { snmpTraps 3 }
-- and the linkUp NOTIFICATION-TYPE ::= { snmpTraps 4 }
-- are defined in RFC 1573

authenticationFailure NOTIFICATION-TYPE
    STATUS  current
    DESCRIPTION
            "An authenticationFailure trap signifies that the SNMPv2
            entity, acting in an agent role, has received a protocol
            message that is not properly authenticated.  While all
            implementations of the SNMPv2 must be capable of generating
            this trap, the snmpEnableAuthenTraps object indicates
            whether this trap will be generated."
    ::= { snmpTraps 5 }

-- Note the egpNeighborLoss NOTIFICATION-TYPE ::= { snmpTraps 6 }
-- is defined in RFC 1213


-- the set group
--
-- a collection of objects which allow several cooperating
-- SNMPv2 entities, all acting in a manager role, to
-- coordinate their use of the SNMPv2 set operation.

snmpSet        OBJECT IDENTIFIER ::= { snmpMIBObjects 6 }


snmpSetSerialNo OBJECT-TYPE
    SYNTAX     TestAndIncr
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
            "An advisory lock used to allow several cooperating SNMPv2
            entities, all acting in a manager role, to coordinate their
            use of the SNMPv2 set operation.

            This object is used for coarse-grain coordination.  To
            achieve fine-grain coordination, one or more similar objects
            might be defined within each MIB group, as appropriate."
    ::= { snmpSet 1 }


-- conformance information

snmpMIBConformance
               OBJECT IDENTIFIER ::= { snmpMIB 2 }

snmpMIBCompliances
               OBJECT IDENTIFIER ::= { snmpMIBConformance 1 }
snmpMIBGroups  OBJECT IDENTIFIER ::= { snmpMIBConformance 2 }


-- compliance statements

--    ::= { snmpMIBCompliances 1 }      this OID is obsolete

snmpBasicCompliance MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
            "The compliance statement for SNMPv2 entities which
            implement the SNMPv2 MIB."
    MODULE  -- this module
        MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
                           snmpBasicNotificationsGroup }

        GROUP   snmpCommunityGroup

        DESCRIPTION
            "This group is mandatory for SNMPv2 entities which
            support community-based authentication."

    ::= { snmpMIBCompliances 2 }


-- units of conformance

--  ::= { snmpMIBGroups 1 }           this OID is obsolete
--  ::= { snmpMIBGroups 2 }           this OID is obsolete
--  ::= { snmpMIBGroups 3 }           this OID is obsolete
--  ::= { snmpMIBGroups 4 }           this OID is obsolete

snmpGroup OBJECT-GROUP
    OBJECTS { snmpInPkts,
              snmpInBadVersions,
              snmpInASNParseErrs,
              snmpSilentDrops,
              snmpProxyDrops,
              snmpEnableAuthenTraps }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing basic instrumentation and
            control of an SNMPv2 entity."
    ::= { snmpMIBGroups 8 }

snmpCommunityGroup OBJECT-GROUP
    OBJECTS { snmpInBadCommunityNames,
              snmpInBadCommunityUses }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing basic instrumentation of
            a SNMPv2 entity which supports community-based
            authentication."
    ::= { snmpMIBGroups 9 }

snmpSetGroup OBJECT-GROUP
    OBJECTS { snmpSetSerialNo }
    STATUS  current
    DESCRIPTION
            "A collection of objects which allow several cooperating
            SNMPv2 entities, all acting in a manager role, to coordinate
            their use of the SNMPv2 set operation."
    ::= { snmpMIBGroups 5 }

systemGroup OBJECT-GROUP
    OBJECTS { sysDescr, sysObjectID, sysUpTime,

              sysContact, sysName, sysLocation,
              sysServices,
              sysORLastChange, sysORID,
              sysORUpTime, sysORDescr }
    STATUS  current
    DESCRIPTION
            "The system group defines objects which are common to all
            managed systems."
    ::= { snmpMIBGroups 6 }

snmpBasicNotificationsGroup NOTIFICATION-GROUP
    NOTIFICATIONS { coldStart, authenticationFailure }
    STATUS        current
    DESCRIPTION
            "The two notifications which an SNMPv2 entity is required to
            implement."
    ::= { snmpMIBGroups 7 }


-- definitions in RFC 1213 made obsolete by the inclusion of a
-- subset of the snmp group in this MIB

snmpOutPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Messages which were
            passed from the SNMP protocol entity to the
            transport service."
    ::= { snmp 2 }

-- { snmp 7 } is not used

snmpInTooBigs OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            delivered to the SNMP protocol entity and for
            which the value of the error-status field is
            `tooBig'."
    ::= { snmp 8 }

snmpInNoSuchNames OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only

    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            delivered to the SNMP protocol entity and for
            which the value of the error-status field is
            `noSuchName'."
    ::= { snmp 9 }

snmpInBadValues OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            delivered to the SNMP protocol entity and for
            which the value of the error-status field is
            `badValue'."
    ::= { snmp 10 }

snmpInReadOnlys OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number valid SNMP PDUs which were
            delivered to the SNMP protocol entity and for
            which the value of the error-status field is
            `readOnly'.  It should be noted that it is a
            protocol error to generate an SNMP PDU which
            contains the value `readOnly' in the error-status
            field, as such this object is provided as a means
            of detecting incorrect implementations of the
            SNMP."
    ::= { snmp 11 }

snmpInGenErrs OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            delivered to the SNMP protocol entity and for
            which the value of the error-status field is
            `genErr'."
    ::= { snmp 12 }

snmpInTotalReqVars OBJECT-TYPE
    SYNTAX      Counter32

    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of MIB objects which have been
            retrieved successfully by the SNMP protocol entity
            as the result of receiving valid SNMP Get-Request
            and Get-Next PDUs."
    ::= { snmp 13 }

snmpInTotalSetVars OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of MIB objects which have been
            altered successfully by the SNMP protocol entity
            as the result of receiving valid SNMP Set-Request
            PDUs."
    ::= { snmp 14 }

snmpInGetRequests OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Get-Request PDUs which
            have been accepted and processed by the SNMP
            protocol entity."
    ::= { snmp 15 }

snmpInGetNexts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Get-Next PDUs which have
            been accepted and processed by the SNMP protocol
            entity."
    ::= { snmp 16 }

snmpInSetRequests OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Set-Request PDUs which
            have been accepted and processed by the SNMP
            protocol entity."

    ::= { snmp 17 }

snmpInGetResponses OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Get-Response PDUs which
            have been accepted and processed by the SNMP
            protocol entity."
    ::= { snmp 18 }

snmpInTraps OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Trap PDUs which have
            been accepted and processed by the SNMP protocol
            entity."
    ::= { snmp 19 }

snmpOutTooBigs OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            generated by the SNMP protocol entity and for
            which the value of the error-status field is
            `tooBig.'"
    ::= { snmp 20 }

snmpOutNoSuchNames OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            generated by the SNMP protocol entity and for
            which the value of the error-status is
            `noSuchName'."
    ::= { snmp 21 }

snmpOutBadValues OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete

    DESCRIPTION
            "The total number of SNMP PDUs which were
            generated by the SNMP protocol entity and for
            which the value of the error-status field is
            `badValue'."
    ::= { snmp 22 }


-- { snmp 23 } is not used

snmpOutGenErrs OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP PDUs which were
            generated by the SNMP protocol entity and for
            which the value of the error-status field is
            `genErr'."
    ::= { snmp 24 }

snmpOutGetRequests OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Get-Request PDUs which
            have been generated by the SNMP protocol entity."
    ::= { snmp 25 }

snmpOutGetNexts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Get-Next PDUs which have
            been generated by the SNMP protocol entity."
    ::= { snmp 26 }

snmpOutSetRequests OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Set-Request PDUs which
            have been generated by the SNMP protocol entity."
    ::= { snmp 27 }


snmpOutGetResponses OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Get-Response PDUs which
            have been generated by the SNMP protocol entity."
    ::= { snmp 28 }

snmpOutTraps OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      obsolete
    DESCRIPTION
            "The total number of SNMP Trap PDUs which have
            been generated by the SNMP protocol entity."
    ::= { snmp 29 }

snmpObsoleteGroup OBJECT-GROUP
    OBJECTS { snmpOutPkts, snmpInTooBigs, snmpInNoSuchNames,
              snmpInBadValues, snmpInReadOnlys, snmpInGenErrs,
              snmpInTotalReqVars, snmpInTotalSetVars,
              snmpInGetRequests, snmpInGetNexts, snmpInSetRequests,
              snmpInGetResponses, snmpInTraps, snmpOutTooBigs,
              snmpOutNoSuchNames, snmpOutBadValues, snmpOutGenErrs,
              snmpOutGetRequests, snmpOutGetNexts, snmpOutSetRequests,
              snmpOutGetResponses, snmpOutTraps }
    STATUS  obsolete
    DESCRIPTION
            "A collection of objects from RFC 1213 made obsolete by this
            MIB."
    ::= { snmpMIBGroups 10 }

END

IANAifType-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       MODULE-IDENTITY, mib-2      FROM SNMPv2-SMI
       TEXTUAL-CONVENTION          FROM SNMPv2-TC;

   ianaifType MODULE-IDENTITY
       LAST-UPDATED "200510100000Z"  -- October 10, 2005
       ORGANIZATION "IANA"
       CONTACT-INFO "        Internet Assigned Numbers Authority

                     Postal: ICANN
                             4676 Admiralty Way, Suite 330
                             Marina del Rey, CA 90292

                     Tel:    +1 310 823 9358
                     E-Mail: iana@iana.org"

       DESCRIPTION  "This MIB module defines the IANAifType Textual
                     Convention, and thus the enumerated values of
                     the ifType object defined in MIB-II's ifTable."

       REVISION     "200510100000Z"  -- October 10, 2005
       DESCRIPTION  "Registration of new IANA ifType 230."

       REVISION     "200509090000Z"  -- September 09, 2005
       DESCRIPTION  "Registration of new IANA ifType 229."

       REVISION     "200505270000Z"  -- May 27, 2005
       DESCRIPTION  "Registration of new IANA ifType 228."

       REVISION     "200503030000Z"  -- March 3, 2005
       DESCRIPTION  "Added the IANAtunnelType TC and deprecated
	                 IANAifType sixToFour (215) per 
	                 RFC4087."

       REVISION     "200411220000Z"  -- November 22, 2004
       DESCRIPTION  "Registration of new IANA ifType 227."

       REVISION     "200406170000Z"  -- June 17, 2004
       DESCRIPTION  "Registration of new IANA ifType 226."

       REVISION     "200405120000Z"  -- May 12, 2004
       DESCRIPTION  "Added description for IANAifType 6, and 
	                 changed the descriptions for IANAifTypes
                     180, 181, and 182."

       REVISION     "200405070000Z"  -- May 7, 2004
       DESCRIPTION  "Registration of new IANAifType 225."

       REVISION     "200308250000Z"  -- Aug 25, 2003
       DESCRIPTION  "Deprecated IANAifTypes 7 and 11. Obsoleted
                    IANAifTypes 62, 69, and 117.  ethernetCsmacd (6)
                    should be used instead of these values"

       REVISION     "200308180000Z"  -- Aug 18, 2003
       DESCRIPTION  "Registration of new IANAifType
                    224."

       REVISION     "200308070000Z"  -- Aug 7, 2003
       DESCRIPTION  "Registration of new IANAifTypes
                    222 and 223."

       REVISION     "200303180000Z"  -- Mar 18, 2003
       DESCRIPTION  "Registration of new IANAifType
                    221."

       REVISION     "200301130000Z"  -- Jan 13, 2003
       DESCRIPTION  "Registration of new IANAifType
                    220."

       REVISION     "200210170000Z"  -- Oct 17, 2002
       DESCRIPTION  "Registration of new IANAifType
                    219."
	   
	   REVISION     "200207160000Z"  -- Jul 16, 2002
       DESCRIPTION  "Registration of new IANAifTypes
                    217 and 218."

       REVISION     "200207100000Z"  -- Jul 10, 2002
       DESCRIPTION  "Registration of new IANAifTypes
                    215 and 216."

       REVISION     "200206190000Z"  -- Jun 19, 2002
       DESCRIPTION  "Registration of new IANAifType
                    214."
	   
       REVISION     "200201040000Z"  -- Jan 4, 2002
       DESCRIPTION  "Registration of new IANAifTypes
                    211, 212 and 213."

       REVISION     "200112200000Z"  -- Dec 20, 2001
       DESCRIPTION  "Registration of new IANAifTypes
                    209 and 210."

       REVISION     "200111150000Z"  -- Nov 15, 2001
       DESCRIPTION  "Registration of new IANAifTypes
                    207 and 208."


       REVISION     "200111060000Z"  -- Nov 6, 2001
       DESCRIPTION  "Registration of new IANAifType
                    206."


       REVISION     "200111020000Z"  -- Nov 2, 2001
       DESCRIPTION  "Registration of new IANAifType
                    205."


       REVISION     "200110160000Z"  -- Oct 16, 2001
       DESCRIPTION  "Registration of new IANAifTypes
                    199, 200, 201, 202, 203, and 204."


       REVISION     "200109190000Z"  -- Sept 19, 2001
       DESCRIPTION  "Registration of new IANAifType
                    198."

       REVISION     "200105110000Z"  -- May 11, 2001
       DESCRIPTION  "Registration of new IANAifType
                    197."

       
       REVISION     "200101120000Z"  -- Jan 12, 2001
       DESCRIPTION  "Registration of new IANAifTypes
                    195 and 196."

       REVISION     "200012190000Z"  -- Dec 19, 2000
       DESCRIPTION  "Registration of new IANAifTypes
                    193 and 194."

       REVISION     "200012070000Z"  -- Dec 07, 2000
       DESCRIPTION  "Registration of new IANAifTypes
                    191 and 192."

       REVISION     "200012040000Z"  -- Dec 04, 2000
       DESCRIPTION  "Registration of new IANAifType
                    190."

       REVISION     "200010170000Z"  -- Oct 17, 2000
       DESCRIPTION  "Registration of new IANAifTypes
                    188 and 189."  

       REVISION     "200010020000Z"  -- Oct 02, 2000
       DESCRIPTION  "Registration of new IANAifType 187." 

       REVISION     "200009010000Z"  -- Sept 01, 2000
       DESCRIPTION  "Registration of new IANAifTypes
                     184, 185, and 186."			

       REVISION     "200008240000Z"  -- Aug 24, 2000
       DESCRIPTION  "Registration of new IANAifType 183." 

       REVISION     "200008230000Z"  -- Aug 23, 2000
       DESCRIPTION  "Registration of new IANAifTypes
                     174-182."

       REVISION     "200008220000Z"  -- Aug 22, 2000
       DESCRIPTION  "Registration of new IANAifTypes 170,
                     171, 172 and 173."

       REVISION     "200004250000Z"  -- Apr 25, 2000
       DESCRIPTION  "Registration of new IANAifTypes 168 and 169."       
	

       REVISION     "200003060000Z"  -- Mar 6, 2000
       DESCRIPTION  "Fixed a missing semi-colon in the IMPORT.
                     Also cleaned up the REVISION log a bit.
                     It is not complete, but from now on it will
                     be maintained and kept up to date with each
                     change to this MIB module."

       REVISION     "199910081430Z"  -- Oct 08, 1999
       DESCRIPTION  "Include new name assignments up to cnr(85).
                     This is the first version available via the WWW
                     at: ftp://ftp.isi.edu/mib/ianaiftype.mib"

       REVISION     "199401310000Z"  -- Jan 31, 1994
       DESCRIPTION  "Initial version of this MIB as published in
                     RFC 1573."

       ::= { mib-2 30 }


   IANAifType ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
               "This data type is used as the syntax of the ifType
               object in the (updated) definition of MIB-II's
               ifTable.

               The definition of this textual convention with the
               addition of newly assigned values is published
               periodically by the IANA, in either the Assigned
               Numbers RFC, or some derivative of it specific to
               Internet Network Management number assignments.  (The
               latest arrangements can be obtained by contacting the
               IANA.)

               Requests for new values should be made to IANA via
               email (iana@iana.org).

               The relationship between the assignment of ifType
               values and of OIDs to particular media-specific MIBs
               is solely the purview of IANA and is subject to change
               without notice.  Quite often, a media-specific MIB's
               OID-subtree assignment within MIB-II's 'transmission'
               subtree will be the same as its ifType value.
               However, in some circumstances this will not be the
               case, and implementors must not pre-assume any
               specific relationship between ifType values and
               transmission subtree OIDs."
       SYNTAX  INTEGER {
                   other(1),          -- none of the following
                   regular1822(2),
                   hdh1822(3),
                   ddnX25(4),
                   rfc877x25(5),
                   ethernetCsmacd(6), -- for all ethernet-like interfaces,
                                      -- regardless of speed, as per RFC3635
                   iso88023Csmacd(7), -- Deprecated via RFC-draft-ietf-hubmib-etherif-mib-v3  ethernetCsmacd (6) should be used instead
                   iso88024TokenBus(8),
                   iso88025TokenRing(9),
                   iso88026Man(10),
                   starLan(11), -- Deprecated via RFC-draft-ietf-hubmib-etherif-mib-v3  ethernetCsmacd (6) should be used instead
                   proteon10Mbit(12),
                   proteon80Mbit(13),
                   hyperchannel(14),
                   fddi(15),
                   lapb(16),
                   sdlc(17),
                   ds1(18),            -- DS1-MIB
                   e1(19),             -- Obsolete see DS1-MIB
                   basicISDN(20),
                   primaryISDN(21),
                   propPointToPointSerial(22), -- proprietary serial
                   ppp(23),
                   softwareLoopback(24),
                   eon(25),            -- CLNP over IP 
                   ethernet3Mbit(26),
                   nsip(27),           -- XNS over IP
                   slip(28),           -- generic SLIP
                   ultra(29),          -- ULTRA technologies
                   ds3(30),            -- DS3-MIB
                   sip(31),            -- SMDS, coffee
                   frameRelay(32),     -- DTE only. 
                   rs232(33),
                   para(34),           -- parallel-port
                   arcnet(35),         -- arcnet
                   arcnetPlus(36),     -- arcnet plus
                   atm(37),            -- ATM cells
                   miox25(38),
                   sonet(39),          -- SONET or SDH 
                   x25ple(40),
                   iso88022llc(41),
                   localTalk(42),
                   smdsDxi(43),
                   frameRelayService(44),  -- FRNETSERV-MIB
                   v35(45),
                   hssi(46),
                   hippi(47),
                   modem(48),          -- Generic modem
                   aal5(49),           -- AAL5 over ATM
                   sonetPath(50),
                   sonetVT(51),
                   smdsIcip(52),       -- SMDS InterCarrier Interface
                   propVirtual(53),    -- proprietary virtual/internal
                   propMultiplexor(54),-- proprietary multiplexing
                   ieee80212(55),      -- 100BaseVG
                   fibreChannel(56),   -- Fibre Channel
                   hippiInterface(57), -- HIPPI interfaces     
                   frameRelayInterconnect(58), -- Obsolete use either
                                       -- frameRelay(32) or 
                                       -- frameRelayService(44).
                   aflane8023(59),     -- ATM Emulated LAN for 802.3
                   aflane8025(60),     -- ATM Emulated LAN for 802.5
                   cctEmul(61),        -- ATM Emulated circuit          
                   fastEther(62),      -- Obsoleted via RFC-draft-ietf-hubmib-etherif-mib-v3  ethernetCsmacd (6) should be used instead
                   isdn(63),           -- ISDN and X.25           
                   v11(64),            -- CCITT V.11/X.21             
                   v36(65),            -- CCITT V.36                  
                   g703at64k(66),      -- CCITT G703 at 64Kbps
                   g703at2mb(67),      -- Obsolete see DS1-MIB
                   qllc(68),           -- SNA QLLC                    
                   fastEtherFX(69),    -- Obsoleted via RFC-draft-ietf-hubmib-etherif-mib-v3  ethernetCsmacd (6) should be used instead
                   channel(70),        -- channel                     
                   ieee80211(71),      -- radio spread spectrum       
	           ibm370parChan(72),  -- IBM System 360/370 OEMI Channel
                   escon(73),          -- IBM Enterprise Systems Connection
                   dlsw(74),           -- Data Link Switching
                   isdns(75),          -- ISDN S/T interface
                   isdnu(76),          -- ISDN U interface
                   lapd(77),           -- Link Access Protocol D
                   ipSwitch(78),       -- IP Switching Objects
                   rsrb(79),           -- Remote Source Route Bridging
                   atmLogical(80),     -- ATM Logical Port
                   ds0(81),            -- Digital Signal Level 0
                   ds0Bundle(82),      -- group of ds0s on the same ds1
                   bsc(83),            -- Bisynchronous Protocol
                   async(84),          -- Asynchronous Protocol
                   cnr(85),            -- Combat Net Radio
                   iso88025Dtr(86),    -- ISO 802.5r DTR
                   eplrs(87),          -- Ext Pos Loc Report Sys
                   arap(88),           -- Appletalk Remote Access Protocol
                   propCnls(89),       -- Proprietary Connectionless Protocol
                   hostPad(90),        -- CCITT-ITU X.29 PAD Protocol
                   termPad(91),        -- CCITT-ITU X.3 PAD Facility
                   frameRelayMPI(92),  -- Multiproto Interconnect over FR
                   x213(93),           -- CCITT-ITU X213
                   adsl(94),           -- Asymmetric Digital Subscriber Loop
                   radsl(95),          -- Rate-Adapt. Digital Subscriber Loop
                   sdsl(96),           -- Symmetric Digital Subscriber Loop
                   vdsl(97),           -- Very H-Speed Digital Subscrib. Loop
                   iso88025CRFPInt(98), -- ISO 802.5 CRFP
                   myrinet(99),        -- Myricom Myrinet
                   voiceEM(100),       -- voice recEive and transMit
                   voiceFXO(101),      -- voice Foreign Exchange Office
                   voiceFXS(102),      -- voice Foreign Exchange Station
                   voiceEncap(103),    -- voice encapsulation
                   voiceOverIp(104),   -- voice over IP encapsulation
                   atmDxi(105),        -- ATM DXI
                   atmFuni(106),       -- ATM FUNI
		   atmIma (107),       -- ATM IMA		   
                   pppMultilinkBundle(108), -- PPP Multilink Bundle
                   ipOverCdlc (109),   -- IBM ipOverCdlc
		   ipOverClaw (110),   -- IBM Common Link Access to Workstn
                   stackToStack (111), -- IBM stackToStack
                   virtualIpAddress (112), -- IBM VIPA
		   mpc (113),          -- IBM multi-protocol channel support
		   ipOverAtm (114),    -- IBM ipOverAtm
		   iso88025Fiber (115), -- ISO 802.5j Fiber Token Ring
		   tdlc (116),	       -- IBM twinaxial data link control
		   gigabitEthernet (117), -- Obsoleted via RFC-draft-ietf-hubmib-etherif-mib-v3  ethernetCsmacd (6) should be used instead
		   hdlc (118),         -- HDLC
		   lapf (119),	       -- LAP F
		   v37 (120),	       -- V.37
		   x25mlp (121),       -- Multi-Link Protocol
		   x25huntGroup (122), -- X25 Hunt Group
		   trasnpHdlc (123),   -- Transp HDLC
		   interleave (124),   -- Interleave channel
		   fast (125),         -- Fast channel
		   ip (126),	       -- IP (for APPN HPR in IP networks)
		   docsCableMaclayer (127),  -- CATV Mac Layer
		   docsCableDownstream (128), -- CATV Downstream interface
		   docsCableUpstream (129),  -- CATV Upstream interface
		   a12MppSwitch (130), -- Avalon Parallel Processor
		   tunnel (131),       -- Encapsulation interface
		   coffee (132),       -- coffee pot
		   ces (133),          -- Circuit Emulation Service
		   atmSubInterface (134), -- ATM Sub Interface
		   l2vlan (135),       -- Layer 2 Virtual LAN using 802.1Q
		   l3ipvlan (136),     -- Layer 3 Virtual LAN using IP
		   l3ipxvlan (137),    -- Layer 3 Virtual LAN using IPX
		   digitalPowerline (138), -- IP over Power Lines	
		   mediaMailOverIp (139), -- Multimedia Mail over IP
		   dtm (140),        -- Dynamic syncronous Transfer Mode
		   dcn (141),    -- Data Communications Network
		   ipForward (142),    -- IP Forwarding Interface
		   msdsl (143),       -- Multi-rate Symmetric DSL
		   ieee1394 (144), -- IEEE1394 High Performance Serial Bus
		   if-gsn (145),       --   HIPPI-6400 
		   dvbRccMacLayer (146), -- DVB-RCC MAC Layer
		   dvbRccDownstream (147),  -- DVB-RCC Downstream Channel
		   dvbRccUpstream (148),  -- DVB-RCC Upstream Channel
		   atmVirtual (149),   -- ATM Virtual Interface
		   mplsTunnel (150),   -- MPLS Tunnel Virtual Interface
		   srp (151),	-- Spatial Reuse Protocol	
		   voiceOverAtm (152),  -- Voice Over ATM
		   voiceOverFrameRelay (153),   -- Voice Over Frame Relay 
		   idsl (154),		-- Digital Subscriber Loop over ISDN
		   compositeLink (155),  -- Avici Composite Link Interface
		   ss7SigLink (156),     -- SS7 Signaling Link 
		   propWirelessP2P (157),  --  Prop. P2P wireless interface
		   frForward (158),    -- Frame Forward Interface
		   rfc1483 (159),	-- Multiprotocol over ATM AAL5
		   usb (160),		-- USB Interface
		   ieee8023adLag (161),  -- IEEE 802.3ad Link Aggregate
                   bgppolicyaccounting (162), -- BGP Policy Accounting
                   frf16MfrBundle (163), -- FRF .16 Multilink Frame Relay 
                   h323Gatekeeper (164), -- H323 Gatekeeper
                   h323Proxy (165), -- H323 Voice and Video Proxy
                   mpls (166), -- MPLS                   
                   mfSigLink (167), -- Multi-frequency signaling link
                   hdsl2 (168), -- High Bit-Rate DSL - 2nd generation
                   shdsl (169), -- Multirate HDSL2
                   ds1FDL (170), -- Facility Data Link 4Kbps on a DS1
                   pos (171), -- Packet over SONET/SDH Interface
                   dvbAsiIn (172), -- DVB-ASI Input
                   dvbAsiOut (173), -- DVB-ASI Output 
                   plc (174), -- Power Line Communtications
                   nfas (175), -- Non Facility Associated Signaling
                   tr008 (176), -- TR008
                   gr303RDT (177), -- Remote Digital Terminal
                   gr303IDT (178), -- Integrated Digital Terminal
                   isup (179), -- ISUP
                   propDocsWirelessMaclayer (180), -- Cisco proprietary Maclayer
                   propDocsWirelessDownstream (181), -- Cisco proprietary Downstream
                   propDocsWirelessUpstream (182), -- Cisco proprietary Upstream
                   hiperlan2 (183), -- HIPERLAN Type 2 Radio Interface
                   propBWAp2Mp (184), -- PropBroadbandWirelessAccesspt2multipt
                   sonetOverheadChannel (185), -- SONET Overhead Channel
                   digitalWrapperOverheadChannel (186), -- Digital Wrapper
                   aal2 (187), -- ATM adaptation layer 2
                   radioMAC (188), -- MAC layer over radio links
                   atmRadio (189), -- ATM over radio links   
                   imt (190), -- Inter Machine Trunks
                   mvl (191), -- Multiple Virtual Lines DSL
                   reachDSL (192), -- Long Reach DSL
                   frDlciEndPt (193), -- Frame Relay DLCI End Point
                   atmVciEndPt (194), -- ATM VCI End Point
                   opticalChannel (195), -- Optical Channel
                   opticalTransport (196), -- Optical Transport
                   propAtm (197), --  Proprietary ATM       
                   voiceOverCable (198), -- Voice Over Cable Interface
                   infiniband (199), -- Infiniband
                   teLink (200), -- TE Link
                   q2931 (201), -- Q.2931
                   virtualTg (202), -- Virtual Trunk Group
                   sipTg (203), -- SIP Trunk Group
                   sipSig (204), -- SIP Signaling   
                   docsCableUpstreamChannel (205), -- CATV Upstream Channel
                   econet (206), -- Acorn Econet
                   pon155 (207), -- FSAN 155Mb Symetrical PON interface
                   pon622 (208), -- FSAN622Mb Symetrical PON interface
                   bridge (209), -- Transparent bridge interface
                   linegroup (210), -- Interface common to multiple lines		   
                   voiceEMFGD (211), -- voice E&M Feature Group D
                   voiceFGDEANA (212), -- voice FGD Exchange Access North American
                   voiceDID (213), -- voice Direct Inward Dialing
                   mpegTransport (214), -- MPEG transport interface
                   sixToFour (215), -- 6to4 interface (DEPRECATED)
                   gtp (216), -- GTP (GPRS Tunneling Protocol)
                   pdnEtherLoop1 (217), -- Paradyne EtherLoop 1
                   pdnEtherLoop2 (218), -- Paradyne EtherLoop 2
                   opticalChannelGroup (219), -- Optical Channel Group
                   homepna (220), -- HomePNA ITU-T G.989				   
                   gfp (221), -- Generic Framing Procedure (GFP)
                   ciscoISLvlan (222), -- Layer 2 Virtual LAN using Cisco ISL
                   actelisMetaLOOP (223), -- Acteleis proprietary MetaLOOP High Speed Link 
                   fcipLink (224), -- FCIP Link 
                   rpr (225), -- Resilient Packet Ring Interface Type
                   qam (226), -- RF Qam Interface
                   lmp (227), -- Link Management Protocol
                   cblVectaStar (228), -- Cambridge Broadband Limited VectaStar
                   docsCableMCmtsDownstream (229), -- CATV Modular CMTS Downstream Interface
                   adsl2 (230) -- Asymmetric Digital Subscriber Loop Version 2
    			   }

IANAtunnelType ::= TEXTUAL-CONVENTION
    STATUS     current
    DESCRIPTION
            "The encapsulation method used by a tunnel. The value
            direct indicates that a packet is encapsulated
            directly within a normal IP header, with no
            intermediate header, and unicast to the remote tunnel
            endpoint (e.g., an RFC 2003 IP-in-IP tunnel, or an RFC
            1933 IPv6-in-IPv4 tunnel). The value minimal indicates
            that a Minimal Forwarding Header (RFC 2004) is
            inserted between the outer header and the payload
            packet. The value UDP indicates that the payload
            packet is encapsulated within a normal UDP packet
            (e.g., RFC 1234).

            The values sixToFour, sixOverFour, and isatap
            indicates that an IPv6 packet is encapsulated directly
            within an IPv4 header, with no intermediate header,
            and unicast to the destination determined by the 6to4,
            6over4, or ISATAP protocol.

            The remaining protocol-specific values indicate that a
            header of the protocol of that name is inserted
            between the outer header and the payload header.

            The assignment policy for IANAtunnelType values is
            identical to the policy for assigning IANAifType
            values."
    SYNTAX     INTEGER {
                   other(1),        -- none of the following
                   direct(2),       -- no intermediate header
                   gre(3),          -- GRE encapsulation
                   minimal(4),      -- Minimal encapsulation
                   l2tp(5),         -- L2TP encapsulation
                   pptp(6),         -- PPTP encapsulation
                   l2f(7),          -- L2F encapsulation
                   udp(8),          -- UDP encapsulation
                   atmp(9),         -- ATMP encapsulation
                   msdp(10),        -- MSDP encapsulation
                   sixToFour(11),   -- 6to4 encapsulation
                   sixOverFour(12), -- 6over4 encapsulation
                   isatap(13),      -- ISATAP encapsulation
                   teredo(14)       -- Teredo encapsulation
               }

END
IF-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, Counter32, Gauge32, Counter64,
    Integer32, TimeTicks, mib-2,
    NOTIFICATION-TYPE                        FROM SNMPv2-SMI
    TEXTUAL-CONVENTION, DisplayString,
    PhysAddress, TruthValue, RowStatus,
    TimeStamp, AutonomousType, TestAndIncr   FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP,
    NOTIFICATION-GROUP                       FROM SNMPv2-CONF
    snmpTraps                                FROM SNMPv2-MIB
    IANAifType                               FROM IANAifType-MIB;


ifMIB MODULE-IDENTITY
    LAST-UPDATED "200006140000Z"
    ORGANIZATION "IETF Interfaces MIB Working Group"
    CONTACT-INFO
            "   Keith McCloghrie
                Cisco Systems, Inc.
                170 West Tasman Drive
                San Jose, CA  95134-1706
                US

                408-526-5260
                kzm@cisco.com"
    DESCRIPTION
            "The MIB module to describe generic objects for network
            interface sub-layers.  This MIB is an updated version of
            MIB-II's ifTable, and incorporates the extensions defined in
            RFC 1229."

    REVISION      "200006140000Z"
    DESCRIPTION
            "Clarifications agreed upon by the Interfaces MIB WG, and
            published as RFC 2863."
    REVISION      "199602282155Z"
    DESCRIPTION
            "Revisions made by the Interfaces MIB WG, and published in
            RFC 2233."
    REVISION      "199311082155Z"
    DESCRIPTION
            "Initial revision, published as part of RFC 1573."
    ::= { mib-2 31 }


ifMIBObjects OBJECT IDENTIFIER ::= { ifMIB 1 }

interfaces   OBJECT IDENTIFIER ::= { mib-2 2 }

--
-- Textual Conventions
--


-- OwnerString has the same semantics as used in RFC 1271

OwnerString ::= TEXTUAL-CONVENTION
    DISPLAY-HINT "255a"
    STATUS       deprecated
    DESCRIPTION
            "This data type is used to model an administratively
            assigned name of the owner of a resource.  This information
            is taken from the NVT ASCII character set.  It is suggested
            that this name contain one or more of the following: ASCII
            form of the manager station's transport address, management
            station name (e.g., domain name), network management
            personnel's name, location, or phone number.  In some cases
            the agent itself will be the owner of an entry.  In these
            cases, this string shall be set to a string starting with
            'agent'."
    SYNTAX       OCTET STRING (SIZE(0..255))

-- InterfaceIndex contains the semantics of ifIndex and should be used
-- for any objects defined in other MIB modules that need these semantics.

InterfaceIndex ::= TEXTUAL-CONVENTION
    DISPLAY-HINT "d"
    STATUS       current
    DESCRIPTION

            "A unique value, greater than zero, for each interface or
            interface sub-layer in the managed system.  It is
            recommended that values are assigned contiguously starting
            from 1.  The value for each interface sub-layer must remain
            constant at least from one re-initialization of the entity's
            network management system to the next re-initialization."
    SYNTAX       Integer32 (1..2147483647)

InterfaceIndexOrZero ::= TEXTUAL-CONVENTION
    DISPLAY-HINT "d"
    STATUS       current
    DESCRIPTION
            "This textual convention is an extension of the
            InterfaceIndex convention.  The latter defines a greater
            than zero value used to identify an interface or interface
            sub-layer in the managed system.  This extension permits the
            additional value of zero.  the value zero is object-specific
            and must therefore be defined as part of the description of
            any object which uses this syntax.  Examples of the usage of
            zero might include situations where interface was unknown,
            or when none or all interfaces need to be referenced."
    SYNTAX       Integer32 (0..2147483647)

ifNumber  OBJECT-TYPE
    SYNTAX      Integer32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of network interfaces (regardless of their
            current state) present on this system."
    ::= { interfaces 1 }

ifTableLastChange  OBJECT-TYPE
    SYNTAX      TimeTicks
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of sysUpTime at the time of the last creation or
            deletion of an entry in the ifTable.  If the number of
            entries has been unchanged since the last re-initialization
            of the local network management subsystem, then this object
            contains a zero value."
    ::= { ifMIBObjects 5 }


-- the Interfaces table

-- The Interfaces table contains information on the entity's

-- interfaces.  Each sub-layer below the internetwork-layer
-- of a network interface is considered to be an interface.

ifTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF IfEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A list of interface entries.  The number of entries is
            given by the value of ifNumber."
    ::= { interfaces 2 }

ifEntry OBJECT-TYPE
    SYNTAX      IfEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "An entry containing management information applicable to a
            particular interface."
    INDEX   { ifIndex }
    ::= { ifTable 1 }

IfEntry ::=
    SEQUENCE {
        ifIndex                 InterfaceIndex,
        ifDescr                 DisplayString,
        ifType                  IANAifType,
        ifMtu                   Integer32,
        ifSpeed                 Gauge32,
        ifPhysAddress           PhysAddress,
        ifAdminStatus           INTEGER,
        ifOperStatus            INTEGER,
        ifLastChange            TimeTicks,
        ifInOctets              Counter32,
        ifInUcastPkts           Counter32,
        ifInNUcastPkts          Counter32,  -- deprecated
        ifInDiscards            Counter32,
        ifInErrors              Counter32,
        ifInUnknownProtos       Counter32,
        ifOutOctets             Counter32,
        ifOutUcastPkts          Counter32,
        ifOutNUcastPkts         Counter32,  -- deprecated
        ifOutDiscards           Counter32,
        ifOutErrors             Counter32,
        ifOutQLen               Gauge32,    -- deprecated
        ifSpecific              OBJECT IDENTIFIER -- deprecated
    }


ifIndex OBJECT-TYPE
    SYNTAX      InterfaceIndex
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
    ::= { ifEntry 1 }

ifDescr OBJECT-TYPE
    SYNTAX      DisplayString (SIZE (0..255))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
    ::= { ifEntry 2 }

ifType OBJECT-TYPE
    SYNTAX      IANAifType
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The type of interface.  Additional values for ifType are
            assigned by the Internet Assigned Numbers Authority (IANA),
            through updating the syntax of the IANAifType textual
            convention."
    ::= { ifEntry 3 }

ifMtu OBJECT-TYPE
    SYNTAX      Integer32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The size of the largest packet which can be sent/received
            on the interface, specified in octets.  For interfaces that
            are used for transmitting network datagrams, this is the
            size of the largest network datagram that can be sent on the
            interface."
    ::= { ifEntry 4 }

ifSpeed OBJECT-TYPE

    SYNTAX      Gauge32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "An estimate of the interface's current bandwidth in bits
            per second.  For interfaces which do not vary in bandwidth
            or for those where no accurate estimation can be made, this
            object should contain the nominal bandwidth.  If the
            bandwidth of the interface is greater than the maximum value
            reportable by this object then this object should report its
            maximum value (4,294,967,295) and ifHighSpeed must be used
            to report the interace's speed.  For a sub-layer which has
            no concept of bandwidth, this object should be zero."
    ::= { ifEntry 5 }

ifPhysAddress OBJECT-TYPE
    SYNTAX      PhysAddress
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The interface's address at its protocol sub-layer.  For
            example, for an 802.x interface, this object normally
            contains a MAC address.  The interface's media-specific MIB
            must define the bit and byte ordering and the format of the
            value of this object.  For interfaces which do not have such
            an address (e.g., a serial line), this object should contain
            an octet string of zero length."
    ::= { ifEntry 6 }

ifAdminStatus OBJECT-TYPE
    SYNTAX  INTEGER {
                up(1),       -- ready to pass packets
                down(2),
                testing(3)   -- in some test mode
            }
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The desired state of the interface.  The testing(3) state
            indicates that no operational packets can be passed.  When a
            managed system initializes, all interfaces start with
            ifAdminStatus in the down(2) state.  As a result of either
            explicit management action or per configuration information
            retained by the managed system, ifAdminStatus is then
            changed to either the up(1) or testing(3) states (or remains
            in the down(2) state)."
    ::= { ifEntry 7 }


ifOperStatus OBJECT-TYPE
    SYNTAX  INTEGER {
                up(1),        -- ready to pass packets
                down(2),
                testing(3),   -- in some test mode
                unknown(4),   -- status can not be determined
                              -- for some reason.
                dormant(5),
                notPresent(6),    -- some component is missing
                lowerLayerDown(7) -- down due to state of
                                  -- lower-layer interface(s)
            }
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The current operational state of the interface.  The
            testing(3) state indicates that no operational packets can
            be passed.  If ifAdminStatus is down(2) then ifOperStatus
            should be down(2).  If ifAdminStatus is changed to up(1)
            then ifOperStatus should change to up(1) if the interface is
            ready to transmit and receive network traffic; it should
            change to dormant(5) if the interface is waiting for
            external actions (such as a serial line waiting for an
            incoming connection); it should remain in the down(2) state
            if and only if there is a fault that prevents it from going
            to the up(1) state; it should remain in the notPresent(6)
            state if the interface has missing (typically, hardware)
            components."
    ::= { ifEntry 8 }

ifLastChange OBJECT-TYPE
    SYNTAX      TimeTicks
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of sysUpTime at the time the interface entered
            its current operational state.  If the current state was
            entered prior to the last re-initialization of the local
            network management subsystem, then this object contains a
            zero value."
    ::= { ifEntry 9 }

ifInOctets OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of octets received on the interface,

            including framing characters.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 10 }

ifInUcastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were not addressed to a multicast
            or broadcast address at this sub-layer.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 11 }

ifInNUcastPkts OBJECT-TYPE
    SYNTAX  Counter32
    MAX-ACCESS  read-only
    STATUS      deprecated
    DESCRIPTION
            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a multicast or
            broadcast address at this sub-layer.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime.

            This object is deprecated in favour of ifInMulticastPkts and
            ifInBroadcastPkts."
    ::= { ifEntry 12 }

ifInDiscards OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of inbound packets which were chosen to be
            discarded even though no errors had been detected to prevent

            their being deliverable to a higher-layer protocol.  One
            possible reason for discarding such a packet could be to
            free up buffer space.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 13 }

ifInErrors OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "For packet-oriented interfaces, the number of inbound
            packets that contained errors preventing them from being
            deliverable to a higher-layer protocol.  For character-
            oriented or fixed-length interfaces, the number of inbound
            transmission units that contained errors preventing them
            from being deliverable to a higher-layer protocol.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 14 }

ifInUnknownProtos OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "For packet-oriented interfaces, the number of packets
            received via the interface which were discarded because of
            an unknown or unsupported protocol.  For character-oriented
            or fixed-length interfaces that support protocol
            multiplexing the number of transmission units received via
            the interface which were discarded because of an unknown or
            unsupported protocol.  For any interface that does not
            support protocol multiplexing, this counter will always be
            0.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 15 }

ifOutOctets OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of octets transmitted out of the
            interface, including framing characters.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 16 }

ifOutUcastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of packets that higher-level protocols
            requested be transmitted, and which were not addressed to a
            multicast or broadcast address at this sub-layer, including
            those that were discarded or not sent.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 17 }

ifOutNUcastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      deprecated
    DESCRIPTION
            "The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            multicast or broadcast address at this sub-layer, including
            those that were discarded or not sent.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime.

            This object is deprecated in favour of ifOutMulticastPkts
            and ifOutBroadcastPkts."
    ::= { ifEntry 18 }

ifOutDiscards OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of outbound packets which were chosen to be
            discarded even though no errors had been detected to prevent
            their being transmitted.  One possible reason for discarding
            such a packet could be to free up buffer space.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 19 }

ifOutErrors OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "For packet-oriented interfaces, the number of outbound
            packets that could not be transmitted because of errors.
            For character-oriented or fixed-length interfaces, the
            number of outbound transmission units that could not be
            transmitted because of errors.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifEntry 20 }

ifOutQLen OBJECT-TYPE
    SYNTAX      Gauge32
    MAX-ACCESS  read-only
    STATUS      deprecated
    DESCRIPTION
            "The length of the output packet queue (in packets)."
    ::= { ifEntry 21 }

ifSpecific OBJECT-TYPE
    SYNTAX      OBJECT IDENTIFIER
    MAX-ACCESS  read-only
    STATUS      deprecated
    DESCRIPTION
            "A reference to MIB definitions specific to the particular
            media being used to realize the interface.  It is

            recommended that this value point to an instance of a MIB
            object in the media-specific MIB, i.e., that this object
            have the semantics associated with the InstancePointer
            textual convention defined in RFC 2579.  In fact, it is
            recommended that the media-specific MIB specify what value
            ifSpecific should/can take for values of ifType.  If no MIB
            definitions specific to the particular media are available,
            the value should be set to the OBJECT IDENTIFIER { 0 0 }."
    ::= { ifEntry 22 }



--
--   Extension to the interface table
--
-- This table replaces the ifExtnsTable table.
--

ifXTable        OBJECT-TYPE
    SYNTAX      SEQUENCE OF IfXEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A list of interface entries.  The number of entries is
            given by the value of ifNumber.  This table contains
            additional objects for the interface table."
    ::= { ifMIBObjects 1 }

ifXEntry        OBJECT-TYPE
    SYNTAX      IfXEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "An entry containing additional management information
            applicable to a particular interface."
    AUGMENTS    { ifEntry }
    ::= { ifXTable 1 }

IfXEntry ::=
    SEQUENCE {
        ifName                  DisplayString,
        ifInMulticastPkts       Counter32,
        ifInBroadcastPkts       Counter32,
        ifOutMulticastPkts      Counter32,
        ifOutBroadcastPkts      Counter32,
        ifHCInOctets            Counter64,
        ifHCInUcastPkts         Counter64,
        ifHCInMulticastPkts     Counter64,

        ifHCInBroadcastPkts     Counter64,
        ifHCOutOctets           Counter64,
        ifHCOutUcastPkts        Counter64,
        ifHCOutMulticastPkts    Counter64,
        ifHCOutBroadcastPkts    Counter64,
        ifLinkUpDownTrapEnable  INTEGER,
        ifHighSpeed             Gauge32,
        ifPromiscuousMode       TruthValue,
        ifConnectorPresent      TruthValue,
        ifAlias                 DisplayString,
        ifCounterDiscontinuityTime TimeStamp
    }


ifName OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The textual name of the interface.  The value of this
            object should be the name of the interface as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name, such as `le0' or a simple port number, such as `1',
            depending on the interface naming syntax of the device.  If
            several entries in the ifTable together represent a single
            interface as named by the device, then each will have the
            same value of ifName.  Note that for an agent which responds
            to SNMP queries concerning an interface on some other
            (proxied) device, then the value of ifName for such an
            interface is the proxied device's local name for it.

            If there is no local name, or this object is otherwise not
            applicable, then this object contains a zero-length string."
    ::= { ifXEntry 1 }

ifInMulticastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a multicast
            address at this sub-layer.  For a MAC layer protocol, this
            includes both Group and Functional addresses.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other

            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 2 }

ifInBroadcastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a broadcast
            address at this sub-layer.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 3 }

ifOutMulticastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            multicast address at this sub-layer, including those that
            were discarded or not sent.  For a MAC layer protocol, this
            includes both Group and Functional addresses.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 4 }

ifOutBroadcastPkts OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            broadcast address at this sub-layer, including those that
            were discarded or not sent.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other

            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 5 }

--
-- High Capacity Counter objects.  These objects are all
-- 64 bit versions of the "basic" ifTable counters.  These
-- objects all have the same basic semantics as their 32-bit
-- counterparts, however, their syntax has been extended
-- to 64 bits.
--

ifHCInOctets OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of octets received on the interface,
            including framing characters.  This object is a 64-bit
            version of ifInOctets.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 6 }

ifHCInUcastPkts OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were not addressed to a multicast
            or broadcast address at this sub-layer.  This object is a
            64-bit version of ifInUcastPkts.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 7 }

ifHCInMulticastPkts OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION

            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a multicast
            address at this sub-layer.  For a MAC layer protocol, this
            includes both Group and Functional addresses.  This object
            is a 64-bit version of ifInMulticastPkts.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 8 }

ifHCInBroadcastPkts OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a broadcast
            address at this sub-layer.  This object is a 64-bit version
            of ifInBroadcastPkts.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 9 }

ifHCOutOctets OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of octets transmitted out of the
            interface, including framing characters.  This object is a
            64-bit version of ifOutOctets.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 10 }

ifHCOutUcastPkts OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION

            "The total number of packets that higher-level protocols
            requested be transmitted, and which were not addressed to a
            multicast or broadcast address at this sub-layer, including
            those that were discarded or not sent.  This object is a
            64-bit version of ifOutUcastPkts.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 11 }

ifHCOutMulticastPkts OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            multicast address at this sub-layer, including those that
            were discarded or not sent.  For a MAC layer protocol, this
            includes both Group and Functional addresses.  This object
            is a 64-bit version of ifOutMulticastPkts.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 12 }

ifHCOutBroadcastPkts OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            broadcast address at this sub-layer, including those that
            were discarded or not sent.  This object is a 64-bit version
            of ifOutBroadcastPkts.

            Discontinuities in the value of this counter can occur at
            re-initialization of the management system, and at other
            times as indicated by the value of
            ifCounterDiscontinuityTime."
    ::= { ifXEntry 13 }

ifLinkUpDownTrapEnable  OBJECT-TYPE

    SYNTAX      INTEGER { enabled(1), disabled(2) }
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "Indicates whether linkUp/linkDown traps should be generated
            for this interface.

            By default, this object should have the value enabled(1) for
            interfaces which do not operate on 'top' of any other
            interface (as defined in the ifStackTable), and disabled(2)
            otherwise."
    ::= { ifXEntry 14 }

ifHighSpeed OBJECT-TYPE
    SYNTAX      Gauge32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "An estimate of the interface's current bandwidth in units
            of 1,000,000 bits per second.  If this object reports a
            value of `n' then the speed of the interface is somewhere in
            the range of `n-500,000' to `n+499,999'.  For interfaces
            which do not vary in bandwidth or for those where no
            accurate estimation can be made, this object should contain
            the nominal bandwidth.  For a sub-layer which has no concept
            of bandwidth, this object should be zero."
    ::= { ifXEntry 15 }

ifPromiscuousMode  OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "This object has a value of false(2) if this interface only
            accepts packets/frames that are addressed to this station.
            This object has a value of true(1) when the station accepts
            all packets/frames transmitted on the media.  The value
            true(1) is only legal on certain types of media.  If legal,
            setting this object to a value of true(1) may require the
            interface to be reset before becoming effective.

            The value of ifPromiscuousMode does not affect the reception
            of broadcast and multicast packets/frames by the interface."
    ::= { ifXEntry 16 }

ifConnectorPresent   OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-only

    STATUS      current
    DESCRIPTION
            "This object has the value 'true(1)' if the interface
            sublayer has a physical connector and the value 'false(2)'
            otherwise."
    ::= { ifXEntry 17 }

ifAlias   OBJECT-TYPE
    SYNTAX      DisplayString (SIZE(0..64))
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "This object is an 'alias' name for the interface as
            specified by a network manager, and provides a non-volatile
            'handle' for the interface.

            On the first instantiation of an interface, the value of
            ifAlias associated with that interface is the zero-length
            string.  As and when a value is written into an instance of
            ifAlias through a network management set operation, then the
            agent must retain the supplied value in the ifAlias instance
            associated with the same interface for as long as that
            interface remains instantiated, including across all re-
            initializations/reboots of the network management system,
            including those which result in a change of the interface's
            ifIndex value.

            An example of the value which a network manager might store
            in this object for a WAN interface is the (Telco's) circuit
            number/identifier of the interface.

            Some agents may support write-access only for interfaces
            having particular values of ifType.  An agent which supports
            write access to this object is required to keep the value in
            non-volatile storage, but it may limit the length of new
            values depending on how much storage is already occupied by
            the current values for other interfaces."
    ::= { ifXEntry 18 }

ifCounterDiscontinuityTime OBJECT-TYPE
    SYNTAX      TimeStamp
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of sysUpTime on the most recent occasion at which
            any one or more of this interface's counters suffered a
            discontinuity.  The relevant counters are the specific
            instances associated with this interface of any Counter32 or

            Counter64 object contained in the ifTable or ifXTable.  If
            no such discontinuities have occurred since the last re-
            initialization of the local management subsystem, then this
            object contains a zero value."
    ::= { ifXEntry 19 }

--           The Interface Stack Group
--
-- Implementation of this group is optional, but strongly recommended
-- for all systems
--

ifStackTable  OBJECT-TYPE
     SYNTAX        SEQUENCE OF IfStackEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
            "The table containing information on the relationships
            between the multiple sub-layers of network interfaces.  In
            particular, it contains information on which sub-layers run
            'on top of' which other sub-layers, where each sub-layer
            corresponds to a conceptual row in the ifTable.  For
            example, when the sub-layer with ifIndex value x runs over
            the sub-layer with ifIndex value y, then this table
            contains:

              ifStackStatus.x.y=active

            For each ifIndex value, I, which identifies an active
            interface, there are always at least two instantiated rows
            in this table associated with I.  For one of these rows, I
            is the value of ifStackHigherLayer; for the other, I is the
            value of ifStackLowerLayer.  (If I is not involved in
            multiplexing, then these are the only two rows associated
            with I.)

            For example, two rows exist even for an interface which has
            no others stacked on top or below it:

              ifStackStatus.0.x=active
              ifStackStatus.x.0=active "
     ::= { ifMIBObjects 2 }


ifStackEntry  OBJECT-TYPE
     SYNTAX        IfStackEntry
     MAX-ACCESS    not-accessible
     STATUS        current

     DESCRIPTION
            "Information on a particular relationship between two sub-
            layers, specifying that one sub-layer runs on 'top' of the
            other sub-layer.  Each sub-layer corresponds to a conceptual
            row in the ifTable."
     INDEX { ifStackHigherLayer, ifStackLowerLayer }
     ::= { ifStackTable 1 }


IfStackEntry ::=
    SEQUENCE {
        ifStackHigherLayer  InterfaceIndexOrZero,
        ifStackLowerLayer   InterfaceIndexOrZero,
        ifStackStatus       RowStatus
     }


ifStackHigherLayer  OBJECT-TYPE
     SYNTAX        InterfaceIndexOrZero
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
            "The value of ifIndex corresponding to the higher sub-layer
            of the relationship, i.e., the sub-layer which runs on 'top'
            of the sub-layer identified by the corresponding instance of
            ifStackLowerLayer.  If there is no higher sub-layer (below
            the internetwork layer), then this object has the value 0."
     ::= { ifStackEntry 1 }


ifStackLowerLayer  OBJECT-TYPE
     SYNTAX        InterfaceIndexOrZero
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
            "The value of ifIndex corresponding to the lower sub-layer
            of the relationship, i.e., the sub-layer which runs 'below'
            the sub-layer identified by the corresponding instance of
            ifStackHigherLayer.  If there is no lower sub-layer, then
            this object has the value 0."
     ::= { ifStackEntry 2 }


ifStackStatus  OBJECT-TYPE
    SYNTAX         RowStatus
    MAX-ACCESS     read-create
    STATUS         current
    DESCRIPTION

            "The status of the relationship between two sub-layers.

            Changing the value of this object from 'active' to
            'notInService' or 'destroy' will likely have consequences up
            and down the interface stack.  Thus, write access to this
            object is likely to be inappropriate for some types of
            interfaces, and many implementations will choose not to
            support write-access for any type of interface."
    ::= { ifStackEntry 3 }

ifStackLastChange OBJECT-TYPE
    SYNTAX         TimeTicks
    MAX-ACCESS     read-only
    STATUS         current
    DESCRIPTION
            "The value of sysUpTime at the time of the last change of
            the (whole) interface stack.  A change of the interface
            stack is defined to be any creation, deletion, or change in
            value of any instance of ifStackStatus.  If the interface
            stack has been unchanged since the last re-initialization of
            the local network management subsystem, then this object
            contains a zero value."
    ::= { ifMIBObjects 6 }


--   Generic Receive Address Table
--
-- This group of objects is mandatory for all types of
-- interfaces which can receive packets/frames addressed to
-- more than one address.
--
-- This table replaces the ifExtnsRcvAddr table.  The main
-- difference is that this table makes use of the RowStatus
-- textual convention, while ifExtnsRcvAddr did not.

ifRcvAddressTable  OBJECT-TYPE
    SYNTAX      SEQUENCE OF IfRcvAddressEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "This table contains an entry for each address (broadcast,
            multicast, or uni-cast) for which the system will receive
            packets/frames on a particular interface, except as follows:

            - for an interface operating in promiscuous mode, entries
            are only required for those addresses for which the system
            would receive frames were it not operating in promiscuous
            mode.

            - for 802.5 functional addresses, only one entry is
            required, for the address which has the functional address
            bit ANDed with the bit mask of all functional addresses for
            which the interface will accept frames.

            A system is normally able to use any unicast address which
            corresponds to an entry in this table as a source address."
    ::= { ifMIBObjects 4 }

ifRcvAddressEntry  OBJECT-TYPE
    SYNTAX      IfRcvAddressEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A list of objects identifying an address for which the
            system will accept packets/frames on the particular
            interface identified by the index value ifIndex."
    INDEX  { ifIndex, ifRcvAddressAddress }
    ::= { ifRcvAddressTable 1 }

IfRcvAddressEntry ::=
    SEQUENCE {
        ifRcvAddressAddress   PhysAddress,
        ifRcvAddressStatus    RowStatus,
        ifRcvAddressType      INTEGER
    }

ifRcvAddressAddress OBJECT-TYPE
    SYNTAX      PhysAddress
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "An address for which the system will accept packets/frames
            on this entry's interface."
    ::= { ifRcvAddressEntry 1 }

ifRcvAddressStatus OBJECT-TYPE
    SYNTAX      RowStatus
    MAX-ACCESS  read-create
    STATUS      current
    DESCRIPTION
            "This object is used to create and delete rows in the
            ifRcvAddressTable."

    ::= { ifRcvAddressEntry 2 }

ifRcvAddressType OBJECT-TYPE
    SYNTAX      INTEGER {

                    other(1),
                    volatile(2),
                    nonVolatile(3)
                }

    MAX-ACCESS  read-create
    STATUS      current
    DESCRIPTION
            "This object has the value nonVolatile(3) for those entries
            in the table which are valid and will not be deleted by the
            next restart of the managed system.  Entries having the
            value volatile(2) are valid and exist, but have not been
            saved, so that will not exist after the next restart of the
            managed system.  Entries having the value other(1) are valid
            and exist but are not classified as to whether they will
            continue to exist after the next restart."

    DEFVAL  { volatile }
    ::= { ifRcvAddressEntry 3 }

-- definition of interface-related traps.

linkDown NOTIFICATION-TYPE
    OBJECTS { ifIndex, ifAdminStatus, ifOperStatus }
    STATUS  current
    DESCRIPTION
            "A linkDown trap signifies that the SNMP entity, acting in
            an agent role, has detected that the ifOperStatus object for
            one of its communication links is about to enter the down
            state from some other state (but not from the notPresent
            state).  This other state is indicated by the included value
            of ifOperStatus."
    ::= { snmpTraps 3 }

linkUp NOTIFICATION-TYPE
    OBJECTS { ifIndex, ifAdminStatus, ifOperStatus }
    STATUS  current
    DESCRIPTION
            "A linkUp trap signifies that the SNMP entity, acting in an
            agent role, has detected that the ifOperStatus object for
            one of its communication links left the down state and
            transitioned into some other state (but not into the
            notPresent state).  This other state is indicated by the
            included value of ifOperStatus."
    ::= { snmpTraps 4 }

-- conformance information


ifConformance OBJECT IDENTIFIER ::= { ifMIB 2 }

ifGroups      OBJECT IDENTIFIER ::= { ifConformance 1 }
ifCompliances OBJECT IDENTIFIER ::= { ifConformance 2 }


-- compliance statements

ifCompliance3 MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
            "The compliance statement for SNMP entities which have
            network interfaces."

    MODULE  -- this module
        MANDATORY-GROUPS { ifGeneralInformationGroup,
                           linkUpDownNotificationsGroup }

-- The groups:
--        ifFixedLengthGroup
--        ifHCFixedLengthGroup
--        ifPacketGroup
--        ifHCPacketGroup
--        ifVHCPacketGroup
-- are mutually exclusive; at most one of these groups is implemented
-- for a particular interface.  When any of these groups is implemented
-- for a particular interface, then ifCounterDiscontinuityGroup must
-- also be implemented for that interface.


        GROUP       ifFixedLengthGroup
        DESCRIPTION
            "This group is mandatory for those network interfaces which
            are character-oriented or transmit data in fixed-length
            transmission units, and for which the value of the
            corresponding instance of ifSpeed is less than or equal to
            20,000,000 bits/second."

        GROUP       ifHCFixedLengthGroup
        DESCRIPTION
            "This group is mandatory for those network interfaces which
            are character-oriented or transmit data in fixed-length
            transmission units, and for which the value of the
            corresponding instance of ifSpeed is greater than 20,000,000
            bits/second."

        GROUP       ifPacketGroup
        DESCRIPTION

            "This group is mandatory for those network interfaces which
            are packet-oriented, and for which the value of the
            corresponding instance of ifSpeed is less than or equal to
            20,000,000 bits/second."

        GROUP       ifHCPacketGroup
        DESCRIPTION
            "This group is mandatory only for those network interfaces
            which are packet-oriented and for which the value of the
            corresponding instance of ifSpeed is greater than 20,000,000
            bits/second but less than or equal to 650,000,000
            bits/second."

        GROUP       ifVHCPacketGroup
        DESCRIPTION
            "This group is mandatory only for those network interfaces
            which are packet-oriented and for which the value of the
            corresponding instance of ifSpeed is greater than
            650,000,000 bits/second."


        GROUP       ifCounterDiscontinuityGroup
        DESCRIPTION
            "This group is mandatory for those network interfaces that
            are required to maintain counters (i.e., those for which one
            of the ifFixedLengthGroup, ifHCFixedLengthGroup,
            ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
            mandatory)."


        GROUP       ifRcvAddressGroup
        DESCRIPTION
            "The applicability of this group MUST be defined by the
            media-specific MIBs.  Media-specific MIBs must define the
            exact meaning, use, and semantics of the addresses in this
            group."

        OBJECT      ifLinkUpDownTrapEnable
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      ifPromiscuousMode
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT       ifAdminStatus

        SYNTAX       INTEGER { up(1), down(2) }
        MIN-ACCESS   read-only
        DESCRIPTION
            "Write access is not required, nor is support for the value
            testing(3)."

        OBJECT       ifAlias
        MIN-ACCESS   read-only
        DESCRIPTION
            "Write access is not required."

    ::= { ifCompliances 3 }

-- units of conformance

ifGeneralInformationGroup    OBJECT-GROUP
    OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
              ifAdminStatus, ifOperStatus, ifLastChange,
              ifLinkUpDownTrapEnable, ifConnectorPresent,
              ifHighSpeed, ifName, ifNumber, ifAlias,
              ifTableLastChange }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information applicable to
            all network interfaces."
    ::= { ifGroups 10 }

-- the following five groups are mutually exclusive; at most
-- one of these groups is implemented for any interface

ifFixedLengthGroup    OBJECT-GROUP
    OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
              ifInErrors, ifOutErrors }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information specific to
            non-high speed (non-high speed interfaces transmit and
            receive at speeds less than or equal to 20,000,000
            bits/second) character-oriented or fixed-length-transmission
            network interfaces."
    ::= { ifGroups 2 }

ifHCFixedLengthGroup    OBJECT-GROUP
    OBJECTS { ifHCInOctets, ifHCOutOctets,
              ifInOctets, ifOutOctets, ifInUnknownProtos,
              ifInErrors, ifOutErrors }
    STATUS  current
    DESCRIPTION

            "A collection of objects providing information specific to
            high speed (greater than 20,000,000 bits/second) character-
            oriented or fixed-length-transmission network interfaces."
    ::= { ifGroups 3 }

ifPacketGroup    OBJECT-GROUP
    OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
              ifInErrors, ifOutErrors,
              ifMtu, ifInUcastPkts, ifInMulticastPkts,
              ifInBroadcastPkts, ifInDiscards,
              ifOutUcastPkts, ifOutMulticastPkts,
              ifOutBroadcastPkts, ifOutDiscards,
              ifPromiscuousMode }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information specific to
            non-high speed (non-high speed interfaces transmit and
            receive at speeds less than or equal to 20,000,000
            bits/second) packet-oriented network interfaces."
    ::= { ifGroups 4 }

ifHCPacketGroup    OBJECT-GROUP
    OBJECTS { ifHCInOctets, ifHCOutOctets,
              ifInOctets, ifOutOctets, ifInUnknownProtos,
              ifInErrors, ifOutErrors,
              ifMtu, ifInUcastPkts, ifInMulticastPkts,
              ifInBroadcastPkts, ifInDiscards,
              ifOutUcastPkts, ifOutMulticastPkts,
              ifOutBroadcastPkts, ifOutDiscards,
              ifPromiscuousMode }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information specific to
            high speed (greater than 20,000,000 bits/second but less
            than or equal to 650,000,000 bits/second) packet-oriented
            network interfaces."
    ::= { ifGroups 5 }

ifVHCPacketGroup    OBJECT-GROUP
    OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
              ifHCInBroadcastPkts, ifHCOutUcastPkts,
              ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
              ifHCInOctets, ifHCOutOctets,
              ifInOctets, ifOutOctets, ifInUnknownProtos,
              ifInErrors, ifOutErrors,
              ifMtu, ifInUcastPkts, ifInMulticastPkts,
              ifInBroadcastPkts, ifInDiscards,
              ifOutUcastPkts, ifOutMulticastPkts,

              ifOutBroadcastPkts, ifOutDiscards,
              ifPromiscuousMode }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information specific to
            higher speed (greater than 650,000,000 bits/second) packet-
            oriented network interfaces."
    ::= { ifGroups 6 }

ifRcvAddressGroup    OBJECT-GROUP
    OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information on the
            multiple addresses which an interface receives."
    ::= { ifGroups 7 }

ifStackGroup2    OBJECT-GROUP
    OBJECTS { ifStackStatus, ifStackLastChange }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information on the
            layering of MIB-II interfaces."
    ::= { ifGroups 11 }

ifCounterDiscontinuityGroup  OBJECT-GROUP
    OBJECTS { ifCounterDiscontinuityTime }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing information specific to
            interface counter discontinuities."
    ::= { ifGroups 13 }

linkUpDownNotificationsGroup  NOTIFICATION-GROUP
    NOTIFICATIONS { linkUp, linkDown }
    STATUS  current
    DESCRIPTION
            "The notifications which indicate specific changes in the
            value of ifOperStatus."
    ::= { ifGroups 14 }

-- Deprecated Definitions - Objects


--
--    The Interface Test Table
--
-- This group of objects is optional.  However, a media-specific

-- MIB may make implementation of this group mandatory.
--
-- This table replaces the ifExtnsTestTable
--

ifTestTable   OBJECT-TYPE
    SYNTAX      SEQUENCE OF IfTestEntry
    MAX-ACCESS  not-accessible
    STATUS      deprecated
    DESCRIPTION
            "This table contains one entry per interface.  It defines
            objects which allow a network manager to instruct an agent
            to test an interface for various faults.  Tests for an
            interface are defined in the media-specific MIB for that
            interface.  After invoking a test, the object ifTestResult
            can be read to determine the outcome.  If an agent can not
            perform the test, ifTestResult is set to so indicate.  The
            object ifTestCode can be used to provide further test-
            specific or interface-specific (or even enterprise-specific)
            information concerning the outcome of the test.  Only one
            test can be in progress on each interface at any one time.
            If one test is in progress when another test is invoked, the
            second test is rejected.  Some agents may reject a test when
            a prior test is active on another interface.

            Before starting a test, a manager-station must first obtain
            'ownership' of the entry in the ifTestTable for the
            interface to be tested.  This is accomplished with the
            ifTestId and ifTestStatus objects as follows:

          try_again:
              get (ifTestId, ifTestStatus)
              while (ifTestStatus != notInUse)
                  /*
                   * Loop while a test is running or some other
                   * manager is configuring a test.
                   */
                  short delay
                  get (ifTestId, ifTestStatus)
              }

              /*
               * Is not being used right now -- let's compete
               * to see who gets it.
               */
              lock_value = ifTestId

              if ( set(ifTestId = lock_value, ifTestStatus = inUse,

                       ifTestOwner = 'my-IP-address') == FAILURE)
                  /*
                   * Another manager got the ifTestEntry -- go
                   * try again
                   */
                  goto try_again;

              /*
               * I have the lock
               */
              set up any test parameters.

              /*
               * This starts the test
               */
              set(ifTestType = test_to_run);

              wait for test completion by polling ifTestResult

              when test completes, agent sets ifTestResult
                   agent also sets ifTestStatus = 'notInUse'

              retrieve any additional test results, and ifTestId

              if (ifTestId == lock_value+1) results are valid

            A manager station first retrieves the value of the
            appropriate ifTestId and ifTestStatus objects, periodically
            repeating the retrieval if necessary, until the value of
            ifTestStatus is 'notInUse'.  The manager station then tries
            to set the same ifTestId object to the value it just
            retrieved, the same ifTestStatus object to 'inUse', and the
            corresponding ifTestOwner object to a value indicating
            itself.  If the set operation succeeds then the manager has
            obtained ownership of the ifTestEntry, and the value of the
            ifTestId object is incremented by the agent (per the
            semantics of TestAndIncr).  Failure of the set operation
            indicates that some other manager has obtained ownership of
            the ifTestEntry.

            Once ownership is obtained, any test parameters can be
            setup, and then the test is initiated by setting ifTestType.
            On completion of the test, the agent sets ifTestStatus to
            'notInUse'.  Once this occurs, the manager can retrieve the
            results.  In the (rare) event that the invocation of tests
            by two network managers were to overlap, then there would be
            a possibility that the first test's results might be
            overwritten by the second test's results prior to the first

            results being read.  This unlikely circumstance can be
            detected by a network manager retrieving ifTestId at the
            same time as retrieving the test results, and ensuring that
            the results are for the desired request.

            If ifTestType is not set within an abnormally long period of
            time after ownership is obtained, the agent should time-out
            the manager, and reset the value of the ifTestStatus object
            back to 'notInUse'.  It is suggested that this time-out
            period be 5 minutes.

            In general, a management station must not retransmit a
            request to invoke a test for which it does not receive a
            response; instead, it properly inspects an agent's MIB to
            determine if the invocation was successful.  Only if the
            invocation was unsuccessful, is the invocation request
            retransmitted.

            Some tests may require the interface to be taken off-line in
            order to execute them, or may even require the agent to
            reboot after completion of the test.  In these
            circumstances, communication with the management station
            invoking the test may be lost until after completion of the
            test.  An agent is not required to support such tests.
            However, if such tests are supported, then the agent should
            make every effort to transmit a response to the request
            which invoked the test prior to losing communication.  When
            the agent is restored to normal service, the results of the
            test are properly made available in the appropriate objects.
            Note that this requires that the ifIndex value assigned to
            an interface must be unchanged even if the test causes a
            reboot.  An agent must reject any test for which it cannot,
            perhaps due to resource constraints, make available at least
            the minimum amount of information after that test
            completes."
    ::= { ifMIBObjects 3 }

ifTestEntry OBJECT-TYPE
    SYNTAX       IfTestEntry
    MAX-ACCESS   not-accessible
    STATUS       deprecated
    DESCRIPTION
            "An entry containing objects for invoking tests on an
            interface."
    AUGMENTS  { ifEntry }
    ::= { ifTestTable 1 }

IfTestEntry ::=

    SEQUENCE {
        ifTestId           TestAndIncr,
        ifTestStatus       INTEGER,
        ifTestType         AutonomousType,
        ifTestResult       INTEGER,
        ifTestCode         OBJECT IDENTIFIER,
        ifTestOwner        OwnerString
    }

ifTestId         OBJECT-TYPE
    SYNTAX       TestAndIncr
    MAX-ACCESS   read-write
    STATUS       deprecated
    DESCRIPTION
            "This object identifies the current invocation of the
            interface's test."
    ::= { ifTestEntry 1 }

ifTestStatus     OBJECT-TYPE
    SYNTAX       INTEGER { notInUse(1), inUse(2) }
    MAX-ACCESS   read-write
    STATUS       deprecated
    DESCRIPTION
            "This object indicates whether or not some manager currently
            has the necessary 'ownership' required to invoke a test on
            this interface.  A write to this object is only successful
            when it changes its value from 'notInUse(1)' to 'inUse(2)'.
            After completion of a test, the agent resets the value back
            to 'notInUse(1)'."
    ::= { ifTestEntry 2 }

ifTestType       OBJECT-TYPE
    SYNTAX       AutonomousType
    MAX-ACCESS   read-write
    STATUS       deprecated
    DESCRIPTION
            "A control variable used to start and stop operator-
            initiated interface tests.  Most OBJECT IDENTIFIER values
            assigned to tests are defined elsewhere, in association with
            specific types of interface.  However, this document assigns
            a value for a full-duplex loopback test, and defines the
            special meanings of the subject identifier:

                noTest  OBJECT IDENTIFIER ::= { 0 0 }

            When the value noTest is written to this object, no action
            is taken unless a test is in progress, in which case the
            test is aborted.  Writing any other value to this object is

            only valid when no test is currently in progress, in which
            case the indicated test is initiated.

            When read, this object always returns the most recent value
            that ifTestType was set to.  If it has not been set since
            the last initialization of the network management subsystem
            on the agent, a value of noTest is returned."
    ::= { ifTestEntry 3 }

ifTestResult  OBJECT-TYPE
    SYNTAX       INTEGER {
                     none(1),          -- no test yet requested
                     success(2),
                     inProgress(3),
                     notSupported(4),
                     unAbleToRun(5),   -- due to state of system
                     aborted(6),
                     failed(7)
                 }
    MAX-ACCESS   read-only
    STATUS       deprecated
    DESCRIPTION
            "This object contains the result of the most recently
            requested test, or the value none(1) if no tests have been
            requested since the last reset.  Note that this facility
            provides no provision for saving the results of one test
            when starting another, as could be required if used by
            multiple managers concurrently."
    ::= { ifTestEntry 4 }

ifTestCode  OBJECT-TYPE
    SYNTAX       OBJECT IDENTIFIER
    MAX-ACCESS   read-only
    STATUS       deprecated
    DESCRIPTION
            "This object contains a code which contains more specific
            information on the test result, for example an error-code
            after a failed test.  Error codes and other values this
            object may take are specific to the type of interface and/or
            test.  The value may have the semantics of either the
            AutonomousType or InstancePointer textual conventions as
            defined in RFC 2579.  The identifier:

                testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }

            is defined for use if no additional result code is
            available."
    ::= { ifTestEntry 5 }

ifTestOwner      OBJECT-TYPE
    SYNTAX       OwnerString
    MAX-ACCESS   read-write
    STATUS       deprecated
    DESCRIPTION
            "The entity which currently has the 'ownership' required to
            invoke a test on this interface."
    ::= { ifTestEntry 6 }

-- Deprecated Definitions - Groups


ifGeneralGroup    OBJECT-GROUP
    OBJECTS { ifDescr, ifType, ifSpeed, ifPhysAddress,
              ifAdminStatus, ifOperStatus, ifLastChange,
              ifLinkUpDownTrapEnable, ifConnectorPresent,
              ifHighSpeed, ifName }
    STATUS  deprecated
    DESCRIPTION
            "A collection of objects deprecated in favour of
            ifGeneralInformationGroup."
    ::= { ifGroups 1 }


ifTestGroup    OBJECT-GROUP
    OBJECTS { ifTestId, ifTestStatus, ifTestType,
              ifTestResult, ifTestCode, ifTestOwner }
    STATUS  deprecated
    DESCRIPTION
            "A collection of objects providing the ability to invoke
            tests on an interface."
    ::= { ifGroups 8 }


ifStackGroup    OBJECT-GROUP
    OBJECTS { ifStackStatus }
    STATUS  deprecated
    DESCRIPTION
            "The previous collection of objects providing information on
            the layering of MIB-II interfaces."
    ::= { ifGroups 9 }


ifOldObjectsGroup    OBJECT-GROUP
    OBJECTS { ifInNUcastPkts, ifOutNUcastPkts,
              ifOutQLen, ifSpecific }
    STATUS  deprecated
    DESCRIPTION

            "The collection of objects deprecated from the original MIB-
            II interfaces group."
    ::= { ifGroups 12 }

-- Deprecated Definitions - Compliance

ifCompliance MODULE-COMPLIANCE
    STATUS  deprecated
    DESCRIPTION
            "A compliance statement defined in a previous version of
            this MIB module, for SNMP entities which have network
            interfaces."

    MODULE  -- this module
        MANDATORY-GROUPS { ifGeneralGroup, ifStackGroup }

        GROUP       ifFixedLengthGroup
        DESCRIPTION
            "This group is mandatory for all network interfaces which
            are character-oriented or transmit data in fixed-length
            transmission units."

        GROUP       ifHCFixedLengthGroup
        DESCRIPTION
            "This group is mandatory only for those network interfaces
            which are character-oriented or transmit data in fixed-
            length transmission units, and for which the value of the
            corresponding instance of ifSpeed is greater than 20,000,000
            bits/second."

        GROUP       ifPacketGroup
        DESCRIPTION
            "This group is mandatory for all network interfaces which
            are packet-oriented."

        GROUP       ifHCPacketGroup
        DESCRIPTION
            "This group is mandatory only for those network interfaces
            which are packet-oriented and for which the value of the
            corresponding instance of ifSpeed is greater than
            650,000,000 bits/second."

        GROUP       ifTestGroup
        DESCRIPTION
            "This group is optional.  Media-specific MIBs which require
            interface tests are strongly encouraged to use this group
            for invoking tests and reporting results.  A medium specific
            MIB which has mandatory tests may make implementation of

            this group mandatory."

        GROUP       ifRcvAddressGroup
        DESCRIPTION
            "The applicability of this group MUST be defined by the
            media-specific MIBs.  Media-specific MIBs must define the
            exact meaning, use, and semantics of the addresses in this
            group."

        OBJECT      ifLinkUpDownTrapEnable
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      ifPromiscuousMode
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      ifStackStatus
        SYNTAX      INTEGER { active(1) } -- subset of RowStatus
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required, and only one of the six
            enumerated values for the RowStatus textual convention need
            be supported, specifically: active(1)."

        OBJECT       ifAdminStatus
        SYNTAX       INTEGER { up(1), down(2) }
        MIN-ACCESS   read-only
        DESCRIPTION
            "Write access is not required, nor is support for the value
            testing(3)."
    ::= { ifCompliances 1 }

ifCompliance2 MODULE-COMPLIANCE
    STATUS      deprecated
    DESCRIPTION
            "A compliance statement defined in a previous version of
            this MIB module, for SNMP entities which have network
            interfaces."

    MODULE  -- this module
        MANDATORY-GROUPS { ifGeneralInformationGroup, ifStackGroup2,
                           ifCounterDiscontinuityGroup }

        GROUP       ifFixedLengthGroup
        DESCRIPTION

            "This group is mandatory for all network interfaces which
            are character-oriented or transmit data in fixed-length
            transmission units."

        GROUP       ifHCFixedLengthGroup
        DESCRIPTION
            "This group is mandatory only for those network interfaces
            which are character-oriented or transmit data in fixed-
            length transmission units, and for which the value of the
            corresponding instance of ifSpeed is greater than 20,000,000
            bits/second."

        GROUP       ifPacketGroup
        DESCRIPTION
            "This group is mandatory for all network interfaces which
            are packet-oriented."

        GROUP       ifHCPacketGroup
        DESCRIPTION
            "This group is mandatory only for those network interfaces
            which are packet-oriented and for which the value of the
            corresponding instance of ifSpeed is greater than
            650,000,000 bits/second."

        GROUP       ifRcvAddressGroup
        DESCRIPTION
            "The applicability of this group MUST be defined by the
            media-specific MIBs.  Media-specific MIBs must define the
            exact meaning, use, and semantics of the addresses in this
            group."

        OBJECT      ifLinkUpDownTrapEnable
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      ifPromiscuousMode
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      ifStackStatus
        SYNTAX      INTEGER { active(1) } -- subset of RowStatus
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required, and only one of the six
            enumerated values for the RowStatus textual convention need
            be supported, specifically: active(1)."

        OBJECT       ifAdminStatus
        SYNTAX       INTEGER { up(1), down(2) }
        MIN-ACCESS   read-only
        DESCRIPTION
            "Write access is not required, nor is support for the value
            testing(3)."

        OBJECT       ifAlias
        MIN-ACCESS   read-only
        DESCRIPTION
            "Write access is not required."

    ::= { ifCompliances 2 }

END

   SNMP-FRAMEWORK-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       MODULE-IDENTITY, OBJECT-TYPE,
       OBJECT-IDENTITY,
       snmpModules                           FROM SNMPv2-SMI
       TEXTUAL-CONVENTION                    FROM SNMPv2-TC
       MODULE-COMPLIANCE, OBJECT-GROUP       FROM SNMPv2-CONF;

   snmpFrameworkMIB MODULE-IDENTITY
       LAST-UPDATED "9901190000Z"            -- 19 January 1999
       ORGANIZATION "SNMPv3 Working Group"
       CONTACT-INFO "WG-EMail:   snmpv3@tis.com
                     Subscribe:  majordomo@tis.com
                                 In message body:  subscribe snmpv3

                     Chair:      Russ Mundy
                                 TIS Labs at Network Associates
                     postal:     3060 Washington Rd
                                 Glenwood MD 21738
                                 USA
                     EMail:      mundy@tis.com
                     phone:      +1 301-854-6889

                     Co-editor   Dave Harrington
                                 Cabletron Systems, Inc.
                     postal:     Post Office Box 5005
                                 Mail Stop: Durham
                                 35 Industrial Way
                                 Rochester, NH 03867-5005
                                 USA
                     EMail:      dbh@ctron.com
                     phone:      +1 603-337-7357

                     Co-editor   Randy Presuhn
                                 BMC Software, Inc.
                     postal:     965 Stewart Drive
                                 Sunnyvale, CA 94086
                                 USA
                     EMail:      randy_presuhn@bmc.com
                     phone:      +1 408-616-3100

                     Co-editor:  Bert Wijnen
                                 IBM T.J. Watson Research
                     postal:     Schagen 33
                                 3461 GL Linschoten

                                 Netherlands
                     EMail:      wijnen@vnet.ibm.com
                     phone:      +31 348-432-794
                    "
       DESCRIPTION  "The SNMP Management Architecture MIB"
   -- Revision History

       REVISION     "9901190000Z"            -- 19 January 1999
       DESCRIPTION  "Updated editors' addresses, fixed typos.
                     Published as RFC2571.
                    "
       REVISION     "9711200000Z"            -- 20 November 1997
       DESCRIPTION  "The initial version, published in RFC 2271.
                    "
       ::= { snmpModules 10 }

   -- Textual Conventions used in the SNMP Management Architecture ***

   SnmpEngineID ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION "An SNMP engine's administratively-unique identifier.
                    Objects of this type are for identification, not for
                    addressing, even though it is possible that an
                    address may have been used in the generation of
                    a specific value.

                    The value for this object may not be all zeros or
                    all 'ff'H or the empty (zero length) string.

                    The initial value for this object may be configured
                    via an operator console entry or via an algorithmic
                    function.  In the latter case, the following
                    example algorithm is recommended.

                    In cases where there are multiple engines on the
                    same system, the use of this algorithm is NOT
                    appropriate, as it would result in all of those
                    engines ending up with the same ID value.

                    1) The very first bit is used to indicate how the
                       rest of the data is composed.

                       0 - as defined by enterprise using former methods
                           that existed before SNMPv3. See item 2 below.

                       1 - as defined by this architecture, see item 3
                           below.


                       Note that this allows existing uses of the
                       engineID (also known as AgentID [RFC1910]) to
                       co-exist with any new uses.

                    2) The snmpEngineID has a length of 12 octets.

                       The first four octets are set to the binary
                       equivalent of the agent's SNMP management
                       private enterprise number as assigned by the
                       Internet Assigned Numbers Authority (IANA).
                       For example, if Acme Networks has been assigned
                       { enterprises 696 }, the first four octets would
                       be assigned '000002b8'H.

                       The remaining eight octets are determined via
                       one or more enterprise-specific methods. Such
                       methods must be designed so as to maximize the
                       possibility that the value of this object will
                       be unique in the agent's administrative domain.
                       For example, it may be the IP address of the SNMP
                       entity, or the MAC address of one of the
                       interfaces, with each address suitably padded
                       with random octets.  If multiple methods are
                       defined, then it is recommended that the first
                       octet indicate the method being used and the
                       remaining octets be a function of the method.

                    3) The length of the octet strings varies.

                       The first four octets are set to the binary
                       equivalent of the agent's SNMP management
                       private enterprise number as assigned by the
                       Internet Assigned Numbers Authority (IANA).
                       For example, if Acme Networks has been assigned
                       { enterprises 696 }, the first four octets would
                       be assigned '000002b8'H.

                       The very first bit is set to 1. For example, the
                       above value for Acme Networks now changes to be
                       '800002b8'H.

                       The fifth octet indicates how the rest (6th and
                       following octets) are formatted. The values for
                       the fifth octet are:

                         0     - reserved, unused.

                         1     - IPv4 address (4 octets)

                                 lowest non-special IP address

                         2     - IPv6 address (16 octets)
                                 lowest non-special IP address

                         3     - MAC address (6 octets)
                                 lowest IEEE MAC address, canonical
                                 order

                         4     - Text, administratively assigned
                                 Maximum remaining length 27

                         5     - Octets, administratively assigned
                                 Maximum remaining length 27

                         6-127 - reserved, unused

                       127-255 - as defined by the enterprise
                                 Maximum remaining length 27
                   "
       SYNTAX       OCTET STRING (SIZE(5..32))

   SnmpSecurityModel ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION "An identifier that uniquely identifies a
                    securityModel of the Security Subsystem within the
                    SNMP Management Architecture.

                    The values for securityModel are allocated as
                    follows:

                    - The zero value is reserved.
                    - Values between 1 and 255, inclusive, are reserved
                      for standards-track Security Models and are
                      managed by the Internet Assigned Numbers Authority
                      (IANA).
                    - Values greater than 255 are allocated to
                      enterprise-specific Security Models.  An
                      enterprise-specific securityModel value is defined
                      to be:

                      enterpriseID * 256 + security model within
                      enterprise

                      For example, the fourth Security Model defined by
                      the enterprise whose enterpriseID is 1 would be
                      260.


                    This scheme for allocation of securityModel
                    values allows for a maximum of 255 standards-
                    based Security Models, and for a maximum of
                    255 Security Models per enterprise.

                    It is believed that the assignment of new
                    securityModel values will be rare in practice
                    because the larger the number of simultaneously
                    utilized Security Models, the larger the
                    chance that interoperability will suffer.
                    Consequently, it is believed that such a range
                    will be sufficient.  In the unlikely event that
                    the standards committee finds this number to be
                    insufficient over time, an enterprise number
                    can be allocated to obtain an additional 255
                    possible values.

                    Note that the most significant bit must be zero;
                    hence, there are 23 bits allocated for various
                    organizations to design and define non-standard
                    securityModels.  This limits the ability to
                    define new proprietary implementations of Security
                    Models to the first 8,388,608 enterprises.

                    It is worthwhile to note that, in its encoded
                    form, the securityModel value will normally
                    require only a single byte since, in practice,
                    the leftmost bits will be zero for most messages
                    and sign extension is suppressed by the encoding
                    rules.

                    As of this writing, there are several values
                    of securityModel defined for use with SNMP or
                    reserved for use with supporting MIB objects.
                    They are as follows:

                        0  reserved for 'any'
                        1  reserved for SNMPv1
                        2  reserved for SNMPv2c
                        3  User-Based Security Model (USM)
                   "
       SYNTAX       INTEGER(0 .. 2147483647)

   SnmpMessageProcessingModel ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION "An identifier that uniquely identifies a Message
                    Processing Model of the Message Processing
                    Subsystem within a SNMP Management Architecture.

                    The values for messageProcessingModel are
                    allocated as follows:

                    - Values between 0 and 255, inclusive, are
                      reserved for standards-track Message Processing
                      Models and are managed by the Internet Assigned
                      Numbers Authority (IANA).

                    - Values greater than 255 are allocated to
                      enterprise-specific Message Processing Models.
                      An enterprise messageProcessingModel value is
                      defined to be:

                      enterpriseID * 256 +
                           messageProcessingModel within enterprise

                      For example, the fourth Message Processing Model
                      defined by the enterprise whose enterpriseID
                      is 1 would be 260.

                    This scheme for allocating messageProcessingModel
                    values allows for a maximum of 255 standards-
                    based Message Processing Models, and for a
                    maximum of 255 Message Processing Models per
                    enterprise.

                    It is believed that the assignment of new
                    messageProcessingModel values will be rare
                    in practice because the larger the number of
                    simultaneously utilized Message Processing Models,
                    the larger the chance that interoperability
                    will suffer. It is believed that such a range
                    will be sufficient.  In the unlikely event that
                    the standards committee finds this number to be
                    insufficient over time, an enterprise number
                    can be allocated to obtain an additional 256
                    possible values.

                    Note that the most significant bit must be zero;
                    hence, there are 23 bits allocated for various
                    organizations to design and define non-standard
                    messageProcessingModels.  This limits the ability
                    to define new proprietary implementations of
                    Message Processing Models to the first 8,388,608
                    enterprises.

                    It is worthwhile to note that, in its encoded
                    form, the messageProcessingModel value will

                    normally require only a single byte since, in
                    practice, the leftmost bits will be zero for
                    most messages and sign extension is suppressed
                    by the encoding rules.

                    As of this writing, there are several values of
                    messageProcessingModel defined for use with SNMP.
                    They are as follows:

                        0  reserved for SNMPv1
                        1  reserved for SNMPv2c
                        2  reserved for SNMPv2u and SNMPv2*
                        3  reserved for SNMPv3
                   "
       SYNTAX       INTEGER(0 .. 2147483647)

   SnmpSecurityLevel ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION "A Level of Security at which SNMP messages can be
                    sent or with which operations are being processed;
                    in particular, one of:

                      noAuthNoPriv - without authentication and
                                     without privacy,
                      authNoPriv   - with authentication but
                                     without privacy,
                      authPriv     - with authentication and
                                     with privacy.

                    These three values are ordered such that
                    noAuthNoPriv is less than authNoPriv and
                    authNoPriv is less than authPriv.
                   "
       SYNTAX       INTEGER { noAuthNoPriv(1),
                              authNoPriv(2),
                              authPriv(3)
                            }

   SnmpAdminString ::= TEXTUAL-CONVENTION
       DISPLAY-HINT "255a"
       STATUS       current
       DESCRIPTION "An octet string containing administrative
                    information, preferably in human-readable form.

                    To facilitate internationalization, this
                    information is represented using the ISO/IEC
                    IS 10646-1 character set, encoded as an octet
                    string using the UTF-8 transformation format

                    described in [RFC2279].

                    Since additional code points are added by
                    amendments to the 10646 standard from time
                    to time, implementations must be prepared to
                    encounter any code point from 0x00000000 to
                    0x7fffffff.  Byte sequences that do not
                    correspond to the valid UTF-8 encoding of a
                    code point or are outside this range are
                    prohibited.

                    The use of control codes should be avoided.

                    When it is necessary to represent a newline,
                    the control code sequence CR LF should be used.

                    The use of leading or trailing white space should
                    be avoided.

                    For code points not directly supported by user
                    interface hardware or software, an alternative
                    means of entry and display, such as hexadecimal,
                    may be provided.

                    For information encoded in 7-bit US-ASCII,
                    the UTF-8 encoding is identical to the
                    US-ASCII encoding.

                    UTF-8 may require multiple bytes to represent a
                    single character / code point; thus the length
                    of this object in octets may be different from
                    the number of characters encoded.  Similarly,
                    size constraints refer to the number of encoded
                    octets, not the number of characters represented
                    by an encoding.

                    Note that when this TC is used for an object that
                    is used or envisioned to be used as an index, then
                    a SIZE restriction MUST be specified so that the
                    number of sub-identifiers for any object instance
                    does not exceed the limit of 128, as defined by
                    [RFC1905].

                    Note that the size of an SnmpAdminString object is
                    measured in octets, not characters.
                   "
       SYNTAX       OCTET STRING (SIZE (0..255))


   -- Administrative assignments ***************************************

   snmpFrameworkAdmin
       OBJECT IDENTIFIER ::= { snmpFrameworkMIB 1 }
   snmpFrameworkMIBObjects
       OBJECT IDENTIFIER ::= { snmpFrameworkMIB 2 }
   snmpFrameworkMIBConformance
       OBJECT IDENTIFIER ::= { snmpFrameworkMIB 3 }

   -- the snmpEngine Group ********************************************

   snmpEngine OBJECT IDENTIFIER ::= { snmpFrameworkMIBObjects 1 }

   snmpEngineID     OBJECT-TYPE
       SYNTAX       SnmpEngineID
       MAX-ACCESS   read-only
       STATUS       current
       DESCRIPTION "An SNMP engine's administratively-unique identifier.
                   "
       ::= { snmpEngine 1 }

   snmpEngineBoots  OBJECT-TYPE
       SYNTAX       INTEGER (1..2147483647)
       MAX-ACCESS   read-only
       STATUS       current
       DESCRIPTION "The number of times that the SNMP engine has
                    (re-)initialized itself since snmpEngineID
                    was last configured.
                   "
       ::= { snmpEngine 2 }

   snmpEngineTime   OBJECT-TYPE
       SYNTAX       INTEGER (0..2147483647)
       UNITS        "seconds"
       MAX-ACCESS   read-only
       STATUS       current
       DESCRIPTION "The number of seconds since the value of
                    the snmpEngineBoots object last changed.
                    When incrementing this object's value would
                    cause it to exceed its maximum,
                    snmpEngineBoots is incremented as if a
                    re-initialization had occurred, and this
                    object's value consequently reverts to zero.
                   "
       ::= { snmpEngine 3 }

   snmpEngineMaxMessageSize OBJECT-TYPE
       SYNTAX       INTEGER (484..2147483647)

       MAX-ACCESS   read-only
       STATUS       current
       DESCRIPTION "The maximum length in octets of an SNMP message
                    which this SNMP engine can send or receive and
                    process, determined as the minimum of the maximum
                    message size values supported among all of the
                    transports available to and supported by the engine.
                   "
       ::= { snmpEngine 4 }


   -- Registration Points for Authentication and Privacy Protocols **

   snmpAuthProtocols OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION  "Registration point for standards-track
                     authentication protocols used in SNMP Management
                     Frameworks.
                    "
       ::= { snmpFrameworkAdmin 1 }

   snmpPrivProtocols OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION  "Registration point for standards-track privacy
                     protocols used in SNMP Management Frameworks.
                    "
       ::= { snmpFrameworkAdmin 2 }

   -- Conformance information ******************************************

   snmpFrameworkMIBCompliances
                  OBJECT IDENTIFIER ::= {snmpFrameworkMIBConformance 1}
   snmpFrameworkMIBGroups
                  OBJECT IDENTIFIER ::= {snmpFrameworkMIBConformance 2}

   -- compliance statements

   snmpFrameworkMIBCompliance MODULE-COMPLIANCE
       STATUS       current
       DESCRIPTION "The compliance statement for SNMP engines which
                    implement the SNMP Management Framework MIB.
                   "
       MODULE    -- this module
           MANDATORY-GROUPS { snmpEngineGroup }

       ::= { snmpFrameworkMIBCompliances 1 }

   -- units of conformance

   snmpEngineGroup OBJECT-GROUP
       OBJECTS {
                 snmpEngineID,
                 snmpEngineBoots,
                 snmpEngineTime,
                 snmpEngineMaxMessageSize
               }
       STATUS       current
       DESCRIPTION "A collection of objects for identifying and
                    determining the configuration and current timeliness
                    values of an SNMP engine.
                   "
       ::= { snmpFrameworkMIBGroups 1 }

   END

ENTITY-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, mib-2, NOTIFICATION-TYPE
        FROM SNMPv2-SMI
    TDomain, TAddress, TEXTUAL-CONVENTION,
    AutonomousType, RowPointer, TimeStamp, TruthValue
        FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP
        FROM SNMPv2-CONF
    SnmpAdminString
        FROM SNMP-FRAMEWORK-MIB;

entityMIB MODULE-IDENTITY
    LAST-UPDATED "9912070000Z" -- December 7, 1999
    ORGANIZATION "IETF ENTMIB Working Group"
    CONTACT-INFO
            "        WG E-mail: entmib@cisco.com
                  Subscribe: majordomo@cisco.com
                         msg body: subscribe entmib

                     Keith McCloghrie
                     ENTMIB Working Group Chair
                     Cisco Systems Inc.
                     170 West Tasman Drive
                     San Jose, CA 95134
                     +1 408-526-5260
                     kzm@cisco.com

                     Andy Bierman
                     ENTMIB Working Group Editor
                     Cisco Systems Inc.
                     170 West Tasman Drive
                     San Jose, CA 95134
                     +1 408-527-3711
                     abierman@cisco.com"
    DESCRIPTION
            "The MIB module for representing multiple logical
            entities supported by a single SNMP agent."
    REVISION        "9912070000Z"
    DESCRIPTION
            "Initial Version of Entity MIB (Version 2).
             This revision obsoletes RFC 2037.
             This version published as RFC 2737."
    REVISION        "9610310000Z"
    DESCRIPTION

            "Initial version (version 1), published as
             RFC 2037."
    ::= { mib-2 47 }

entityMIBObjects OBJECT IDENTIFIER ::= { entityMIB 1 }

-- MIB contains four groups
entityPhysical OBJECT IDENTIFIER ::= { entityMIBObjects 1 }
entityLogical  OBJECT IDENTIFIER ::= { entityMIBObjects 2 }
entityMapping  OBJECT IDENTIFIER ::= { entityMIBObjects 3 }
entityGeneral  OBJECT IDENTIFIER ::= { entityMIBObjects 4 }

-- Textual Conventions
PhysicalIndex ::= TEXTUAL-CONVENTION
    STATUS            current
    DESCRIPTION
            "An arbitrary value which uniquely identifies the physical
            entity.  The value should be a small positive integer; index
            values for different physical entities are not necessarily
            contiguous."
    SYNTAX INTEGER (1..2147483647)

PhysicalClass ::= TEXTUAL-CONVENTION
    STATUS            current
    DESCRIPTION
            "An enumerated value which provides an indication of the
            general hardware type of a particular physical entity.
            There are no restrictions as to the number of
            entPhysicalEntries of each entPhysicalClass, which must be
            instantiated by an agent.

            The enumeration 'other' is applicable if the physical entity
            class is known, but does not match any of the supported
            values.

            The enumeration 'unknown' is applicable if the physical
            entity class is unknown to the agent.

            The enumeration 'chassis' is applicable if the physical
            entity class is an overall container for networking
            equipment.  Any class of physical entity except a stack may
            be contained within a chassis, and a chassis may only be
            contained within a stack.

            The enumeration 'backplane' is applicable if the physical
            entity class is some sort of device for aggregating and
            forwarding networking traffic, such as a shared backplane in
            a modular ethernet switch.  Note that an agent may model a

            backplane as a single physical entity, which is actually
            implemented as multiple discrete physical components (within
            a chassis or stack).

            The enumeration 'container' is applicable if the physical
            entity class is capable of containing one or more removable
            physical entities, possibly of different types. For example,
            each (empty or full) slot in a chassis will be modeled as a
            container. Note that all removable physical entities should
            be modeled within a container entity, such as field-
            replaceable modules, fans, or power supplies.  Note that all
            known containers should be modeled by the agent, including
            empty containers.

            The enumeration 'powerSupply' is applicable if the physical
            entity class is a power-supplying component.

            The enumeration 'fan' is applicable if the physical entity
            class is a fan or other heat-reduction component.

            The enumeration 'sensor' is applicable if the physical
            entity class is some sort of sensor, such as a temperature
            sensor within a router chassis.

            The enumeration 'module' is applicable if the physical
            entity class is some sort of self-contained sub-system.  If
            it is removable, then it should be modeled within a
            container entity, otherwise it should be modeled directly
            within another physical entity (e.g., a chassis or another
            module).

            The enumeration 'port' is applicable if the physical entity
            class is some sort of networking port, capable of receiving
            and/or transmitting networking traffic.

            The enumeration 'stack' is applicable if the physical entity
            class is some sort of super-container (possibly virtual),
            intended to group together multiple chassis entities.  A
            stack may be realized by a 'virtual' cable, a real
            interconnect cable, attached to multiple chassis, or may in
            fact be comprised of multiple interconnect cables. A stack
            should not be modeled within any other physical entities,
            but a stack may be contained within another stack.  Only
            chassis entities should be contained within a stack."
    SYNTAX      INTEGER  {
       other(1),
       unknown(2),
       chassis(3),

       backplane(4),
       container(5),     -- e.g., chassis slot or daughter-card holder
       powerSupply(6),
       fan(7),
       sensor(8),
       module(9),        -- e.g., plug-in card or daughter-card
       port(10),
       stack(11)         -- e.g., stack of multiple chassis entities
    }

SnmpEngineIdOrNone ::= TEXTUAL-CONVENTION
    STATUS            current
    DESCRIPTION
            "A specially formatted SnmpEngineID string for use with the
            Entity MIB.

            If an instance of an object of SYNTAX SnmpEngineIdOrNone has
            a non-zero length, then the object encoding and semantics
            are defined by the SnmpEngineID textual convention (see RFC
            2571 [RFC2571]).

            If an instance of an object of SYNTAX SnmpEngineIdOrNone
            contains a zero-length string, then no appropriate
            SnmpEngineID is associated with the logical entity (i.e.,
            SNMPv3 not supported)."
    SYNTAX OCTET STRING (SIZE(0..32)) -- empty string or SnmpEngineID

--           The Physical Entity Table
entPhysicalTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF EntPhysicalEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "This table contains one row per physical entity.  There is
            always at least one row for an 'overall' physical entity."
    ::= { entityPhysical 1 }

entPhysicalEntry       OBJECT-TYPE
    SYNTAX      EntPhysicalEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "Information about a particular physical entity.

            Each entry provides objects (entPhysicalDescr,
            entPhysicalVendorType, and entPhysicalClass) to help an NMS
            identify and characterize the entry, and objects
            (entPhysicalContainedIn and entPhysicalParentRelPos) to help

            an NMS relate the particular entry to other entries in this
            table."
    INDEX   { entPhysicalIndex }
    ::= { entPhysicalTable 1 }

EntPhysicalEntry ::= SEQUENCE {
      entPhysicalIndex          PhysicalIndex,
      entPhysicalDescr          SnmpAdminString,
      entPhysicalVendorType     AutonomousType,
      entPhysicalContainedIn    INTEGER,
      entPhysicalClass          PhysicalClass,
      entPhysicalParentRelPos   INTEGER,
      entPhysicalName           SnmpAdminString,
      entPhysicalHardwareRev    SnmpAdminString,
      entPhysicalFirmwareRev    SnmpAdminString,
      entPhysicalSoftwareRev    SnmpAdminString,
      entPhysicalSerialNum      SnmpAdminString,
      entPhysicalMfgName        SnmpAdminString,
      entPhysicalModelName      SnmpAdminString,
      entPhysicalAlias          SnmpAdminString,
      entPhysicalAssetID        SnmpAdminString,
      entPhysicalIsFRU          TruthValue
}

entPhysicalIndex    OBJECT-TYPE
    SYNTAX      PhysicalIndex
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The index for this entry."
    ::= { entPhysicalEntry 1 }

entPhysicalDescr OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A textual description of physical entity.  This object
            should contain a string which identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity. "
    ::= { entPhysicalEntry 2 }

entPhysicalVendorType OBJECT-TYPE
    SYNTAX      AutonomousType
    MAX-ACCESS  read-only
    STATUS      current

    DESCRIPTION
            "An indication of the vendor-specific hardware type of the
            physical entity.  Note that this is different from the
            definition of MIB-II's sysObjectID.

            An agent should set this object to a enterprise-specific
            registration identifier value indicating the specific
            equipment type in detail.  The associated instance of
            entPhysicalClass is used to indicate the general type of
            hardware device.

            If no vendor-specific registration identifier exists for
            this physical entity, or the value is unknown by this agent,
            then the value { 0 0 } is returned."
    ::= { entPhysicalEntry 3 }

entPhysicalContainedIn OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of entPhysicalIndex for the physical entity which
            'contains' this physical entity.  A value of zero indicates
            this physical entity is not contained in any other physical
            entity.  Note that the set of 'containment' relationships
            define a strict hierarchy; that is, recursion is not
            allowed.

            In the event a physical entity is contained by more than one
            physical entity (e.g., double-wide modules), this object
            should identify the containing entity with the lowest value
            of entPhysicalIndex."
    ::= { entPhysicalEntry 4 }

entPhysicalClass OBJECT-TYPE
    SYNTAX      PhysicalClass
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "An indication of the general hardware type of the physical
            entity.

            An agent should set this object to the standard enumeration
            value which most accurately indicates the general class of
            the physical entity, or the primary class if there is more
            than one.

            If no appropriate standard registration identifier exists

            for this physical entity, then the value 'other(1)' is
            returned. If the value is unknown by this agent, then the
            value 'unknown(2)' is returned."
    ::= { entPhysicalEntry 5 }

entPhysicalParentRelPos OBJECT-TYPE
    SYNTAX      INTEGER (-1..2147483647)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "An indication of the relative position of this 'child'
            component among all its 'sibling' components. Sibling
            components are defined as entPhysicalEntries which share the
            same instance values of each of the entPhysicalContainedIn
            and entPhysicalClass objects.

            An NMS can use this object to identify the relative ordering
            for all sibling components of a particular parent
            (identified by the entPhysicalContainedIn instance in each
            sibling entry).

            This value should match any external labeling of the
            physical component if possible. For example, for a container
            (e.g., card slot) labeled as 'slot #3',
            entPhysicalParentRelPos should have the value '3'.  Note
            that the entPhysicalEntry for the module plugged in slot 3
            should have an entPhysicalParentRelPos value of '1'.

            If the physical position of this component does not match
            any external numbering or clearly visible ordering, then
            user documentation or other external reference material
            should be used to determine the parent-relative position. If
            this is not possible, then the the agent should assign a
            consistent (but possibly arbitrary) ordering to a given set
            of 'sibling' components, perhaps based on internal
            representation of the components.

            If the agent cannot determine the parent-relative position
            for some reason, or if the associated value of
            entPhysicalContainedIn is '0', then the value '-1' is
            returned. Otherwise a non-negative integer is returned,
            indicating the parent-relative position of this physical
            entity.

            Parent-relative ordering normally starts from '1' and
            continues to 'N', where 'N' represents the highest
            positioned child entity.  However, if the physical entities
            (e.g., slots) are labeled from a starting position of zero,

            then the first sibling should be associated with a
            entPhysicalParentRelPos value of '0'.  Note that this
            ordering may be sparse or dense, depending on agent
            implementation.

            The actual values returned are not globally meaningful, as
            each 'parent' component may use different numbering
            algorithms. The ordering is only meaningful among siblings
            of the same parent component.

            The agent should retain parent-relative position values
            across reboots, either through algorithmic assignment or use
            of non-volatile storage."
    ::= { entPhysicalEntry 6 }

entPhysicalName OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name, such as `console' or a simple component number (e.g.,
            port or module number), such as `1', depending on the
            physical component naming syntax of the device.

            If there is no local name, or this object is otherwise not
            applicable, then this object contains a zero-length string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
    ::= { entPhysicalEntry 7 }

entPhysicalHardwareRev    OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The vendor-specific hardware revision string for the
            physical entity.  The preferred value is the hardware
            revision identifier actually printed on the component itself
            (if present).

            Note that if revision information is stored internally in a

            non-printable (e.g., binary) format, then the agent must
            convert such information to a printable format, in an
            implementation-specific manner.

            If no specific hardware revision string is associated with
            the physical component, or this information is unknown to
            the agent, then this object will contain a zero-length
            string."
    ::= { entPhysicalEntry 8 }

entPhysicalFirmwareRev    OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The vendor-specific firmware revision string for the
            physical entity.

            Note that if revision information is stored internally in a
            non-printable (e.g., binary) format, then the agent must
            convert such information to a printable format, in an
            implementation-specific manner.

            If no specific firmware programs are associated with the
            physical component, or this information is unknown to the
            agent, then this object will contain a zero-length string."
    ::= { entPhysicalEntry 9 }

entPhysicalSoftwareRev    OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The vendor-specific software revision string for the
            physical entity.

            Note that if revision information is stored internally in a
            non-printable (e.g., binary) format, then the agent must
            convert such information to a printable format, in an
            implementation-specific manner.

            If no specific software programs are associated with the
            physical component, or this information is unknown to the
            agent, then this object will contain a zero-length string."
    ::= { entPhysicalEntry 10 }

entPhysicalSerialNum   OBJECT-TYPE
    SYNTAX      SnmpAdminString (SIZE (0..32))

    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The vendor-specific serial number string for the physical
            entity.  The preferred value is the serial number string
            actually printed on the component itself (if present).

            On the first instantiation of an physical entity, the value
            of entPhysicalSerialNum associated with that entity is set
            to the correct vendor-assigned serial number, if this
            information is available to the agent.  If a serial number
            is unknown or non-existent, the entPhysicalSerialNum will be
            set to a zero-length string instead.

            Note that implementations which can correctly identify the
            serial numbers of all installed physical entities do not
            need to provide write access to the entPhysicalSerialNum
            object. Agents which cannot provide non-volatile storage for
            the entPhysicalSerialNum strings are not required to
            implement write access for this object.

            Not every physical component will have a serial number, or
            even need one.  Physical entities for which the associated
            value of the entPhysicalIsFRU object is equal to 'false(2)'
            (e.g., the repeater ports within a repeater module), do not
            need their own unique serial number. An agent does not have
            to provide write access for such entities, and may return a
            zero-length string.

            If write access is implemented for an instance of
            entPhysicalSerialNum, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalSerialNum instance associated with the same
            physical entity for as long as that entity remains
            instantiated. This includes instantiations across all re-
            initializations/reboots of the network management system,
            including those which result in a change of the physical
            entity's entPhysicalIndex value."
    ::= { entPhysicalEntry 11 }

entPhysicalMfgName   OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The name of the manufacturer of this physical component.
            The preferred value is the manufacturer name string actually
            printed on the component itself (if present).

            Note that comparisons between instances of the
            entPhysicalModelName, entPhysicalFirmwareRev,
            entPhysicalSoftwareRev, and the entPhysicalSerialNum
            objects, are only meaningful amongst entPhysicalEntries with
            the same value of entPhysicalMfgName.

            If the manufacturer name string associated with the physical
            component is unknown to the agent, then this object will
            contain a zero-length string."
    ::= { entPhysicalEntry 12 }

entPhysicalModelName   OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The vendor-specific model name identifier string associated
            with this physical component.  The preferred value is the
            customer-visible part number, which may be printed on the
            component itself.

            If the model name string associated with the physical
            component is unknown to the agent, then this object will
            contain a zero-length string."
    ::= { entPhysicalEntry 13 }

entPhysicalAlias    OBJECT-TYPE
    SYNTAX      SnmpAdminString (SIZE (0..32))
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "This object is an 'alias' name for the physical entity as
            specified by a network manager, and provides a non-volatile
            'handle' for the physical entity.

            On the first instantiation of an physical entity, the value
            of entPhysicalAlias associated with that entity is set to
            the zero-length string.  However, agent may set the value to
            a locally unique default value, instead of a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAlias, and a value is written into the instance,
            the agent must retain the supplied value in the
            entPhysicalAlias instance associated with the same physical
            entity for as long as that entity remains instantiated.
            This includes instantiations across all re-
            initializations/reboots of the network management system,

            including those which result in a change of the physical
            entity's entPhysicalIndex value."
    ::= { entPhysicalEntry 14 }

entPhysicalAssetID OBJECT-TYPE
    SYNTAX      SnmpAdminString (SIZE (0..32))
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "This object is a user-assigned asset tracking identifier
            for the physical entity as specified by a network manager,
            and provides non-volatile storage of this information.

            On the first instantiation of an physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have a asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier. An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance associated with the same
            physical entity for as long as that entity remains
            instantiated.  This includes instantiations across all re-
            initializations/reboots of the network management system,
            including those which result in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a zero-
            length string."
    ::= { entPhysicalEntry 15 }

entPhysicalIsFRU OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "This object indicates whether or not this physical entity
            is considered a 'field replaceable unit' by the vendor.  If

            this object contains the value 'true(1)' then this
            entPhysicalEntry identifies a field replaceable unit.  For
            all entPhysicalEntries which represent components that are
            permanently contained within a field replaceable unit, the
            value 'false(2)' should be returned for this object."

    ::= { entPhysicalEntry 16 }

--           The Logical Entity Table
entLogicalTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF EntLogicalEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "This table contains one row per logical entity.  For agents
            which implement more than one naming scope, at least one
            entry must exist. Agents which instantiate all MIB objects
            within a single naming scope are not required to implement
            this table."
    ::= { entityLogical 1 }

entLogicalEntry       OBJECT-TYPE
    SYNTAX      EntLogicalEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "Information about a particular logical entity.  Entities
            may be managed by this agent or other SNMP agents (possibly)
            in the same chassis."
    INDEX       { entLogicalIndex }
    ::= { entLogicalTable 1 }

EntLogicalEntry ::= SEQUENCE {
      entLogicalIndex            INTEGER,
      entLogicalDescr            SnmpAdminString,
      entLogicalType             AutonomousType,
      entLogicalCommunity        OCTET STRING,
      entLogicalTAddress         TAddress,
      entLogicalTDomain          TDomain,
      entLogicalContextEngineID  SnmpEngineIdOrNone,
      entLogicalContextName      SnmpAdminString
}

entLogicalIndex OBJECT-TYPE
    SYNTAX      INTEGER (1..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION

            "The value of this object uniquely identifies the logical
            entity. The value should be a small positive integer; index
            values for different logical entities are are not
            necessarily contiguous."
    ::= { entLogicalEntry 1 }

entLogicalDescr OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A textual description of the logical entity.  This object
            should contain a string which identifies the manufacturer's
            name for the logical entity, and should be set to a distinct
            value for each version of the logical entity. "
    ::= { entLogicalEntry 2 }

entLogicalType OBJECT-TYPE
    SYNTAX      AutonomousType
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "An indication of the type of logical entity.  This will
            typically be the OBJECT IDENTIFIER name of the node in the
            SMI's naming hierarchy which represents the major MIB
            module, or the majority of the MIB modules, supported by the
            logical entity.  For example:
               a logical entity of a regular host/router -> mib-2
               a logical entity of a 802.1d bridge -> dot1dBridge
               a logical entity of a 802.3 repeater -> snmpDot3RptrMgmt
            If an appropriate node in the SMI's naming hierarchy cannot
            be identified, the value 'mib-2' should be used."
    ::= { entLogicalEntry 3 }

entLogicalCommunity OBJECT-TYPE
    SYNTAX      OCTET STRING (SIZE (0..255))
    MAX-ACCESS  read-only
    STATUS      deprecated
    DESCRIPTION
            "An SNMPv1 or SNMPv2C community-string which can be used to
            access detailed management information for this logical
            entity.  The agent should allow read access with this
            community string (to an appropriate subset of all managed
            objects) and may also return a community string based on the
            privileges of the request used to read this object.  Note
            that an agent may return a community string with read-only
            privileges, even if this object is accessed with a read-
            write community string. However, the agent must take care

            not to return a community string which allows more
            privileges than the community string used to access this
            object.

            A compliant SNMP agent may wish to conserve naming scopes by
            representing multiple logical entities in a single 'default'
            naming scope.  This is possible when the logical entities
            represented by the same value of entLogicalCommunity have no
            object instances in common.  For example, 'bridge1' and
            'repeater1' may be part of the main naming scope, but at
            least one additional community string is needed to represent
            'bridge2' and 'repeater2'.

            Logical entities 'bridge1' and 'repeater1' would be
            represented by sysOREntries associated with the 'default'
            naming scope.

            For agents not accessible via SNMPv1 or SNMPv2C, the value
            of this object is the empty string.  This object may also
            contain an empty string if a community string has not yet
            been assigned by the agent, or no community string with
            suitable access rights can be returned for a particular SNMP
            request.

            Note that this object is deprecated. Agents which implement
            SNMPv3 access should use the entLogicalContextEngineID and
            entLogicalContextName objects to identify the context
            associated with each logical entity.  SNMPv3 agents may
            return a zero-length string for this object, or may continue
            to return a community string (e.g., tri-lingual agent
            support)."
    ::= { entLogicalEntry 4 }

entLogicalTAddress OBJECT-TYPE
    SYNTAX      TAddress
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The transport service address by which the logical entity
            receives network management traffic, formatted according to
            the corresponding value of entLogicalTDomain.

            For snmpUDPDomain, a TAddress is 6 octets long, the initial
            4 octets containing the IP-address in network-byte order and
            the last 2 containing the UDP port in network-byte order.
            Consult 'Transport Mappings for Version 2 of the Simple
            Network Management Protocol' (RFC 1906 [RFC1906]) for
            further information on snmpUDPDomain."

    ::= { entLogicalEntry 5 }

entLogicalTDomain OBJECT-TYPE
    SYNTAX      TDomain
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "Indicates the kind of transport service by which the
            logical entity receives network management traffic.
            Possible values for this object are presently found in the
            Transport Mappings for SNMPv2 document (RFC 1906
            [RFC1906])."
    ::= { entLogicalEntry 6 }

entLogicalContextEngineID    OBJECT-TYPE
    SYNTAX      SnmpEngineIdOrNone
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The authoritative contextEngineID that can be used to send
            an SNMP message concerning information held by this logical
            entity, to the address specified by the associated
            'entLogicalTAddress/entLogicalTDomain' pair.

            This object, together with the associated
            entLogicalContextName object, defines the context associated
            with a particular logical entity, and allows access to SNMP
            engines identified by a contextEngineId and contextName
            pair.

            If no value has been configured by the agent, a zero-length
            string is returned, or the agent may choose not to
            instantiate this object at all."
    ::= { entLogicalEntry 7 }

entLogicalContextName    OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The contextName that can be used to send an SNMP message
            concerning information held by this logical entity, to the
            address specified by the associated
            'entLogicalTAddress/entLogicalTDomain' pair.

            This object, together with the associated
            entLogicalContextEngineID object, defines the context
            associated with a particular logical entity, and allows

            access to SNMP engines identified by a contextEngineId and
            contextName pair.

            If no value has been configured by the agent, a zero-length
            string is returned, or the agent may choose not to
            instantiate this object at all."
    ::= { entLogicalEntry 8 }

entLPMappingTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF EntLPMappingEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "This table contains zero or more rows of logical entity to
            physical equipment associations. For each logical entity
            known by this agent, there are zero or more mappings to the
            physical resources which are used to realize that logical
            entity.

            An agent should limit the number and nature of entries in
            this table such that only meaningful and non-redundant
            information is returned. For example, in a system which
            contains a single power supply, mappings between logical
            entities and the power supply are not useful and should not
            be included.

            Also, only the most appropriate physical component which is
            closest to the root of a particular containment tree should
            be identified in an entLPMapping entry.

            For example, suppose a bridge is realized on a particular
            module, and all ports on that module are ports on this
            bridge. A mapping between the bridge and the module would be
            useful, but additional mappings between the bridge and each
            of the ports on that module would be redundant (since the
            entPhysicalContainedIn hierarchy can provide the same
            information). If, on the other hand, more than one bridge
            was utilizing ports on this module, then mappings between
            each bridge and the ports it used would be appropriate.

            Also, in the case of a single backplane repeater, a mapping
            for the backplane to the single repeater entity is not
            necessary."
    ::= { entityMapping 1 }

entLPMappingEntry       OBJECT-TYPE
    SYNTAX      EntLPMappingEntry
    MAX-ACCESS  not-accessible

    STATUS      current
    DESCRIPTION
            "Information about a particular logical entity to physical
            equipment association. Note that the nature of the
            association is not specifically identified in this entry.
            It is expected that sufficient information exists in the
            MIBs used to manage a particular logical entity to infer how
            physical component information is utilized."
    INDEX       { entLogicalIndex, entLPPhysicalIndex }
    ::= { entLPMappingTable 1 }

EntLPMappingEntry ::= SEQUENCE {
      entLPPhysicalIndex         PhysicalIndex
}

entLPPhysicalIndex OBJECT-TYPE
    SYNTAX      PhysicalIndex
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of this object identifies the index value of a
            particular entPhysicalEntry associated with the indicated
            entLogicalEntity."
    ::= { entLPMappingEntry 1 }

-- logical entity/component to alias table
entAliasMappingTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF EntAliasMappingEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "This table contains zero or more rows, representing
            mappings of logical entity and physical component to
            external MIB identifiers.  Each physical port in the system
            may be associated with a mapping to an external identifier,
            which itself is associated with a particular logical
            entity's naming scope.  A 'wildcard' mechanism is provided
            to indicate that an identifier is associated with more than
            one logical entity."
    ::= { entityMapping 2 }

entAliasMappingEntry       OBJECT-TYPE
    SYNTAX      EntAliasMappingEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "Information about a particular physical equipment, logical
            entity to external identifier binding. Each logical

            entity/physical component pair may be associated with one
            alias mapping.  The logical entity index may also be used as
            a 'wildcard' (refer to the entAliasLogicalIndexOrZero object
            DESCRIPTION clause for details.)

            Note that only entPhysicalIndex values which represent
            physical ports (i.e. associated entPhysicalClass value is
            'port(10)') are permitted to exist in this table."
    INDEX { entPhysicalIndex, entAliasLogicalIndexOrZero }
    ::= { entAliasMappingTable 1 }

EntAliasMappingEntry ::= SEQUENCE {
      entAliasLogicalIndexOrZero        INTEGER,
      entAliasMappingIdentifier          RowPointer
}

entAliasLogicalIndexOrZero OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The value of this object identifies the logical entity
            which defines the naming scope for the associated instance
            of the 'entAliasMappingIdentifier' object.

            If this object has a non-zero value, then it identifies the
            logical entity named by the same value of entLogicalIndex.

            If this object has a value of zero, then the mapping between
            the physical component and the alias identifier for this
            entAliasMapping entry is associated with all unspecified
            logical entities. That is, a value of zero (the default
            mapping) identifies any logical entity which does not have
            an explicit entry in this table for a particular
            entPhysicalIndex/entAliasMappingIdentifier pair.

            For example, to indicate that a particular interface (e.g.,
            physical component 33) is identified by the same value of
            ifIndex for all logical entities, the following instance
            might exist:

                    entAliasMappingIdentifier.33.0 = ifIndex.5

            In the event an entPhysicalEntry is associated differently
            for some logical entities, additional entAliasMapping
            entries may exist, e.g.:

                    entAliasMappingIdentifier.33.0 = ifIndex.6

                    entAliasMappingIdentifier.33.4 =  ifIndex.1
                    entAliasMappingIdentifier.33.5 =  ifIndex.1
                    entAliasMappingIdentifier.33.10 = ifIndex.12

            Note that entries with non-zero entAliasLogicalIndexOrZero
            index values have precedence over any zero-indexed entry. In
            this example, all logical entities except 4, 5, and 10,
            associate physical entity 33 with ifIndex.6."
    ::= { entAliasMappingEntry 1 }

entAliasMappingIdentifier OBJECT-TYPE
    SYNTAX      RowPointer
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of this object identifies a particular conceptual
            row associated with the indicated entPhysicalIndex and
            entLogicalIndex pair.

            Since only physical ports are modeled in this table, only
            entries which represent interfaces or ports are allowed.  If
            an ifEntry exists on behalf of a particular physical port,
            then this object should identify the associated 'ifEntry'.
            For repeater ports, the appropriate row in the
            'rptrPortGroupTable' should be identified instead.

            For example, suppose a physical port was represented by
            entPhysicalEntry.3, entLogicalEntry.15 existed for a
            repeater, and entLogicalEntry.22 existed for a bridge.  Then
            there might be two related instances of
            entAliasMappingIdentifier:
               entAliasMappingIdentifier.3.15 == rptrPortGroupIndex.5.2
               entAliasMappingIdentifier.3.22 == ifIndex.17
            It is possible that other mappings (besides interfaces and
            repeater ports) may be defined in the future, as required.

            Bridge ports are identified by examining the Bridge MIB and
            appropriate ifEntries associated with each 'dot1dBasePort',
            and are thus not represented in this table."
    ::= { entAliasMappingEntry 2 }

-- physical mapping table
entPhysicalContainsTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF EntPhysicalContainsEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A table which exposes the container/'containee'

            relationships between physical entities. This table provides
            all the information found by constructing the virtual
            containment tree for a given entPhysicalTable, but in a more
            direct format.

            In the event a physical entity is contained by more than one
            other physical entity (e.g., double-wide modules), this
            table should include these additional mappings, which cannot
            be represented in the entPhysicalTable virtual containment
            tree."
    ::= { entityMapping 3 }

entPhysicalContainsEntry OBJECT-TYPE
    SYNTAX      EntPhysicalContainsEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A single container/'containee' relationship."
    INDEX       { entPhysicalIndex, entPhysicalChildIndex }
    ::= { entPhysicalContainsTable 1 }

EntPhysicalContainsEntry ::= SEQUENCE {
      entPhysicalChildIndex     PhysicalIndex
}

entPhysicalChildIndex OBJECT-TYPE
    SYNTAX      PhysicalIndex
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of entPhysicalIndex for the contained physical
            entity."
    ::= { entPhysicalContainsEntry 1 }

-- last change time stamp for the whole MIB
entLastChangeTime OBJECT-TYPE
    SYNTAX      TimeStamp
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The value of sysUpTime at the time a conceptual row is
            created, modified, or deleted in any of these tables:
                    - entPhysicalTable
                    - entLogicalTable
                    - entLPMappingTable
                    - entAliasMappingTable
                    - entPhysicalContainsTable
            "

    ::= { entityGeneral 1 }

-- Entity MIB Trap Definitions
entityMIBTraps      OBJECT IDENTIFIER ::= { entityMIB 2 }
entityMIBTrapPrefix OBJECT IDENTIFIER ::= { entityMIBTraps 0 }

entConfigChange NOTIFICATION-TYPE
    STATUS             current
    DESCRIPTION
            "An entConfigChange notification is generated when the value
            of entLastChangeTime changes. It can be utilized by an NMS
            to trigger logical/physical entity table maintenance polls.

            An agent should not generate more than one entConfigChange
            'notification-event' in a given time interval (five seconds
            is the suggested default).  A 'notification-event' is the
            transmission of a single trap or inform PDU to a list of
            notification destinations.

            If additional configuration changes occur within the
            throttling period, then notification-events for these
            changes should be suppressed by the agent until the current
            throttling period expires.  At the end of a throttling
            period, one notification-event should be generated if any
            configuration changes occurred since the start of the
            throttling period. In such a case, another throttling period
            is started right away.

            An NMS should periodically check the value of
            entLastChangeTime to detect any missed entConfigChange
            notification-events, e.g., due to throttling or transmission
            loss."
   ::= { entityMIBTrapPrefix 1 }

-- conformance information
entityConformance OBJECT IDENTIFIER ::= { entityMIB 3 }

entityCompliances OBJECT IDENTIFIER ::= { entityConformance 1 }
entityGroups      OBJECT IDENTIFIER ::= { entityConformance 2 }

-- compliance statements
entityCompliance MODULE-COMPLIANCE
    STATUS  deprecated
    DESCRIPTION
            "The compliance statement for SNMP entities which implement
            version 1 of the Entity MIB."
    MODULE  -- this module
        MANDATORY-GROUPS {

                           entityPhysicalGroup,
                           entityLogicalGroup,
                           entityMappingGroup,
                           entityGeneralGroup,
                           entityNotificationsGroup
        }
    ::= { entityCompliances 1 }

entity2Compliance MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
            "The compliance statement for SNMP entities which implement
            version 2 of the Entity MIB."
    MODULE  -- this module
        MANDATORY-GROUPS {
                           entityPhysicalGroup,
                           entityPhysical2Group,
                           entityGeneralGroup,
                           entityNotificationsGroup
        }
        GROUP entityLogical2Group
        DESCRIPTION
            "Implementation of this group is not mandatory for agents
            which model all MIB object instances within a single naming
            scope."

        GROUP entityMappingGroup
        DESCRIPTION
            "Implementation of the entPhysicalContainsTable is mandatory
            for all agents.  Implementation of the entLPMappingTable and
            entAliasMappingTables are not mandatory for agents which
            model all MIB object instances within a single naming scope.

            Note that the entAliasMappingTable may be useful for all
            agents, however implementation of the entityLogicalGroup or
            entityLogical2Group is required to support this table."

        OBJECT entPhysicalSerialNum
        MIN-ACCESS   not-accessible
        DESCRIPTION
            "Read and write access is not required for agents which
            cannot identify serial number information for physical
            entities, and/or cannot provide non-volatile storage for
            NMS-assigned serial numbers.

            Write access is not required for agents which can identify
            serial number information for physical entities, but cannot
            provide non-volatile storage for NMS-assigned serial

            numbers.

            Write access is not required for physical entities for
            physical entities for which the associated value of the
            entPhysicalIsFRU object is equal to 'false(2)'."

        OBJECT entPhysicalAlias
        MIN-ACCESS   read-only
        DESCRIPTION
            "Write access is required only if the associated
            entPhysicalClass value is equal to 'chassis(3)'."

        OBJECT entPhysicalAssetID
        MIN-ACCESS   not-accessible
        DESCRIPTION
            "Read and write access is not required for agents which
            cannot provide non-volatile storage for NMS-assigned asset
            identifiers.

            Write access is not required for physical entities for which
            the associated value of entPhysicalIsFRU is equal to
            'false(2)'."
    ::= { entityCompliances 2 }

-- MIB groupings
entityPhysicalGroup    OBJECT-GROUP
    OBJECTS {
              entPhysicalDescr,
              entPhysicalVendorType,
              entPhysicalContainedIn,
              entPhysicalClass,
              entPhysicalParentRelPos,
              entPhysicalName
            }
    STATUS  current
    DESCRIPTION
            "The collection of objects which are used to represent
            physical system components, for which a single agent
            provides management information."
    ::= { entityGroups 1 }

entityLogicalGroup    OBJECT-GROUP
    OBJECTS {
              entLogicalDescr,
              entLogicalType,
              entLogicalCommunity,
              entLogicalTAddress,
              entLogicalTDomain

            }
    STATUS  deprecated
    DESCRIPTION
            "The collection of objects which are used to represent the
            list of logical entities for which a single agent provides
            management information."
    ::= { entityGroups 2 }

entityMappingGroup    OBJECT-GROUP
    OBJECTS {
              entLPPhysicalIndex,
              entAliasMappingIdentifier,
              entPhysicalChildIndex
            }
    STATUS  current
    DESCRIPTION
            "The collection of objects which are used to represent the
            associations between multiple logical entities, physical
            components, interfaces, and port identifiers for which a
            single agent provides management information."
    ::= { entityGroups 3 }

entityGeneralGroup    OBJECT-GROUP
    OBJECTS {
              entLastChangeTime
            }
    STATUS  current
    DESCRIPTION
            "The collection of objects which are used to represent
            general entity information for which a single agent provides
            management information."
    ::= { entityGroups 4 }

entityNotificationsGroup NOTIFICATION-GROUP
    NOTIFICATIONS { entConfigChange }
    STATUS        current
    DESCRIPTION
            "The collection of notifications used to indicate Entity MIB
            data consistency and general status information."
    ::= { entityGroups 5 }

entityPhysical2Group    OBJECT-GROUP
    OBJECTS {
              entPhysicalHardwareRev,
              entPhysicalFirmwareRev,
              entPhysicalSoftwareRev,
              entPhysicalSerialNum,
              entPhysicalMfgName,

              entPhysicalModelName,
              entPhysicalAlias,
              entPhysicalAssetID,
              entPhysicalIsFRU
            }

    STATUS  current
    DESCRIPTION
            "The collection of objects which are used to represent
            physical system components, for which a single agent
            provides management information.  This group augments the
            objects contained in the entityPhysicalGroup."
    ::= { entityGroups 6 }

entityLogical2Group    OBJECT-GROUP
    OBJECTS {
              entLogicalDescr,
              entLogicalType,
              entLogicalTAddress,
              entLogicalTDomain,
              entLogicalContextEngineID,
              entLogicalContextName
            }
    STATUS  current
    DESCRIPTION
            "The collection of objects which are used to represent the
            list of logical entities for which a single SNMP entity
            provides management information."
    ::= { entityGroups 7 }

END

NORTEL-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       MODULE-IDENTITY, enterprises
           FROM SNMPv2-SMI;

nortel MODULE-IDENTITY
	LAST-UPDATED "200305010000Z"    
	ORGANIZATION "Northern Telecom Ltd."
   CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
   DESCRIPTION
	      "The Nortel Networks top-level MIB definition."
	::= { enterprises 562 }  

nortelGenericMIBs OBJECT IDENTIFIER ::= {nortel 29}
opterametro       OBJECT IDENTIFIER ::= {nortel 68}

END


NORTEL-GENERIC-MIB DEFINITIONS ::= BEGIN

IMPORTS
 
       MODULE-IDENTITY, OBJECT-IDENTITY, enterprises
           FROM SNMPv2-SMI;

nortelGenericMIBs  MODULE-IDENTITY
	    LAST-UPDATED "200802070000Z"    
	    ORGANIZATION "Nortel Networks"
	    CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
       DESCRIPTION  
               "This module represents the top-level MIB branch for some of the generic MIBs that are common to NortelNetworks products."

       -- Revision history
       REVISION "200802070000Z"
       DESCRIPTION
                " Removed Draft."

       REVISION "200305010000Z"
       DESCRIPTION
                " Updated with Generic Contact Information"
            
       REVISION "9906240000Z"
       DESCRIPTION
                " The fourth version of this MIB module. Module name changed."
                
       REVISION "199904120000Z"
       DESCRIPTION
                " The second version of this MIB module."
            
       REVISION "199903220000Z"
       DESCRIPTION
                " The first version of this MIB module."
            
               ::= { nortel 29 }

nortel OBJECT IDENTIFIER ::= {enterprises 562}    

END


NORTEL-ENTITY-VENDORTYPE-MIB DEFINITIONS ::= BEGIN 
    
   IMPORTS 
        nortelGenericMIBs FROM NORTEL-GENERIC-MIB 
        MODULE-IDENTITY FROM SNMPv2-SMI;

        nnEntityVendorType MODULE-IDENTITY 
        LAST-UPDATED "200812020000Z" 
        ORGANIZATION "Nortel Networks" 
        CONTACT-INFO 
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
 
      DESCRIPTION 
               "This MIB describes Nortel Network's vendor type identifiers 
               for use with the Entity MIB's entPhysicalVendorType."  
               
       REVISION "200812020000Z" 
       DESCRIPTION   
                " Updated to include PEC code based values"   
       REVISION "200006280000Z" 
       DESCRIPTION        
                " Initial version of this MIB. " 

       ::= { nortelGenericMIBs 5 } 
        
  nnEntityVendorTypeOther OBJECT IDENTIFIER ::= {nnEntityVendorType 1 } 
  nnEntityVendorTypeUnknown OBJECT IDENTIFIER ::= {nnEntityVendorType 2 } 
  nnEntityVendorTypeChassis OBJECT IDENTIFIER ::= {nnEntityVendorType 3 } 
  nnEntityVendorTypeBackplane OBJECT IDENTIFIER ::= {nnEntityVendorType 4 } 
  nnEntityVendorTypeContainer OBJECT IDENTIFIER ::= {nnEntityVendorType 5 } 
  nnEntityVendorTypePowerSupply OBJECT IDENTIFIER ::= {nnEntityVendorType 6 } 
  nnEntityVendorTypeFan OBJECT IDENTIFIER ::= {nnEntityVendorType 7 } 
  nnEntityVendorTypeSensor OBJECT IDENTIFIER ::= {nnEntityVendorType 8 } 
  nnEntityVendorTypeModule OBJECT IDENTIFIER ::= {nnEntityVendorType 9 } 
  nnEntityVendorTypePort OBJECT IDENTIFIER ::= {nnEntityVendorType 10 } 
  nnEntityVendorTypeStack OBJECT IDENTIFIER ::= {nnEntityVendorType 11 } 
  nnEntityVendorTypePecCodes OBJECT IDENTIFIER ::= {nnEntityVendorType 12 } 

--
-- Unknown Values
--      
-- These OIDs MUST be used when the insufficient information is available to
-- determine specific component type determination

-- Chassis 

   nnEntityVendorTypeChassisUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeChassis 1 } 
   
-- Backplane 

   nnEntityVendorTypeBackplaneUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeBackplane 1 } 

-- Container 

   nnEntityVendorTypeContainerUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeContainer 1 } 

-- Power Supply   

   nnEntityVendorTypePowerSupplyUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypePowerSupply 1 } 

-- Fan  

   nnEntityVendorTypeFanUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeFan 1 } 



-- Sensor  

   nnEntityVendorTypeSensorUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeSensor 1 } 

-- Module 

   nnEntityVendorTypeModuleUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeModule 1 } 

-- Port 

   nnEntityVendorTypePortUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypePort 1 } 

-- Stack 

   nnEntityVendorTypeStackUnknown OBJECT IDENTIFIER ::= {nnEntityVendorTypeStack 1 } 


-- Note that that physical components that don't have PEC codes
-- will use use OIDs defined in product specific MIBs or the Unknown values'
-- defined above.
  
--  
-- PEC Codes

-- OIDs under the PEC code arc are auto-generated from PEC codes using
-- the following algorithm:
--    1. Each character in the PEC code represents one layer of hierarchy.
--    2. Revision and other information after a "-" in the PEC code is
--       not included.
--    3. The alpha-numeric character is mapped to a numeric OID by first
--       converting to lower case and then using the decimal ASCII value. 
--
--    For example , ntaz00aa, including a subtree of 1.3.6.1.4.1.562.29.5.12
--    becomes 1.3.6.1.4.1.562.29.5.12.110.116.97.122.48.48.97.97
--          
 

END 


NORTEL-OPTICAL-GENERIC-MIB DEFINITIONS ::= BEGIN

IMPORTS
       nortel            FROM NORTEL-MIB

       MODULE-IDENTITY,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOpticalGenericMIBs MODULE-IDENTITY
        LAST-UPDATED "200802070000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "This Module represents the top-level MIB branch for the
               generic MIBs that are common to Nortel Optical products"
   
        --Revision history
        REVISION "200507120000Z"
        DESCRIPTION "Initial Version - created for CPL R2.0 & OME R1.5"
	
	REVISION "200802070000Z"
        DESCRIPTION "Formatting for OME REL 5.1"	       
        ::= { opterametro 10 }

opterametro OBJECT IDENTIFIER
        ::= { nortel 68 }
        

END

NORTEL-OPTICAL-OME6500-MIB DEFINITIONS ::= BEGIN

IMPORTS
       opterametro       FROM NORTEL-MIB	
       MODULE-IDENTITY,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

ome6500 MODULE-IDENTITY
        LAST-UPDATED "200802070000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module will be used to identify the top level for
              Nortel OME6500 Product MIBS"
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 4.0"
	
	REVISION "200802070000Z"
        DESCRIPTION "Updating formatting OME6500 REL 5.1"               
        ::= { opterametro 11 }

nnOme40G  OBJECT IDENTIFIER ::= { ome6500 3 }
        

END

   NORTEL-OPTICAL-PM-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       nnOpticalGenericMIBs FROM NORTEL-OPTICAL-GENERIC-MIB
       
       TEXTUAL-CONVENTION,
       DateAndTime          FROM SNMPv2-TC
         
       MODULE-IDENTITY, 
       OBJECT-IDENTITY, 
       OBJECT-TYPE, 
       Integer32            FROM SNMPv2-SMI
       
       SnmpAdminString      FROM SNMP-FRAMEWORK-MIB;

nnOpticalPmMIB MODULE-IDENTITY
        LAST-UPDATED "201601050000Z" 
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "This Module contains objects for Nortel Optical PMs"
   
        --Revision history
        REVISION "200508160000Z"
        DESCRIPTION "Initial Version - created for CPL R2.0 & OME R1.5"
        REVISION "200604120000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values for OME R2.5"               
        REVISION "200607120000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values for CPL R3.0"
        REVISION "200705210000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values for OME R5.0"
        REVISION "200802070000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values for OME R5.1"
        REVISION "200803250000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values for CPL R3.2"
        REVISION "200804020000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values for OME R5.11"
        REVISION "200808270000Z"
        DESCRIPTION "Added additional NnOpticalPmMonType values 
	             and  pS (pico seconds) Units for OME R5.2"
        REVISION "200903180000Z"
	DESCRIPTION "Added additional NnOpticalPmMonType values for OME R5.90"
	REVISION     "200906150000Z"
	DESCRIPTION  "MIB description enhancement"  
	REVISION     "201006180000Z"
	DESCRIPTION  "Added new monTypes from 137 to 144"	     
	REVISION     "201012310000Z"
	DESCRIPTION  "Added new monTypes for Colorless OCLD and OTM Far End PM for OME R8.0"	     
	REVISION     "201101180000Z"
	DESCRIPTION  "Added one new monType(154) for OCn type facility for OME R8.0"	     
	REVISION     "201206260000Z"
	DESCRIPTION  "Added one new span loss monTypes (155 to 158) for OME R9.5"	     
	REVISION     "201210180000Z"
	DESCRIPTION  "Added new QMIN, QMAX, QAVG, QSTDEV monTypes (159 to 162) for OME R9.2"	     
	REVISION     "201211060000Z"
	DESCRIPTION  "Added new monTypes, for OSC facility on RAMAN cards SRA, SAM and ESAM, (162 to 169) for OME R9.3"	     
	REVISION     "201302260000Z"
	DESCRIPTION  "Added ORLIN-OTS and ORLOUT-OTS monTypes (170 to 177) for RAMAN facility  for OME R9.3"	     
        REVISION     "201306230000Z"
	DESCRIPTION  "Added DMMIN-ODU, DMMAX-ODU and DMAVG-ODU monTypes (178 to 180) for OTM2 facility  for OME R9.3"
        REVISION     "201403140000Z"
	DESCRIPTION  "Added PSCW-E, PSCP-E, PSD-E, REMOTEINFRAMES-E, REMOTEINFRAMESERR-E, REMOTEFCSERR-E, REMOTEOUTFRAMES-E and REMOTEOUTFRAMESDISCDS-E monTypes (181 to 188) for ETH facility  for OME R10.1"
        REVISION     "201405140000Z"
	DESCRIPTION  "Added UNCFECBLK-OTU montype (189) for OME R10.1"
        REVISION     "201511240000Z"
	DESCRIPTION  "Added IAE-OTU montypes (190 to 191) for OME R11.1"
        REVISION     "201512030000Z"
	DESCRIPTION  "Added ES-W, SES-W, UAS-W and OUTFRAMESERR-W montypes (192 to 195) for OME R11.1"
        REVISION     "201601050000Z"
	DESCRIPTION  "Added montypes (196 to 200) for ODU4 and montypes (200 to 218) for ETH100G and montype (219) for OTM4 facility for OME R11.2"

        ::= { nnOpticalGenericMIBs 1 }

nnOpticalPmObjects OBJECT IDENTIFIER ::= { nnOpticalPmMIB 1 }

-- Nortel Optical PM Textual Conventions

NnOpticalPmMonType ::= TEXTUAL-CONVENTION
   STATUS        current
   DESCRIPTION
           "Nortel Optical PM Monitoring Type"
   SYNTAX        INTEGER
         {
          cvSectionRxNe (1),
          esSectionRxNe (2),
          sesSectionRxNe (3),
          sefsSectionRxNe (4),
          cvSectionTxNe (5),
          esSectionTxNe (6),
          sesSectionTxNe (7),
          cvLineRxNe (8),
          esLineRxNe (9),
          sesLineRxNe (10),
          uasLineRxNe (11),
          fcLineRxNe (12),
          cvLineTxNe (13),
          esLineTxNe (14),
          sesLineTxNe (15),
          uasLineTxNe (16),
          fcLineTxNe (17),
          inframesEthRxNe (18),
          fcserrEthRxNe (19),
          frtoolongsEthRxNe (20),
          frtooshortsEthRxNe (21),
          outframesEthTxNe (22),
          fcserrEthTxNe (23),
          cvPCSRxNe (24),
          esPCSRxNe (25),
          sesPCSRxNe (26),
          uasPCSRxNe (27),
          cvPCSTxNe (28),
          esPCSTxNe (29),
          sesPCSTxNe (30),
          uasPCSTxNe (31),
          oprOCHRxNe (32),
          oprnOCHRxNe (33),
          optOCHTxNe (34),
          optnOCHTxNe (35),
          cvOTURxNe (36),
          esOTURxNe (37),
          sesOTURxNe (38),
          sefsOTURxNe (39),
          fecOTURxNe (40),
          hccsOTURxNe (41),
          pfbereOTURxNe (42),
          prfberOTURxNe (43),
          cvODURxNe (44),
          esODURxNe (45),
          sesODURxNe (46),
          uasODURxNe (47),
          fcODURxNe (48),
          oprOTSRxNe (49),
          optOTSTxNe (50),
          orlOTSNaNe (51),
          opinOTSNaNe (52),
          grpopinOTSNaNe (53),
          grpgainOTSNaNe (54),
          opoutOTSNaNe (55),
          grpoptOTSTxNe (56),
          grpopoutOTSNaNe (57),
          esEthRxNe (58),
          sesEthRxNe (59),
          uasEthRxNe (60),
          dfrEthRxNe (61),
          inframeserrEthRxNe (62),
          inframesdiscdsEthRxNe (63),
          esEthTxNe (64),
          sesEthTxNe (65),
          uasEthTxNe (66),
          dfrEthTxNe (67),
          outframeserrEthTxNe (68),
          outframesdiscdsEthTxNe (69),
          esWanRxNe (70),
          sesWanRxNe (71),
          uasWanRxNe (72),
          inframesWanRxNe (73),
          inframeserrWanRxNe (74),
          outframesWanTxNe (75),
          oprMinOTSRxNe (76),
          oprMaxOTSRxNe (77),
          oprAvgOTSRxNe (78),
          optMinOTSTxNe (79),
          optMaxOTSTxNe (80),
          optAvgOTSTxNe (81),
          orlMinOTSNaNe (82),
          orlMaxOTSNaNe (83),
          orlAvgOTSNaNe (84),
          opinMinOTSNaNe (85),
          opinMaxOTSNaNe (86),
          opinAvgOTSNaNe (87),
          grpopinMinOTSNaNe (88),
          grpopinMaxOTSNaNe (89),
          grpopinAvgOTSNaNe (90),
          grpgainMinOTSNaNe (91),
          grpgainMaxOTSNaNe (92),
          grpgainAvgOTSNaNe (93),
          opoutMinOTSNaNe (94),
          opoutMaxOTSNaNe (95),
          opoutAvgOTSNaNe (96),
          grpoptMinOTSTxNe (97),
          grpoptMaxOTSTxNe (98),
          grpoptAvgOTSTxNe (99),
          grpopoutMinOTSNaNe (100),
          grpopoutMaxOTSNaNe (101),
          grpopoutAvgOTSNaNe (102),
          dfrWanRxNe (103),
          pscwODURxNe (104),
          pscpODURxNe (105),
          psdODURxNe (106),
          cvLineRxFe (107),
          esLineRxFe (108),
          sesLineRxFe (109),
          uasLineRxFe (110),
          fcLineRxFe (111),
          cvOTUTxNe (112),
          esOTUTxNe (113),
          sesOTUTxNe (114),
          cvODUTxNe (115),
          esODUTxNe (116),
          sesODUTxNe (117),
          uasODUTxNe (118),
          fcODUTxNe (119),
          oproscOTSNaNe (120),
          oproscMinOTSNaNe (121),
          oproscMaxOTSNaNe (122),
          oproscAvgOTSNaNe (123),
          pscwLineRxNe (124),
          pscpLineRxNe (125),
          psdLineRxNe (126),
          dropgainOTSNaNe (127),
          dropgainMinOTSNaNe (128),
          dropgainMaxOTSNaNe (129),
          dropgainAvgOTSNaNe (130),
          dgdMaxOCHRxNe (131),
          dgdAvgOCHRxNe (132),
	  optMinOCHTxNe (133),
	  optMaxOCHTxNe (134),    
          optAvgOCHTxNe (135),
          prfBerMaxOTURxNe (136),
          oprLowOCHRxNe (137), 
          oprHighOCHRxNe (138),
          oprnLowOCHRxNe (139),
          oprnHighOCHRxNe (140),
          optLowOCHTxNe  (141),
          optHighOCHTxNe (142),
          optnLowOCHTxNe (143),
          optnHighOCHTxNe (144),
          cvOTURxFe (145),
          esOTURxFe (146),
          sesOTURxFe (147),
          cvODURxFe (148),
          esODURxFe (149),
          sesODURxFe (150),
          uasODURxFe (151),
          fcODURxFe (152),
          oprnOTSRxNe (153),
          sefsSectionTxNe (154),
          spanLossOCH (155),
          spanLossMinOCH (156),
          spanLossMaxOCH (157),
          spanLossAvgOCH (158),
          qMinOTU(159),
          qMaxOTU(160),
          qAvgOTU(161),
          qStdevOTU(162),
          oprMinOCHRxNe(163),
          oprMaxOCHRxNe(164),
          oprAvgOCHRxNe(165),
          optOCHRxNe(166),
          optMinOCHRxNe(167),
          optMaxOCHRxNe(168),
          optAvgOCHRxNe(169),
          orlInOTSNaNe (170),
          orlInMinOTSNaNe (171),
          orlInMaxOTSNaNe (172),
          orlInAvgOTSNaNe (173),
          orlOutOTSNaNe (174),
          orlOutMinOTSNaNe (175),
          orlOutMaxOTSNaNe (176),
          orlOutAvgOTSNaNe (177),
          dmMinODURxNe (178),
          dmMaxODURxNe (179),
          dmAvgODURxNe (180),
          pscwEthRxNe (181),
          pscpEthRxNe (182),
          psdEthRxNe (183),
          remoteInframesEthRxNe (184),
          remoteInframesErrEthRxNe (185),
          remoteFcsErrEthRxNe (186),
          remoteOutframesEthTxNe (187),
          remoteOutframesDiscdsEthTxNe (188),
          uncfecblkOtuRxNe (189),
          iaeOtuRxNe (190),
          iaeOtuRxFe (191),
          esWanTxNe (192),
          sesWanTxNe (193),
          uasWanTxNe (194),
          outframeserrWanTxNe (195),
          cvODUTxFe (196),      
          esODUTxFe (197),     
          sesODUTxFe (198),     
          uasODUTxFe (199),     
          fcODUTxFe (200),       
          fecPMARxNe (201),              
          fecccwPMARxNe (202),           
          fecunccwPMARxNe (203),         
          hccsPMARxNe (204),             
          prfberAvgPMARxNe (205),        
          prfberMaxPMARxNe (206),        
          fecLane0PMARxNe (207),         
          prfberAvgLane0PMARxNe (208),   
          prfberMaxLane0cPMARxNe (209),  
          fecLane1PMARxNe (210),         
          prfberAvgLane1PMARxNe (211),   
          prfberMaxLane1cPMARxNe (212),  
          fecLane2PMARxNe (213),         
          prfberAvgLane2PMARxNe (214),   
          prfberMaxLane2PMARxNe (215),   
          fecLane3PMARxNe (216),         
          prfberAvgLane3PMARxNe (217),   
          prfberMaxLane3PMARxNe (218),   
          dgdMinOCHRxNe (219)
         }

NnOpticalPmUnits ::= TEXTUAL-CONVENTION
  STATUS        current
  DESCRIPTION
          "Nortel Optical PM Units Indicator"
  SYNTAX        INTEGER
        {
         none (1),
         dB (2),
         dBm (3),
         percent (4),
         ber (5),
         pS (6)
        }

-- Nortel Optical PM Units & Format
-- none:    Unsigned integer value
-- dB:      Signed float value with 2 decimal digits
-- dBm:     Signed float value with 2 decimal digits
-- percent: Signed integer value
-- ber:     Unsigned integer value (dd of 1E-dd -3<=dd<=-37)
-- pS:      pico seconds (10E-12)


NnOpticalPmValidity ::= TEXTUAL-CONVENTION
   STATUS        current
   DESCRIPTION
           "Nortel Optical PM Validity Indicator"
   SYNTAX        INTEGER
         {
          notApplicable(1),
          complete (2),
          partial (3),
          adjusted (4)
         }

-- Nortel Optical Recent PM Table
-- (Current & Previous 15 Minute, Current & Previous Day PMs)

nnOpticalPmRecent OBJECT IDENTIFIER ::= { nnOpticalPmObjects 1}

nnOpticalPmRecentTable OBJECT-TYPE
   SYNTAX        SEQUENCE OF NnOpticalPmRecentEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Table"
   ::={ nnOpticalPmRecent 1 }

nnOpticalPmRecentEntry OBJECT-TYPE
   SYNTAX        NnOpticalPmRecentEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Table Entry"
   INDEX { nnOpticalPmRecentIfIndex, nnOpticalPmRecentMonType }
   ::={ nnOpticalPmRecentTable 1 }

NnOpticalPmRecentEntry ::= SEQUENCE {
    nnOpticalPmRecentIfIndex         Integer32,
    nnOpticalPmRecentMonType         NnOpticalPmMonType,
    nnOpticalPmRecentIfIndexDescr    SnmpAdminString,
    nnOpticalPmRecentMonTypeDescr    SnmpAdminString,
    nnOpticalPmRecentUnits           NnOpticalPmUnits,
    nnOpticalPmCurr15MinValue        SnmpAdminString,
    nnOpticalPmCurr15MinValidity     NnOpticalPmValidity,
    nnOpticalPmCurr15MinDateAndTime  DateAndTime,
    nnOpticalPmPrev15MinValue        SnmpAdminString,
    nnOpticalPmPrev15MinValidity     NnOpticalPmValidity,
    nnOpticalPmPrev15MinDateAndTime  DateAndTime,
    nnOpticalPmCurrDayValue          SnmpAdminString,
    nnOpticalPmCurrDayValidity       NnOpticalPmValidity,
    nnOpticalPmCurrDayDateAndTime    DateAndTime,
    nnOpticalPmPrevDayValue          SnmpAdminString,
    nnOpticalPmPrevDayValidity       NnOpticalPmValidity,
    nnOpticalPmPrevDayDateAndTime    DateAndTime
    }
    
nnOpticalPmRecentIfIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Interface Index"
   ::={ nnOpticalPmRecentEntry 1 }

nnOpticalPmRecentMonType OBJECT-TYPE
   SYNTAX        NnOpticalPmMonType 
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Monitoring Type"
   ::={ nnOpticalPmRecentEntry 2}

nnOpticalPmRecentIfIndexDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Interface Index Description"
   ::={ nnOpticalPmRecentEntry 3}

nnOpticalPmRecentMonTypeDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Monitoring Type Description"
   ::={ nnOpticalPmRecentEntry 4}

nnOpticalPmRecentUnits OBJECT-TYPE
   SYNTAX        NnOpticalPmUnits
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Recent PM Units"
   ::={ nnOpticalPmRecentEntry 5 }

nnOpticalPmCurr15MinValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Current 15 Min PM Monitored Value"
   ::={ nnOpticalPmRecentEntry 6 }
   
nnOpticalPmCurr15MinValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Current 15 Min PM Validity Indicator"
   ::={ nnOpticalPmRecentEntry 7 }

nnOpticalPmCurr15MinDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Current 15 Min PM Date & Time"
   ::={ nnOpticalPmRecentEntry 8 }

nnOpticalPmPrev15MinValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Previous 15 Min PM Monitored Value"
   ::={ nnOpticalPmRecentEntry 9 }

nnOpticalPmPrev15MinValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Previous 15 Min PM Validity Indicator"
   ::={ nnOpticalPmRecentEntry 10 }

nnOpticalPmPrev15MinDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Previous 15 Min PM Date & Time"
   ::={ nnOpticalPmRecentEntry 11 }

nnOpticalPmCurrDayValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Current Day Monitored Value"
   ::={ nnOpticalPmRecentEntry 12 }

nnOpticalPmCurrDayValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Current Day PM Validity Indicator"
   ::={ nnOpticalPmRecentEntry 13 }

nnOpticalPmCurrDayDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Current Day PM Date & Time"
   ::={ nnOpticalPmRecentEntry 14 }

nnOpticalPmPrevDayValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Previous Day PM Monitored Value"
   ::={ nnOpticalPmRecentEntry 15 }

nnOpticalPmPrevDayValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Previous Day PM Validity Indicator"
   ::={ nnOpticalPmRecentEntry 16 }

nnOpticalPmPrevDayDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Previous Day PM Date & Time"
   ::={ nnOpticalPmRecentEntry 17 }

-- Nortel Optical Untimed PM Table

nnOpticalPmUntimed OBJECT IDENTIFIER ::= { nnOpticalPmObjects 2 }

nnOpticalPmUntTable OBJECT-TYPE
   SYNTAX        SEQUENCE OF NnOpticalPmUntEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Table"
   ::= { nnOpticalPmUntimed 1 }

nnOpticalPmUntEntry OBJECT-TYPE
   SYNTAX        NnOpticalPmUntEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Table Entry"
   INDEX { nnOpticalPmUntIfIndex, nnOpticalPmUntMonType }
   ::= { nnOpticalPmUntTable 1 }

NnOpticalPmUntEntry ::= SEQUENCE {
    nnOpticalPmUntIfIndex         Integer32,
    nnOpticalPmUntMonType         NnOpticalPmMonType,
    nnOpticalPmUntIfIndexDescr    SnmpAdminString,
    nnOpticalPmUntMonTypeDescr    SnmpAdminString,
    nnOpticalPmUntUnits           NnOpticalPmUnits,
    nnOpticalPmUntValue           SnmpAdminString,
    nnOpticalPmUntValidity        NnOpticalPmValidity,
    nnOpticalPmUntDateAndTime     DateAndTime
   }

nnOpticalPmUntIfIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Interface Index"
   ::={ nnOpticalPmUntEntry 1 }

nnOpticalPmUntMonType OBJECT-TYPE
   SYNTAX        NnOpticalPmMonType
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Monitoring Type"
   ::={ nnOpticalPmUntEntry 2}

nnOpticalPmUntIfIndexDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Interface Index Description"
   ::={ nnOpticalPmUntEntry 3 }

nnOpticalPmUntMonTypeDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM MonType Description"
   ::={ nnOpticalPmUntEntry 4 }

nnOpticalPmUntUnits OBJECT-TYPE
   SYNTAX        NnOpticalPmUnits
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Units"
   ::={ nnOpticalPmUntEntry 5 }

nnOpticalPmUntValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Monitored Value"
   ::={ nnOpticalPmUntEntry 6 }

nnOpticalPmUntValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Validity Indicator"
   ::={ nnOpticalPmUntEntry 7 }

nnOpticalPmUntDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Untimed PM Monitoring Date & Time"
   ::={ nnOpticalPmUntEntry 8 }

-- Nortel Optical Baseline PM Table

nnOpticalPmBaseline OBJECT IDENTIFIER ::= { nnOpticalPmObjects 3 }

nnOpticalPmBaslnTable OBJECT-TYPE
   SYNTAX        SEQUENCE OF NnOpticalPmBaslnEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Table"
   ::= { nnOpticalPmBaseline 1 }

nnOpticalPmBaslnEntry OBJECT-TYPE
   SYNTAX        NnOpticalPmBaslnEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Table Entry"
   INDEX { nnOpticalPmBaslnIfIndex, nnOpticalPmBaslnMonType }
   ::= { nnOpticalPmBaslnTable 1 }

NnOpticalPmBaslnEntry ::= SEQUENCE {
    nnOpticalPmBaslnIfIndex         Integer32,
    nnOpticalPmBaslnMonType         NnOpticalPmMonType,
    nnOpticalPmBaslnIfIndexDescr    SnmpAdminString,
    nnOpticalPmBaslnMonTypeDescr    SnmpAdminString,
    nnOpticalPmBaslnUnits           NnOpticalPmUnits,
    nnOpticalPmBaslnValue           SnmpAdminString,
    nnOpticalPmBaslnValidity        NnOpticalPmValidity,
    nnOpticalPmBaslnDateAndTime     DateAndTime
   }

nnOpticalPmBaslnIfIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Interface Index"
   ::={ nnOpticalPmBaslnEntry 1 }

nnOpticalPmBaslnMonType OBJECT-TYPE
   SYNTAX        NnOpticalPmMonType
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Monitoring Type"
   ::={ nnOpticalPmBaslnEntry 2}

nnOpticalPmBaslnIfIndexDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Interface Index Description "
   ::={ nnOpticalPmBaslnEntry 3 }

nnOpticalPmBaslnMonTypeDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Monitoring Type Description "
   ::={ nnOpticalPmBaslnEntry 4 }

nnOpticalPmBaslnUnits OBJECT-TYPE
   SYNTAX        NnOpticalPmUnits
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Units"
   ::={ nnOpticalPmBaslnEntry 5 }

nnOpticalPmBaslnValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Monitored Value"
   ::={ nnOpticalPmBaslnEntry 6 }

nnOpticalPmBaslnValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Validity Indicator"
   ::={ nnOpticalPmBaslnEntry 7 }

nnOpticalPmBaslnDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Baseline PM Monitoring Date & Time"
   ::={ nnOpticalPmBaslnEntry 8 }

-- Nortel Optical Timed PM Tables (15 Minute & Day PMs )

nnOpticalPmTimed OBJECT IDENTIFIER ::= { nnOpticalPmObjects 4 }

nnOpticalPm15Min OBJECT IDENTIFIER ::= { nnOpticalPmTimed 1}

nnOpticalPm15MinTable OBJECT-TYPE
   SYNTAX        SEQUENCE OF NnOpticalPm15MinEntry 
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Table"
   ::= { nnOpticalPm15Min 1 }

nnOpticalPm15MinEntry OBJECT-TYPE
   SYNTAX        NnOpticalPm15MinEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Table Entry"
   INDEX { nnOpticalPm15MinIfIndex, nnOpticalPm15MinIntIndex,
           nnOpticalPm15MinMonType }
   ::= { nnOpticalPm15MinTable 1 }

NnOpticalPm15MinEntry ::= SEQUENCE {
    nnOpticalPm15MinIfIndex         Integer32,
    nnOpticalPm15MinIntIndex        Integer32,
    nnOpticalPm15MinMonType         NnOpticalPmMonType,
    nnOpticalPm15MinIfIndexDescr    SnmpAdminString,
    nnOpticalPm15MinMonTypeDescr    SnmpAdminString,
    nnOpticalPm15MinUnits           NnOpticalPmUnits,
    nnOpticalPm15MinValue           SnmpAdminString,
    nnOpticalPm15MinValidity        NnOpticalPmValidity,
    nnOpticalPm15MinDateAndTime     DateAndTime
   }

nnOpticalPm15MinIfIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Interface Index"
   ::={ nnOpticalPm15MinEntry 1 }

nnOpticalPm15MinIntIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Interval Index.
       Valid index values are 0-32 with 0 being
       the current 15 minute interval and 1-32
       being the previous 15 minute intervals."
   ::={ nnOpticalPm15MinEntry 2}

nnOpticalPm15MinMonType OBJECT-TYPE
   SYNTAX        NnOpticalPmMonType
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Monitoring Type"
   ::={ nnOpticalPm15MinEntry 3}

nnOpticalPm15MinIfIndexDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Interface Index Description"
   ::={ nnOpticalPm15MinEntry 4 }

nnOpticalPm15MinMonTypeDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Monitoring Type Description"
   ::={ nnOpticalPm15MinEntry 5 }

nnOpticalPm15MinUnits OBJECT-TYPE
   SYNTAX        NnOpticalPmUnits
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Units"
   ::={ nnOpticalPm15MinEntry 6 }

nnOpticalPm15MinValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Monitored Value"
   ::={ nnOpticalPm15MinEntry 7 }

nnOpticalPm15MinValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Validity Indicator"
   ::={ nnOpticalPm15MinEntry 8 }

nnOpticalPm15MinDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical 15 Minute PM Monitoring Date & Time"
   ::={ nnOpticalPm15MinEntry 9 }

nnOpticalPmDay OBJECT IDENTIFIER ::= { nnOpticalPmTimed 2 }

nnOpticalPmDayTable OBJECT-TYPE
   SYNTAX        SEQUENCE OF NnOpticalPmDayEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Table"
   ::= { nnOpticalPmDay 1 }

nnOpticalPmDayEntry OBJECT-TYPE
   SYNTAX        NnOpticalPmDayEntry
   MAX-ACCESS    not-accessible
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Table Entry"
   INDEX { nnOpticalPmDayIfIndex, nnOpticalPmDayIntIndex,
           nnOpticalPmDayMonType }
   ::= { nnOpticalPmDayTable 1 }

NnOpticalPmDayEntry ::= SEQUENCE {
    nnOpticalPmDayIfIndex         Integer32,
    nnOpticalPmDayIntIndex        Integer32,
    nnOpticalPmDayMonType         NnOpticalPmMonType,
    nnOpticalPmDayIfIndexDescr    SnmpAdminString,
    nnOpticalPmDayMonTypeDescr    SnmpAdminString,
    nnOpticalPmDayUnits           NnOpticalPmUnits,
    nnOpticalPmDayValue           SnmpAdminString,
    nnOpticalPmDayValidity        NnOpticalPmValidity,
    nnOpticalPmDayDateAndTime     DateAndTime
   }

nnOpticalPmDayIfIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Interface Index"
   ::={ nnOpticalPmDayEntry 1 }

nnOpticalPmDayIntIndex OBJECT-TYPE
   SYNTAX        Integer32
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Interval Index.
       Valid index values are 0-1 with 0 being
       the current day interval and 1 being the
       previous day interval"
   ::={ nnOpticalPmDayEntry 2}

nnOpticalPmDayMonType OBJECT-TYPE
   SYNTAX        NnOpticalPmMonType
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical PM Monitoring Type"
   ::={ nnOpticalPmDayEntry 3}

nnOpticalPmDayIfIndexDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Interface Index Description"
   ::={ nnOpticalPmDayEntry 4 }

nnOpticalPmDayMonTypeDescr OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Monitoring Type Description"
   ::={ nnOpticalPmDayEntry 5 }

nnOpticalPmDayUnits OBJECT-TYPE
   SYNTAX        NnOpticalPmUnits
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Units"
   ::={ nnOpticalPmDayEntry 6 }

nnOpticalPmDayValue OBJECT-TYPE
   SYNTAX        SnmpAdminString
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Monitored Value"
   ::={ nnOpticalPmDayEntry 7 }

nnOpticalPmDayValidity OBJECT-TYPE
   SYNTAX        NnOpticalPmValidity
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Validity Indicator"
   ::={ nnOpticalPmDayEntry 8 }

nnOpticalPmDayDateAndTime OBJECT-TYPE
   SYNTAX        DateAndTime
   MAX-ACCESS    read-only
   STATUS        current
   DESCRIPTION
      "Nortel Optical Day PM Monitoring Date & Time"
   ::={ nnOpticalPmDayEntry 9 }

END

NORTEL-OME40G-MIB DEFINITIONS ::= BEGIN

IMPORTS
       opterametro       FROM NORTEL-MIB

       MODULE-IDENTITY,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme40G MODULE-IDENTITY
        LAST-UPDATED "200805010000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (OME)
               - This Module will be used to identify the top level of 
	       the Nortel OME6500 40G MIBS"
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 4.0"
	
	REVISION "200802070000Z"
        DESCRIPTION "Updating Formatting and added ome6500 
	OBJECT IDENTIFIER for OME6500 REL 5.1"     
	 
	REVISION "200805010000Z"
        DESCRIPTION "nnOme40G MODULE-IDENTITY's DESCRIPTION is updated."            
        ::= { ome6500 3 }

ome6500 OBJECT IDENTIFIER ::= { opterametro 11 }

END


   NORTEL-OME40G-CNXN-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       nnOme40G            FROM NORTEL-OME40G-MIB
       DisplayString       FROM RFC1213-MIB
       RowStatus           FROM SNMPv2-TC
       InterfaceIndex      FROM IF-MIB

       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme40GConnections MODULE-IDENTITY
        LAST-UPDATED "200802070000Z"
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This module shall contain information on 40G channel assignments."
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.1"               

	REVISION "200802070000Z"
        DESCRIPTION "Updating row formatting OME6500 REL 5.11"
        ::= { nnOme40G 2 }

nnCrossConnects      OBJECT IDENTIFIER ::= { nnOme40GConnections 1 }

nnCrossConnectsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF NnCrossConnectsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "This table contains all the channel/port assignments"
	::= { nnCrossConnects 1 }

nnCrossConnectsEntry OBJECT-TYPE
	SYNTAX NnCrossConnectsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { fromIfIndex, toIfIndex }
	::= { nnCrossConnectsTable 1 }

NnCrossConnectsEntry ::= 
	SEQUENCE {
		fromIfIndex
			InterfaceIndex,
		toIfIndex
			InterfaceIndex,
		payloadIndex
			INTEGER,
		xcRowStatus
			RowStatus,
		crossConnectType
			INTEGER,
		crossConnectName
			DisplayString
	}

fromIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndex
	MAX-ACCESS read-create
	STATUS current
	DESCRIPTION ""
	::= { nnCrossConnectsEntry 1 } 


toIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndex
	MAX-ACCESS read-create
	STATUS current
	DESCRIPTION ""
	::= { nnCrossConnectsEntry 2 } 


payloadIndex OBJECT-TYPE
	SYNTAX INTEGER(1..4)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { nnCrossConnectsEntry 3 } 

xcRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnCrossConnectsEntry 4 } 

crossConnectType OBJECT-TYPE
	SYNTAX INTEGER {
		one-way(1),
		two-way(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnCrossConnectsEntry 5 } 

crossConnectName OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnCrossConnectsEntry 6 } 

END


   NORTEL-OME40G-FAC-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       nnOme40G            FROM NORTEL-OME40G-MIB
       DisplayString       FROM RFC1213-MIB
       RowStatus           FROM SNMPv2-TC
       ifIndex             FROM IF-MIB


       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme40GFacilities MODULE-IDENTITY
        LAST-UPDATED "201408180000Z"
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module will be used to identify the facility attributes for
              Nortel OME6500 40G facilities"
   
        --Revision history
        REVISION "200708100000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.1" 
        
        REVISION "200905200000Z"
        DESCRIPTION 
	        "String length were changed from 32 to 64 for the following attributes:
	         otuTxTTI,oduTxTTI, otuRxExpTTI,oduRxExpTTI in  OME6500 REL 6.0"  

        REVISION "201408180000Z"
        DESCRIPTION 
	        "Added new enums gfp-mactr192(5), gfp-std192(6), gfp-mactr64(7), gfp-std64(8),
                gfp-macostr(9), gfp-macostr192(10), gfp-macostr64(11), ull(12)for ethMapping 
                in OME6500 REL 10.1"
              
	::= { nnOme40G 1 }

nnOCn        OBJECT IDENTIFIER ::= { nnOme40GFacilities 1 }
nnOTMn       OBJECT IDENTIFIER ::= { nnOme40GFacilities 2 }
nnEth        OBJECT IDENTIFIER ::= { nnOme40GFacilities 3 }
nnWAN        OBJECT IDENTIFIER ::= { nnOme40GFacilities 4 }


GccValues ::= INTEGER {
	    unknown(0),
        none(1),
		gcc0(2),
		gcc1(3),
		gcc2(4)
}


-- The Admin State and Primary States 
-- are doubly defined in the 40G Fac
-- module and the OME6500 Equipment
-- module. Ultimately, they need to 
-- be merged. In the meantime, they
-- need to be concurrently updated.
AdminState ::= INTEGER  {
    unknown(0),
    is(1),
    oos(2)
}

PrimaryState ::= INTEGER {
    unknown(0),
    is(1),
    is-anr(2),
    oos-au(3),
    oos-ma(4),
    oos-auma(5),
    oos-maanr(6)
}

LoopbackType ::= INTEGER {
    unknown(0),
    none(1),
    facility(2),
    terminal(3),
    efmremote(4)
}

Status ::= INTEGER {
    unknown(0),
    enabled(1),
    disabled(2)
}

FecFormat ::= INTEGER {
    unknown(0),
    off(1),
    rs8(2),
    scfec(3),
    bch20(4),
    pfec(5)
}


nnOCnTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF NnOCnEntry
	MAX-ACCESS  not-accessible
	STATUS  current
	DESCRIPTION  "Contains entries for OC192 and OC768 facilities"
	::= { nnOCn 1 }

nnOCnEntry OBJECT-TYPE
	SYNTAX NnOCnEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "This entry shall contain all the necessary attributes
                     for the OC768 and OC192 facilities in the 40G card"
	INDEX { ifIndex }
    ::= { nnOCnTable 1 }

NnOCnEntry ::= 
    SEQUENCE {
		ocnRowStatus
			RowStatus,
		stFormat
			INTEGER,
		expSTrc
			DisplayString,
		stfMode
			INTEGER,
		eBerTh
			Integer32,
		ocnPortMode
			INTEGER,
		ocnLaserOffFarEndFail
			Status,
		oChTxActOcnPwr
			DisplayString,
		oChTxMinOcnPwr
			DisplayString,
		oChTxMaxOcnPwr
			DisplayString,
		oChRxActOcnPwr
			DisplayString,
		oChRxMinOcnPwr
			DisplayString,
		oChRxMaxOcnPwr
			DisplayString,
		expSectionTraceMsg
			DisplayString,
		incSectionTraceMsg
			DisplayString,
		ocnLoopbackType
			LoopbackType,
		ocnPrimaryState
			PrimaryState,
		ocnSecondaryState
			DisplayString,
		ocnAdminState
			AdminState,
		ocnAID
			DisplayString
	}


ocnRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This attribute is used to manage rows in the 
	             facility entry"
	::= { nnOCnEntry 1 }

stFormat OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		num(1),
		string(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Section trace format"
	::= { nnOCnEntry 2 }

expSTrc OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Expected section trace"
	::= { nnOCnEntry 3 }

stfMode OBJECT-TYPE
	SYNTAX INTEGER {
        unknown(0),
		off(1),
		almonly(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Section trace alarming mode"
	::= { nnOCnEntry 4 }

eBerTh OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Excessive Bit rate threshold"
	::= { nnOCnEntry 5 }

ocnPortMode OBJECT-TYPE
	SYNTAX INTEGER {
        unknown(0),
		sonet(1),
		sdh(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Port mode can eithter be SONET or SDH"
	::= { nnOCnEntry 6 }

ocnLaserOffFarEndFail OBJECT-TYPE
    SYNTAX Status
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "It can either be Enabled or Disabled."
	::= { nnOCnEntry 7 }

oChTxActOcnPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Actual Optical Channel transmit power. 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOCnEntry 8 }

oChTxMinOcnPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Minimum Optical Channel transmit power"
	::= { nnOCnEntry 9 }

oChTxMaxOcnPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Maximum Optical Channel transmit power"
	::= { nnOCnEntry 10 }

oChRxActOcnPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Actual Optical Channel receive power. 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOCnEntry 11 }

oChRxMinOcnPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Minimum Optical Channel receive power."
	::= { nnOCnEntry 12 }

oChRxMaxOcnPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Maximum Optical Channel receive power."
	::= { nnOCnEntry 13 }


expSectionTraceMsg OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Expected section trace message. 
                 This variable contains data during GET
                 operations only. GET-NEXT returns No Assigned Value"
	::= { nnOCnEntry 14 }

incSectionTraceMsg OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Incoming section trace message
                 This variable contains data during GET
                 operations only. GET-NEXT returns No Assigned Value"
	::= { nnOCnEntry 15 }

ocnLoopbackType OBJECT-TYPE
	SYNTAX LoopbackType
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Nothing is returned if Loopback is not active; 
	             otherwise the facility is returned."
	::= { nnOCnEntry 16 }

ocnPrimaryState OBJECT-TYPE
	SYNTAX PrimaryState
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Primary State of the faciltiy. Can only be modified
                 by changing the admin state."
	::= { nnOCnEntry 17 }

ocnSecondaryState OBJECT-TYPE
	SYNTAX DisplayString
    MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Secondary state for the facility. A facility can have
                 more than one secondary state as different combinations
                 of the individual secondary state. It is represented 
                 as a string to capture all the combinations. Those
                 combinations along with the Primary state are used 
                 to compute the admin state.  Can be any combination of 
                 flt, sgeo, lpbk, discd, ts, wrkrx, wrktx."
	::= { nnOCnEntry 18 }

ocnAdminState OBJECT-TYPE
	SYNTAX AdminState
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is a write-only variable. The user can restore
                 or remove facilities using this command. You restore
                 a facility by setting this variable to IS and remove
                 it by setting it to OOS. During Row-create, a user can 
                 use this variable to set the initial state of the facility.

                 Because this is a write-only variable, the user is expected
                 to read the Primary and Secondary state of the facility
                 to determine the state of the facility. "
	::= { nnOCnEntry 19 }

ocnAID OBJECT-TYPE
	SYNTAX  DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Facility AID as received from TL1. This should include
                 the FAC type, shelf id, slot, and port."
	::= { nnOCnEntry 20 }

nnOTMnTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF NnOTMnEntry
	MAX-ACCESS  not-accessible
	STATUS  current
	DESCRIPTION  "Contains entries for the OTM2/3 facilities"
	::= { nnOTMn 1 }

nnOTMnEntry OBJECT-TYPE
	SYNTAX NnOTMnEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "An Entry for the OTM2/3 facilities"
	INDEX { ifIndex }
	::= { nnOTMnTable 1 }

NnOTMnEntry ::= 
	SEQUENCE {
		otmRowStatus
			RowStatus,
		osid
			DisplayString,
		otuTxFecFmt
			FecFormat,
		otuRxFecFmt
			FecFormat,
		oduTerm
			INTEGER,
		otuTxTTI
			DisplayString,
		oduTxTTI
			DisplayString,
		otuRxExpTTI
			DisplayString,
		oduRxExpTTI
			DisplayString,
		txPathId
			INTEGER,
		oChTxPwr
			DisplayString,
		oChTxActOtmPwr
			DisplayString,
		oChTxMinOtmPwr
			DisplayString,
		oChTxMaxOtmPwr
			DisplayString,
		oChRxActOtmPwr
			DisplayString,
		oChRxMinOtmPwr
			DisplayString,
		oChRxMaxOtmPwr
			DisplayString,
		oChTxWvlngthProv
			DisplayString,
		oChTxWvlngthMin
			DisplayString,
		oChTxWvlngthMax
			DisplayString,
		oChTxWvlngthSpacing
			DisplayString,
		oChRxActDisp
			DisplayString,
		oChRxActPmd
			DisplayString,
		oChRxPmdMax
			DisplayString,
		oChRxEchoTrace
			DisplayString,
		oChTxTrace
			DisplayString,
		oChTxTrace
			DisplayString,
		oChTxAssocFarEndRx
			DisplayString,
		otmPortMode
			INTEGER,
		tfMode
			INTEGER,
		oduTfMode
			INTEGER,
		otmLaserOffFarEndFail 
			Status,
		preFecSigFailThreshLevel
			DisplayString,
		otuSignalDegradeThreshLevel
			Integer32,
		oduMonitorEnabled
			INTEGER,
		lineRate
			INTEGER,
		otuExpTTI
			DisplayString,
		otuRxIncTTI
			DisplayString,
		oduRxIncTTI
			DisplayString,
		oduMonitorMsg
			DisplayString,
		otmLoopbackType
			LoopbackType,
		opu2reserved
			INTEGER,
		expectedPayloadType
			DisplayString,
		transmittedPayloadType
			DisplayString,
		receivedPayloadType
			DisplayString,
		otmPrimaryState
			PrimaryState,
		otmSecondaryState
			DisplayString,
		otmAdminState
			AdminState,
		otmAID
			DisplayString,
        otmGCC
            GccValues, 
        ospfCircuit
			DisplayString,
        oChDifferentialEncoding 
            INTEGER
	}

otmRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Used to create/delete, put in service and out of
                     service, and edit."
	::= { nnOTMnEntry 1 }

osid OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Optical Service ID"
	::= { nnOTMnEntry 2 }

otuTxFecFmt OBJECT-TYPE
	SYNTAX FecFormat
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "OTU transmit FEC format"
	::= { nnOTMnEntry 3 }

otuRxFecFmt OBJECT-TYPE
	SYNTAX FecFormat
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "OTU receive FEC format"
	::= { nnOTMnEntry 4 }

oduTerm OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		yes(1),
		no(2)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Indicates whether or not ODU TTI is terminated
                     on this OTMn facility. Possible values are
                     ODUTTITERM for OTM2 or ODUTERM for OTM3."
	::= { nnOTMnEntry 5 }

otuTxTTI OBJECT-TYPE
	SYNTAX DisplayString(SIZE(0..64))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "OTU transmit trail trace identifier."
	::= { nnOTMnEntry 6 }

oduTxTTI OBJECT-TYPE
	SYNTAX DisplayString(SIZE(0..64))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "ODU transmit trail trace identifier."
	::= { nnOTMnEntry 7 }

otuRxExpTTI OBJECT-TYPE
	SYNTAX DisplayString(SIZE(0..64))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "OTU receive trail trace identifier."
	::= { nnOTMnEntry 8 }

oduRxExpTTI OBJECT-TYPE
	SYNTAX DisplayString(SIZE(0..64))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "ODU receive trail trace identifer."
	::= { nnOTMnEntry 9 }

txPathId OBJECT-TYPE
	SYNTAX INTEGER(1..255)
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Transmit path identifier"
	::= { nnOTMnEntry 10 }

oChTxPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Provisioned output power"
	::= { nnOTMnEntry 11 }

oChTxActOtmPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Actual optical channel transmit power. 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOTMnEntry 12 }

oChTxMinOtmPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Minimum transmit power."
	::= { nnOTMnEntry 13 }

oChTxMaxOtmPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Maximum transmit power."
	::= { nnOTMnEntry 14 }

oChRxActOtmPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Actual receive power 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOTMnEntry 15 }

oChRxMinOtmPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Minimum receive power"
	::= { nnOTMnEntry 16 }

oChRxMaxOtmPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Maximum receive power"
	::= { nnOTMnEntry 17 }

oChTxWvlngthProv OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Provisioned transmit wavelength"
	::= { nnOTMnEntry 18 }

oChTxWvlngthMin OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Minimum transmit wavelength"
	::= { nnOTMnEntry 19 }

oChTxWvlngthMax OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Maximum Transmit wavelength"
	::= { nnOTMnEntry 20 }

oChTxWvlngthSpacing OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Transmit wavelength spacing"
	::= { nnOTMnEntry 21 }

oChRxActDisp OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Actual receive dispersion. 
                 Data for this variable is only available from
                 the subtending card. This data is retrieved from
                 the SP with GET-NEXT. When there is no real-hardware
                 the GET request will get no data and GET-NEXT will
                 return SP data (most likely UNKNOWN). When there is
                 hardware, the GET-NEXT will still return SP data but
                 the GET will get the actual reading from the hardware.
                 This approach is necessary to make sure table views
                 and index discoveries are not stalled on queries to
                 the subtending cards."
	::= { nnOTMnEntry 22 }

oChRxActPmd OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Actual receive polarization mode dispersion (PMD) 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOTMnEntry 23 }

oChRxPmdMax OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Maximum receive PMD"
	::= { nnOTMnEntry 24 }

oChRxEchoTrace OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Data for this variable is only available from
                 the subtending card. This data is retrieved from
                 the SP with GET-NEXT. When there is no real-hardware
                 the GET request will get no data and GET-NEXT will
                 return SP data (most likely UNKNOWN). When there is
                 hardware, the GET-NEXT will still return SP data but
                 the GET will get the actual reading from the hardware.
                 This approach is necessary to make sure table views
                 and index discoveries are not stalled on queries to
                 the subtending cards."
	::= { nnOTMnEntry 25 }

oChTxTrace OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Data for this variable is only available from
                 the subtending card. This data is retrieved from
                 the SP with GET-NEXT. When there is no real-hardware
                 the GET request will get no data and GET-NEXT will
                 return SP data (most likely UNKNOWN). When there is
                 hardware, the GET-NEXT will still return SP data but
                 the GET will get the actual reading from the hardware.
                 This approach is necessary to make sure table views
                 and index discoveries are not stalled on queries to
                 the subtending cards."
	::= { nnOTMnEntry 26 }

oChTxAssocFarEndRx OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Data for this variable is only available from
                 the subtending card. This data is retrieved from
                 the SP with GET-NEXT. When there is no real-hardware
                 the GET request will get no data and GET-NEXT will
                 return SP data (most likely UNKNOWN). When there is
                 hardware, the GET-NEXT will still return SP data but
                 the GET will get the actual reading from the hardware.
                 This approach is necessary to make sure table views
                 and index discoveries are not stalled on queries to
                 the subtending cards."
	::= { nnOTMnEntry 27 }


otmPortMode OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		sonet(1),
		sdh(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTMnEntry 28 }

tfMode OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		off(1),
		almonly(2),
		linefail(3)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Trace alarm mode"
	::= { nnOTMnEntry 29 }

oduTfMode OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		off(1),
		almonly(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "ODU trace alarm enable/disable"
	::= { nnOTMnEntry 30 }

otmLaserOffFarEndFail OBJECT-TYPE
    SYNTAX Status
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Always enabled in Release 5.1"
	::= { nnOTMnEntry 31 }

preFecSigFailThreshLevel OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Pre FEC Signal Fail Threshold Level"
	::= { nnOTMnEntry 32 }

otuSignalDegradeThreshLevel OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "OTU Signal Degrade Threshold Level"
	::= { nnOTMnEntry 33 }

oduMonitorEnabled OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		yes(1),
		no(2)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Beware of overloading ODUMONITOR in RTRV-TTI and
                     RTRV-OTM3"
	::= { nnOTMnEntry 34 }

lineRate OBJECT-TYPE
	SYNTAX INTEGER {
	    rate-uknown(0),
		rate-44G5(1),
		rate-9G95(2),
		rate-10G709(3),
		rate-11G05(4),
		rate-11G09(5)
	}
	MAX-ACCESS read-create
	STATUS current
	DESCRIPTION "Line Rate to be specified at create time only."
	::= { nnOTMnEntry 35 }

otuExpTTI OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Expected incoming OTU TTI message.
                 This variable is not available during table view,
                 walk, or any get-next operation. It only has data
                 on specific GET requsets to the facility."
	::= { nnOTMnEntry 36 }

otuRxIncTTI OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Receive OTU TTI message
                 This variable is not available during table view,
                 walk, or any get-next operation. It only has data
                 on specific GET requsets to the facility."
	::= { nnOTMnEntry 37 }

oduRxIncTTI OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Receive ODU TTI message
                 This variable is not available during table view,
                 walk, or any get-next operation. It only has data
                 on specific GET requsets to the facility."
	::= { nnOTMnEntry 38 }

oduMonitorMsg OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "ODU monitoring message
                 This variable is not available during table view,
                 walk, or any get-next operation. It only has data
                 on specific GET requsets to the facility."
	::= { nnOTMnEntry 39 }

otmLoopbackType OBJECT-TYPE
	SYNTAX LoopbackType
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Facility if loopback is active; otherwise, nothing is
                     returned for this attribute"
	::= { nnOTMnEntry 40 }

opu2reserved OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		yes(1),
		no(2)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "YES/NO to using 7 overhead bytes for payload"
	::= { nnOTMnEntry 41 }

expectedPayloadType OBJECT-TYPE
	SYNTAX DisplayString(SIZE(1..2))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is received as a HEX value from TL1. The 
                 ranges are 0..FF. Since HEX can not be represented
                 in ASN.1, a string is used. For SET operations, the 
                 user can enter any valid HEX value from the range 0x0
                 to 0xFF. The values can be entered with or without a
                 preceding zero: i.e. 0 and 00 are equivalent. The agent
                 shall only verify the length of the input string 
                 is 1 or 2. Values like WX are valid strings but not valid
                 HEX and shall be rejected by the NE TL1 command not the
                 agent. 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOTMnEntry 42 }

transmittedPayloadType OBJECT-TYPE
	SYNTAX DisplayString(SIZE(1..2))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is received as a HEX value from TL1. The 
                 ranges are 0..FF. Since HEX can not be represented
                 in ASN.1, a string is used. For SET operations, the 
                 user can enter any valid HEX value from the range 0x0
                 to 0xFF. The values can be entered with or without a
                 preceding zero: i.e. 0 and 00 are equivalent. The agent
                 shall only verify the length of the input string 
                 is 1 or 2. Values like WX are valid strings but not valid
                 HEX and shall be rejected by the NE TL1 command not the
                 agent. 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOTMnEntry 43 }

receivedPayloadType  OBJECT-TYPE
	SYNTAX DisplayString(SIZE(1..2))
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is received as a HEX value from TL1. The 
                 ranges are 0..FF. Since HEX can not be represented
                 in ASN.1, a string is used. 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnOTMnEntry 44 }

otmPrimaryState OBJECT-TYPE
	SYNTAX PrimaryState
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Primary State of the faciltiy. Can only be modified
                 by changing the admin state."
	::= { nnOTMnEntry 45 }

otmSecondaryState OBJECT-TYPE
	SYNTAX DisplayString
    MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Secondary state for the facility. A facility can have
                 more than one secondary state as different combinations
                 of the individual secondary state. It is represented 
                 as a string to capture all the combinations. Those
                 combinations along with the Primary state are used 
                 to compute the admin state. Can be any combination of 
                 flt, sgeo, lpbk, discd, ts, wrkrx, wrktx."
	::= { nnOTMnEntry 46 }

otmAdminState OBJECT-TYPE
	SYNTAX AdminState
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is a write-only variable. The user can restore
                 or remove facilities using this command. You restore
                 a facility by setting this variable to IS and remove
                 it by setting it to OOS. During Row-create, a user can 
                 use this variable to set the initial state of the facility.

                 Because this is a write-only variable, the user is expected
                 to read the Primary and Secondary state of the facility
                 to determine the state of the facility. "
	::= { nnOTMnEntry 47 }

otmAID OBJECT-TYPE
	SYNTAX  DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Facility AID as received from TL1. This should include
                 the FAC type, shelf id, slot, and port."
	::= { nnOTMnEntry 48 }

otmGCC OBJECT-TYPE
    SYNTAX GccValues
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "A Get operation on this variable retrieves the 
                 LLSDCC Carrier GCC value. Setting this variable to NONE
                 removes OSPF circuit and LLSDCC carrier info. It is 
                 a NO-op if the GCC is initially NONE. Setting the 
                 variable to any other value would create LLSDCC COMMS 
                 with that GCC value.
                 unknonw is not a valid value for any set operation.
                 An unknown value for a get may indicate problems 
                 retrieving the GCC from the facility. Avoid issuing
                 set commands when an unknonw value is retrieved.
                 This variable is available upon GET-EXACT only. No
                 value is shown for GET-NEXT operations."
	::= { nnOTMnEntry 49 }

ospfCircuit OBJECT-TYPE
	SYNTAX DisplayString(SIZE(0..32))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "With GET operations, this variable shall return the
                 configured parameters of the OSPF circuit. In this
                 release only the NETAREA is supported. With SET 
                 operations, the NETAREA is to be supplied in the
                 format x.x.x.x. If no value is given, the default
                 (0.0.0.0) shall be used. All SET operations, whether
                 create or modify, will make sure that existing
                 OSPF circuits are deleted before creating or modifying
                 the new one with the new paramters (NETAREA). To delete
                 an OSPF circuit, set the GCC to none using the otmGCC
                 MIB variable.
                 This variable is available upon GET-EXACT only. No value
                 is shown for GET-NEXT operations."
	::= { nnOTMnEntry 50 }


oChDifferentialEncoding OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
        none(1),
		hard(2),
		soft(3)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTMnEntry 51 }

nnEthTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF NnEthEntry
	MAX-ACCESS  not-accessible
	STATUS  current
	DESCRIPTION  "Contains entries for ethernet 10G facilities"
	::= { nnEth 1 }

nnEthEntry OBJECT-TYPE
	SYNTAX NnEthEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "This entry shall contain all the necessary attributes
                     for the ethernet 10G facilities in the 40G card"
	INDEX { ifIndex }
    ::= { nnEthTable 1 }

NnEthEntry ::= 
    SEQUENCE {
		ethRowStatus
			RowStatus,
		ethLaserOffFarEndFail
			Status,
		oChTxActEthPwr
			DisplayString,
		oChTxMinEthPwr
			DisplayString,
		oChTxMaxEthPwr
			DisplayString,
		oChRxActEthPwr
			DisplayString,
		oChRxMinEthPwr
			DisplayString,
		oChRxMaxEthPwr
			DisplayString,
		maxTransUnit
			INTEGER,
		flowControl
			INTEGER,
		equipment
			INTEGER,
		ethMapping
			INTEGER,
		ethLoopbackType
			LoopbackType,
		ethPrimaryState
			PrimaryState,
		ethSecondaryState
			DisplayString,
		ethAdminState
			AdminState,
		ethAID
			DisplayString
	}

ethRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Create, delete, put in service, out of service, and edit"
	::= { nnEthEntry 1 }

ethLaserOffFarEndFail OBJECT-TYPE
    SYNTAX Status
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "To turn off Tx laser under certain failure scenarios"
	::= { nnEthEntry 2 }

oChTxActEthPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The target will be of the format xx.x and dBm will be 
                     assumed for powers within design/accuracy range.
                     Powers outside the accuracy/design range will be clamped
                     at: OOR-HI or OOR-LO (out of range high and low 
                     respectively) 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnEthEntry 3 }

oChTxMinEthPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The target will be of the format xx.x and dBm will 
                     be assumed"
	::= { nnEthEntry 4 }

oChTxMaxEthPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The target will be of the format xx.x and dBm will 
	             be assumed"
	::= { nnEthEntry 5 }

oChRxActEthPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The target will be of the format xx.x and dBm will be 
                     assumed for powers within design/accuracy range.
                     Powers outside the accuracy/design range will be clamped
                     at: OOR-HI or OOR-LO (out of range high and low 
                     respectively) 
                 This variable is available upon GET-EXACT operations. No
                 value is returned with GET-NEXT."
	::= { nnEthEntry 6 }

oChRxMinEthPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The target will be of the format xx.x and dBm will 
                     be assumed"
	::= { nnEthEntry 7 }

oChRxMaxEthPwr OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The target will be of the format xx.x and dBm will 
                     be assumed"
	::= { nnEthEntry 8 }

maxTransUnit OBJECT-TYPE
	SYNTAX INTEGER {
	    mtu-unknown(0), 
		mtu-1600(1),
		mtu-9600(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Maximum transmission unit"
	::= { nnEthEntry 9 }

flowControl OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		none(1),
		asymmetric(2),
		symmetric(3),
		preeemptive(4)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnEthEntry 10 }

equipment OBJECT-TYPE
	SYNTAX INTEGER {
	    xge-unknown(0),
		xge-lan(1),
		xge-wan(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnEthEntry 11 }

ethMapping OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		prop237(1),
		prop238(2),
		gfp-mactr(3),
		gfp-std(4),
                gfp-mactr192(5),
                gfp-std192(6),
                gfp-mactr64(7),
                gfp-std64(8),
                gfp-macostr(9),
                gfp-macostr192(10),
                gfp-macostr64(11),
                ull(12)
	}
	MAX-ACCESS read-create
	STATUS current
	DESCRIPTION "Sets the non-client OTM2 OTU rate and client mapping"
	::= { nnEthEntry 12 }

ethLoopbackType OBJECT-TYPE
	SYNTAX LoopbackType
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Facility if loopback is active; otherwise nothing is
                     returned for this attribute."
	::= { nnEthEntry 13 }

ethPrimaryState OBJECT-TYPE
	SYNTAX PrimaryState
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Primary State of the faciltiy. Can only be modified
                 by changing the admin state."
	::= { nnEthEntry 14 }

ethSecondaryState OBJECT-TYPE
	SYNTAX DisplayString 	
    MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Secondary state for the facility. A facility can have
                 more than one secondary state as different combinations
                 of the individual secondary state. It is represented 
                 as a string to capture all the combinations. Those
                 combinations along with the Primary state are used 
                 to compute the admin state.Can be any combination of 
                 flt, sgeo, lpbk, discd, ts, wrkrx, wrktx."
	::= { nnEthEntry 15 }

ethAdminState OBJECT-TYPE
	SYNTAX AdminState
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is a write-only variable. The user can restore
                 or remove facilities using this command. You restore
                 a facility by setting this variable to IS and remove
                 it by setting it to OOS. During Row-create, a user can 
                 use this variable to set the initial state of the facility.

                 Because this is a write-only variable, the user is expected
                 to read the Primary and Secondary state of the facility
                 to determine the state of the facility. "
		::= { nnEthEntry 16 }

ethAID OBJECT-TYPE
	SYNTAX  DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Facility AID as received from TL1. This should include
                 the FAC type, shelf id, slot, and port."
	::= { nnEthEntry 17 }

nnWanTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF NnWanEntry
	MAX-ACCESS  not-accessible
	STATUS  current
	DESCRIPTION  "Contains entries for ethernet 10G facilities"
	::= { nnWAN 1 }

nnWanEntry OBJECT-TYPE
	SYNTAX NnWanEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "This entry shall contain all the necessary attributes
                     for the ethernet 10G facilities in the 40G card"
	INDEX { ifIndex }
    ::= { nnWanTable 1 }

NnWanEntry ::= 
    SEQUENCE {
		frameChecksum
			INTEGER,
		wanMapping
			INTEGER,
		gfpRfi
			INTEGER,
		gfpRtDelay
			INTEGER,
		condType
			INTEGER,
		preamble
			INTEGER,
		fcsErrFrames
			INTEGER,
		transmittedUPI
			DisplayString,
		wanPrimaryState
			PrimaryState,
		wanSecondaryState
			DisplayString,
		wanAdminState
			AdminState,
		wanAID
			DisplayString
	}

frameChecksum OBJECT-TYPE
	SYNTAX INTEGER(0|16|32)
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "For mapping=GFP-F, value can be 0 or 32"
	::= { nnWanEntry 1 }

wanMapping OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		gfp-f(1),
		gfp-t(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "GFP-F is only supported value"
	::= { nnWanEntry 2 }

gfpRfi OBJECT-TYPE
	SYNTAX INTEGER {
        unknown(0),
		enable(1),
		disable(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Enable/Disable"
	::= { nnWanEntry 3 }

gfpRtDelay OBJECT-TYPE
	SYNTAX INTEGER {
        unknown(0),
		enable(1),
        disable(2)
    }
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Enable/Disable"
	::= { nnWanEntry 4 }

condType OBJECT-TYPE
	SYNTAX INTEGER {
	    unknown(0),
		gfpcmf(1)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "GFP CMF is the only supported value."
	::= { nnWanEntry 5 }

preamble OBJECT-TYPE
	SYNTAX INTEGER {
        unknown(0),
		keep(1),
		discard(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "KEEP/DISCARD ethernet preamble"
	::= { nnWanEntry 6 }

fcsErrFrames OBJECT-TYPE
	SYNTAX INTEGER {
        unknown(0),
		keep(1),
		discard(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "KEEP/DISCARD FCS-errored frames end-to-end."
	::= { nnWanEntry 7 }

transmittedUPI OBJECT-TYPE
	SYNTAX DisplayString(SIZE(1..2))
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is received as a HEX value from TL1. The 
                 ranges are 0..FF. Since HEX can not be represented
                 in ASN.1, a string is used. For SET operations, the 
                 user can enter any valid HEX value from the range 0x0
                 to 0xFF. The values can be entered with or without a
                 preceding zero: i.e. 0 and 00 are equivalent. The agent
                 shall only verify the length of the input string 
                 is 1 or 2. Values like WX are valid strings but not valid
                 HEX and shall be rejected by the NE TL1 command not the
                 agent. 
                 
                 Editable when the mapped non-client OTM2 attribute
                 opu2resvd=YES."
	::= { nnWanEntry 8 }

wanPrimaryState OBJECT-TYPE
	SYNTAX PrimaryState
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Primary State of the faciltiy. Can only be modified
                 by changing the admin state."
	::= { nnWanEntry 9 }

wanSecondaryState OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Secondary state for the facility. A facility can have
                 more than one secondary state as different combinations
                 of the individual secondary state. It is represented 
                 as a string to capture all the combinations. Those
                 combinations along with the Primary state are used 
                 to compute the admin state.Can be any combination of 
                 flt, sgeo, lpbk, discd, ts, wrkrx, wrktx."
	::= { nnWanEntry 10 }

wanAdminState OBJECT-TYPE
	SYNTAX AdminState
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "This is a write-only variable. The user can restore
                 or remove facilities using this command. You restore
                 a facility by setting this variable to IS and remove
                 it by setting it to OOS. During Row-create, a user can 
                 use this variable to set the initial state of the facility.

                 Because this is a write-only variable, the user is expected
                 to read the Primary and Secondary state of the facility
                 to determine the state of the facility. "
	::= { nnWanEntry 11 }

wanAID OBJECT-TYPE
	SYNTAX  DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Facility AID as received from TL1. This should include
                 the FAC type, shelf id, slot, and port."
	::= { nnWanEntry 12 }

END


NORTEL-OME40G-PM-PROV-MIB DEFINITIONS ::= BEGIN

IMPORTS
       nnOme40G            FROM NORTEL-OME40G-MIB
       DisplayString       FROM RFC1213-MIB
       ifIndex             FROM IF-MIB

       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme40GPmProv MODULE-IDENTITY
        LAST-UPDATED "200902020000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "On Optical Multiservice Edge (OME),
               this module is used to initialize 40G PM registers and 
	       OM Counts. It is also used to set Threshold Level and 
	       HccsReference Values, and change Profiles for 40G facilities."
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 4.0"  

	REVISION "200802070000Z"
        DESCRIPTION "Updating row formatting OME6500 REL 5.1"	  

        REVISION "200802210000Z"
        DESCRIPTION 
	     "- Updated the monType enum list for OME6500 REL 5.1
	      - Changed SYNTAX for initShelfEthOmCounts and init40GOmCounts 
	        from Binning to Boolean.
	      - Changed MAX-ACCESS from read-write to not-accessible for monType,
	        endpoint,direction and accumTimePeriod."        

	REVISION "200803030000Z"
        DESCRIPTION 
	     "- MonType Enum List Updated:
	         This ENUM list has all supported MonType for
		 OC192, OC768, OTM2. OMT3, ETH10G and WAN
	     - unknown(0) to nill (0)"  

	REVISION "200805010000Z"
        DESCRIPTION 
	     " - Changed the DESCRIPTION of nnOme40GPmProv, initShelf40GPmRegisters and 
	         initShelfEthOmCounts objects"  
		    
	REVISION "200808200000Z"
        DESCRIPTION 
	     " - Added new MonTypes for OME 6500 R5.2 " 	

	REVISION "200902020000Z"
        DESCRIPTION 
	     " Changed the SYNTAX of threshLevel attribute from Integer32 
	       to DisplayString support the scientific notation type input.
	       E.g.: 5E-10" 	
	             
        ::= { nnOme40G 4 }

Boolean ::= INTEGER {
    false(0),
    true(1)
}

Montype ::= INTEGER {
    eNILL(0),
    eBRS-W(1),
    eCV-L(2),
    eCV-ODU(3),
    eCV-OTU(4),
    eCV-PCS(5),
    eCV-S(6),
    eDFR-E(7),
    eDFR-W(8),
    eES-E(9),
    eES-L(10),
    eES-ODU(11),
    eES-OTU(12),
    eES-PCS(13),
    eES-S(14),
    eES-W(15),
    eFC-L(16),
    eFC-ODU(17),
    eFCSERR-E(18),
    eFEC-OTU(19),
    eHCCS-OTU(20),
    eINFRAMEDISCDS-E(21),
    eINFRAMESDISCDS-E(22),
    eINFRAMES-E(23),
    eINFRAMESERR-E(24),
    eINFRAMESERR-W(25),
    eINFRAMES-W(26),
    eLDS-W(27),
    eLKDS-E(28),
    eLNKDS-W(29),
    eLSDS-W(30),
    eLUAS-W(31),
    eOPRN-OCH(32),
    eOPR-OCH(33),
    eOPTN-OCH(34),
    eOPT-OCH(35),
    eOUTFRAMESDISCDS-E(36),
    eOUTFRAMES-E(37),
    eOUTFRAMESERR-E(38),
    eOUTFRAMES-W(39),
    ePFBERE-OTU(40),
    ePRFBER-OTU(41),
    ePSCP-L(42),
    ePSCP-ODU(43),
    ePSCW-L(44),
    ePSCW-ODU(45),
    ePSD-L(46),
    ePSD-ODU(47),
    eSBRS-W(48),
    eSEFS-OTU(49),
    eSEFS-S(50),
    eSES-E(51),
    eSES-L(52),
    eSES-ODU(53),
    eSES-OTU(54),
    eSES-PCS(55),
    eSES-S(56),
    eSES-W(57),
    eUAS-E(58),
    eUAS-L(59),
    eUAS-ODU(60),
    eUAS-PCS(61),
    eUAS-W(62),
    eUTLMX-W(63),
    eUTL-W(64),
    eINDFR-E(65),
    eOUTDFR-E(66),
    eDGDAVG-OCH(67),
    eDGDMAX-OCH(68),
    eALL(69),
    eMAX(70)
}

Endpoint ::= INTEGER {
    nill(0),
    near-end(1), 
    far-end(2),
    all(3)
}

Direction ::= INTEGER {
    nill(0),
    trmt(1),
    rcv(2),
    all(3)
}

Binning ::= INTEGER {
    nill(0),
    fifteen-min(1),
    one-day(2),
    one-unt(3),
    baseline(4),
    all(5)
}

Profiles ::= INTEGER {
    nill(0),
    profile1(1), 
    profile2(2), 
    profile3(3), 
    profile4(4), 
    dflt(5), 
    alloff(6), 
    factorydflt(7)
}

nnOme40GMonConfig  OBJECT IDENTIFIER  ::= { nnOme40GPmProv 1 }

initShelf40GPmRegisters OBJECT-TYPE
	SYNTAX Binning
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Initializes PM registers for 40G facilities on the shelf."
	::= { nnOme40GPmProv 2 }

initShelfEthOmCounts OBJECT-TYPE
	SYNTAX Boolean
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Initiliazes Ethernet OM Counts for 40G facilities on the shelf."
	::= { nnOme40GPmProv 3 }

nnMonConfigTable OBJECT-TYPE
	SYNTAX SEQUENCE OF NnMonConfigEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { nnOme40GMonConfig 1 }

nnMonConfigEntry OBJECT-TYPE
	SYNTAX NnMonConfigEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { ifIndex }
	::= { nnMonConfigTable 1 }

NnMonConfigEntry ::= 
	SEQUENCE {
	   hccsReference
	      DisplayString,
	   init40GPmRegisters
	      Binning,
	   init40GOmCounts
	      Boolean
	}

hccsReference OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "High Correction Count Seconds. Applies for OTM2/3 only. 
	             Floating point between -1.00 and 4.00; 
                 Not supported by SMI-OM5K"
	::= { nnMonConfigEntry 1 }

init40GPmRegisters OBJECT-TYPE
	SYNTAX  Binning
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Initializes the counts for all montypes on the facility, 
                 if ifIndex contains ifType.
	             If IfIndex contains only slot info, 
                 all 40G facilities on the card get reset. 
		         If the slot and port are available only, 
                 then all 40G facilities on the port shall be targetted."
	::= { nnMonConfigEntry 2 }

init40GOmCounts OBJECT-TYPE
	SYNTAX  Boolean
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Initializes the counts for all montypes on the facility, 
                 if ifIndex contains ifType.
	             If IfIndex contains only slot info, 
                 all 40G facilities on the card get reset. 
		         If the slot and port are available only, 
                 then all 40G facilities on the port shall be targetted."
	::= { nnMonConfigEntry 3 }

nnMonTypeInstanceTable OBJECT-TYPE
	SYNTAX SEQUENCE OF NnMonTypeInstanceEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { nnOme40GMonConfig 2 }

nnMonTypeInstanceEntry OBJECT-TYPE
	SYNTAX NnMonTypeInstanceEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { ifIndex, monType, endpoint, direction, accumTimePeriod }
	::= { nnMonTypeInstanceTable 1 }

NnMonTypeInstanceEntry ::= 
	SEQUENCE {
		monType
			Montype,
		endpoint
			Endpoint,
		direction
			Direction, 
		accumTimePeriod
			Binning,
		monVal
			Integer32, 
		threshLevel
			DisplayString,
		srcProfileId
			Profiles,
		dstProfileId
			Profiles,
		initRegisters
			Boolean
	}


monType OBJECT-TYPE
	SYNTAX Montype
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "Monitored parm type; group of values acceptable; should
                     act more like a bitmask"
	::= { nnMonTypeInstanceEntry 1 }

endpoint OBJECT-TYPE
	SYNTAX  Endpoint
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { nnMonTypeInstanceEntry 2 }

direction OBJECT-TYPE
    SYNTAX  Direction
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { nnMonTypeInstanceEntry 3 }

accumTimePeriod OBJECT-TYPE
	SYNTAX  Binning
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION "Accumulation time period, group of values acceptable"
	::= { nnMonTypeInstanceEntry 4 }

monVal OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Zero to reset or MONTYPE"
	::= { nnMonTypeInstanceEntry 5 }


threshLevel OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION "Few Montype require scientific notation type input. 
		    e.g.:5E-10. So, this threshLevel value must be in string 
		    to support various input."
	::= { nnMonTypeInstanceEntry 6 }

srcProfileId OBJECT-TYPE
	SYNTAX  Profiles
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnMonTypeInstanceEntry 7 }

dstProfileId OBJECT-TYPE
	SYNTAX  Profiles
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnMonTypeInstanceEntry 8 }

initRegisters OBJECT-TYPE
	SYNTAX  Boolean
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnMonTypeInstanceEntry 9 }

END


NORTEL-OME40G-PRTN-MIB DEFINITIONS ::= BEGIN

IMPORTS
       nnOme40G            FROM NORTEL-OME40G-MIB
       DisplayString       FROM RFC1213-MIB
       RowStatus           FROM SNMPv2-TC
       ifIndex             FROM IF-MIB
       InterfaceIndex      FROM IF-MIB
       entPhysicalIndex    FROM ENTITY-MIB

       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme40GProtection MODULE-IDENTITY
        LAST-UPDATED "200802070000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module is for 40G protection"
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.1"
	
	REVISION "200802070000Z"
        DESCRIPTION "Updating row formatting OME6500 REL 5.11"	       
        ::= { nnOme40G 3 }

nnOme40Gotm3Protection OBJECT IDENTIFIER ::= { nnOme40GProtection 1 }

nnOTM3protectionGroupTable  OBJECT-TYPE
	SYNTAX SEQUENCE OF NnOTM3protectionGroupEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { nnOme40Gotm3Protection 1 }

nnOTM3protectionGroupEntry OBJECT-TYPE
	SYNTAX NnOTM3protectionGroupEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { workingIfIndex, protectionIfIndex }
	::= { nnOTM3protectionGroupTable 1 }

NnOTM3protectionGroupEntry ::=
	SEQUENCE {
		workingIfIndex
			InterfaceIndex,
		protectionIfIndex
			InterfaceIndex,
		ptRowStatus 
			RowStatus,
		protectionSwitchDir
			INTEGER,
		protectionScheme
			INTEGER,
		waitToRestore
			INTEGER,
		revertive
			INTEGER,
		remoteStandardMode
			INTEGER,
		routeDiversity
			INTEGER
	}

workingIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndex
	MAX-ACCESS read-create
	STATUS current
	DESCRIPTION "working interface type"
	::= { nnOTM3protectionGroupEntry 1 }

protectionIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndex
	MAX-ACCESS read-create
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 2 }

ptRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	MAX-ACCESS read-write 
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 3 }

protectionSwitchDir OBJECT-TYPE
	SYNTAX INTEGER {
		bidirectional(1),
		unidirectional(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 4 }


protectionScheme OBJECT-TYPE
	SYNTAX INTEGER {
		one-plus-one(1)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 5 }


waitToRestore OBJECT-TYPE
	SYNTAX INTEGER {
		one-minute(1), 
		two-minutes(2), 
		three-minutes(3),  
		four-minutes(4), 
		five-minutes(5), 
		six-minutes(6), 
		seven-minutes(7), 
		eight-minutes(8), 
		nine-minutes(9), 
		ten-minutes(10), 
		eleven-minutes(11), 
		twelve-minutes(12) 
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 6 }


revertive OBJECT-TYPE
	SYNTAX INTEGER {
		yes(1),
		no(2)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 7 }


remoteStandardMode OBJECT-TYPE
	SYNTAX INTEGER {
		otn-g-873-1(1)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 8 }


routeDiversity OBJECT-TYPE
	SYNTAX INTEGER {
		off(0)
	}
	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionGroupEntry 9 }



nnOTM3protectionSwitchTable  OBJECT-TYPE
	SYNTAX SEQUENCE OF NnOTM3protectionSwitchEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { nnOme40Gotm3Protection 2 }

nnOTM3protectionSwitchEntry OBJECT-TYPE
	SYNTAX NnOTM3protectionSwitchEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { ifIndex }
	::= { nnOTM3protectionSwitchTable 1 }

NnOTM3protectionSwitchEntry ::=
	SEQUENCE {
		switchCommand
			INTEGER,
		switchStatus
			INTEGER,
		endInitiatingSwitch
			INTEGER,
		reasonForAutoSwitch
			INTEGER
	}

switchCommand OBJECT-TYPE
	SYNTAX INTEGER {
		man(1),
		frcd(2),
		lockout(3),
		release(4)
	}

	MAX-ACCESS read-write
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionSwitchEntry 1 }

switchStatus OBJECT-TYPE
	SYNTAX INTEGER {
		idle(1),
		auto(2),
		man(3),
		frcd(4),
		lockout(5)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionSwitchEntry 2 }

endInitiatingSwitch OBJECT-TYPE
	SYNTAX INTEGER {
		remote(1),
		local(2)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionSwitchEntry 3 }

reasonForAutoSwitch OBJECT-TYPE
	SYNTAX INTEGER {
		sigok(1),
		sf(2),
		sd(3),
		eber(4),
		eqpfl(5),
		facoos(6),
		eqpoos(7),
		osc(8),
		wr(9)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { nnOTM3protectionSwitchEntry 4 }

END


NORTEL-OME40G-OM-COUNTS-MIB DEFINITIONS ::= BEGIN

IMPORTS
       nnOme40G            FROM NORTEL-OME40G-MIB
       DisplayString       FROM RFC1213-MIB
       ifIndex             FROM IF-MIB

       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme40GOmCounts MODULE-IDENTITY
        LAST-UPDATED "200802210000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module will be used for 40G Generic and Enet OM counts."
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.11"  

        ::= { nnOme40G 5 }

generic OBJECT IDENTIFIER ::= { nnOme40GOmCounts 1 }
enet OBJECT IDENTIFIER ::= { nnOme40GOmCounts 2 }

wanCountsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF WanCountsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { generic 1 }

wanCountsEntry OBJECT-TYPE
	SYNTAX WanCountsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { ifIndex }
	::= { wanCountsTable 1 }

WanCountsEntry ::= 
	SEQUENCE {
        wanINFRAMES
            Counter64,
        wanINFRAMESERR
            Counter64,
        wanINDFR
            Counter64
	}

wanINFRAMES OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { wanCountsEntry 1 }

wanINFRAMESERR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { wanCountsEntry 2 }

wanINDFR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { wanCountsEntry 3 }


ethCountsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF EthCountsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { generic 2 }

ethCountsEntry OBJECT-TYPE
	SYNTAX EthCountsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { ifIndex }
	::= { ethCountsTable 1 }

EthCountsEntry ::= 
	SEQUENCE {
        ethINFRAMES 
            Counter64,
        ethINFRAMESERR 
            Counter64,
        ethINDFR 
            Counter64,
        ethINFRAMESDISCS 
            Counter64,
        ethOUTFRAMES 
            Counter64,
        ethOUTFRAMESERR 
            Counter64,
        ethINOCTETS 
            Counter64,
        ethOUTOCTETS 
            Counter64,
        ethOUTDFR 
            Counter64,
        ethOUTFRAMESDISCDS
            Counter64
	}

ethINFRAMES OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 1 }

ethINFRAMESERR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 2 }

ethINDFR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 3 }

ethINFRAMESDISCS OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 4 }

ethOUTFRAMES OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 5 }

ethOUTFRAMESERR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 6 }

ethINOCTETS OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 7 }

ethOUTOCTETS OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 8 }

ethOUTDFR  OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 9 }

ethOUTFRAMESDISCDS  OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { ethCountsEntry 10 }

enetCountsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF EnetCountsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	::= { enet 1 }

enetCountsEntry OBJECT-TYPE
	SYNTAX EnetCountsEntry
	MAX-ACCESS not-accessible
	STATUS current
	DESCRIPTION ""
	INDEX { ifIndex }
	::= { enetCountsTable 1 }

EnetCountsEntry ::= 
	SEQUENCE {
         ethFCSERR 
            Counter64,
         ethJAB 
            Counter64,
         ethFRAG 
            Counter64,
         ethFRTOOLONGS 
            Counter64,
         ethFRTOOSHORTS 
            Counter64,
         ethSYMBOLERR 
            Counter64,
         ethINPAUSEFR 
            Counter64,
         ethOUTPAUSEFR
            Counter64
	}

ethFCSERR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 1 }

ethJAB OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 2 }

ethFRAG OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 3 }

ethFRTOOLONGS OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 4 }

ethFRTOOSHORTS OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 5 }

ethSYMBOLERR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 6 }

ethINPAUSEFR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 7 }

ethOUTPAUSEFR OBJECT-TYPE
	SYNTAX  Counter64 
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { enetCountsEntry 8 }

END


NORTEL-OME6500-ALARMS-MIB DEFINITIONS ::= BEGIN

IMPORTS
       ome6500            FROM NORTEL-OPTICAL-OME6500-MIB

       DateAndTime        FROM SNMPv2-TC
       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme6500Alarms MODULE-IDENTITY
        LAST-UPDATED "200906150000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module will be used to identify alarms mainly
              for 40G equipments and facilities but other alarms
              shall be reported."
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.1"
	
	REVISION "200802070000Z"
        DESCRIPTION "Updating row formatting OME6500 REL 5.11"	

	REVISION     "200906150000Z"
	DESCRIPTION  "MIB description enhancement"       
        ::= { ome6500 4 }


nnOme6500AlarmCounts  OBJECT IDENTIFIER  ::= { nnOme6500Alarms 1 }


critical OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The number of Critical Alarms raised on the shelf"
	::= { nnOme6500AlarmCounts 1 }

major OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The number of Major Alarms raised on the shelf"
	::= { nnOme6500AlarmCounts 2 }

minor OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The number of Minor Alarms raised on the shelf"
	::= { nnOme6500AlarmCounts 3 }

warnings OBJECT-TYPE
	SYNTAX Integer32
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The number of Warnings raised on the shelf."
	::= { nnOme6500AlarmCounts 4 }

lastAlarmTimeStamp OBJECT-TYPE
	SYNTAX DateAndTime
	MAX-ACCESS read-only
	STATUS current
        DESCRIPTION "The timestamp of the last alarm. If there has been no alarm since the last
	re-initialization of the local network management subsystem, then this object contains a zero value."
	::= { nnOme6500AlarmCounts 5 }

END


   NORTEL-OME6500-EQPT-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       ome6500             FROM NORTEL-OPTICAL-OME6500-MIB
       entPhysicalIndex    FROM ENTITY-MIB           
       DisplayString       FROM RFC1213-MIB
       RowStatus           FROM SNMPv2-TC

       MODULE-IDENTITY,
       OBJECT-TYPE,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme6500Equipments MODULE-IDENTITY
        LAST-UPDATED "201508120000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free: +1-800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module will be used to identify the equipment attributes for
              the Nortel OME6500 40G cards."
   
        --Revision history
        REVISION "200708100000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.1"
	
	REVISION "200802070000Z"
        DESCRIPTION "Updating row formatting OME6500 REL 5.1"	 
	      
	REVISION "200802210000Z"
        DESCRIPTION "Updating EquipmentType enum list for OME6500 REL 5.1"
	
	REVISION "200803100000Z"
        DESCRIPTION "Updating EquipmentType enum list for OME6500 REL 5.1
	             L2SS20G -> 20GL2SS"

        REVISION "200803270000Z"
        DESCRIPTION "
	  change (1): Following EquipmentTypes were missing from the EquipmentType 
	              enum lis, so they have been added for OME6500 REL 5.1.  
	                DS3E3EC1, DS3E3EC1P, GE, L2RPR, MRO, and OTSC.
          change (2): Nil enum was required in SecondaryState,
		      and  EquipmentMode, so it is added to those enum types."

	REVISION "200807300000Z"
        DESCRIPTION " 
	   changed the min string size from 1 to 0."

	REVISION "200808200000Z"
        DESCRIPTION " 
	   Added new EquipmentType for OME6500 R5.2"

	REVISION "200904190000Z"
        DESCRIPTION " 
	   Added new 40GXCIF card for OME6500 R6.0"

	REVISION "200905050000Z"
        DESCRIPTION " 
	   Added new EquipmentType for OME6500 R7.0:
	    100GOCLD, 10x10GMUX, 4x10GMUX, 40GUOCLD"

	REVISION "200908050000Z"
        DESCRIPTION " 
	   Modified Equipment tag for OME6500 R7.0:
	     10x10GMUX --> 100GMUX, 4x10GMUX -- > 40GUMUX	
	   Added new EquipmentType for OME6500 R7.0: 100GOCI "

	REVISION "201006300000Z"
        DESCRIPTION " 
	   Added OSIC,PCFP and FLEXMOTR cards' Enums for R7.0"

	REVISION "201011010000Z"
        DESCRIPTION " 
	   Added multi state secondary states in SecondaryState Enum (15 to 22) for R8.0"

	REVISION "201012070000Z"
        DESCRIPTION " 
	   Added PSFP Enum for R8.0"
         
	REVISION "201101180000Z"
        DESCRIPTION " 
	   Added new card OTNFMOTR Enum for R8.0"
         
	REVISION "201103180000Z"
        DESCRIPTION " 
	   Added 2 new cards CCMD12, 2x8 SMD Enum for R8.9"

	REVISION "201103280000Z"
        DESCRIPTION " 
	   Added new card SPOTNFMOTR Enum for R8.0"

	REVISION "201108030000Z"
        DESCRIPTION " 
	   Added OTNFLEX & OTNXCIF cards and increased PEC Code range for R9.0"

	REVISION "201108190000Z"
        DESCRIPTION " 
	   Added new SLIC Card Enum for R9.0"

	REVISION "201108300000Z"
        DESCRIPTION " 
	   Added remote PPC6 chassis and passive photonic Cards for R9.0"
         
	REVISION "201202220000Z"
        DESCRIPTION " 
	   Added PXFP in EquipmentType enum and
	   mate-pending-xconnect EquipmentMode in for R9.0"
         
	REVISION "201203230000Z"
        DESCRIPTION " 
	   Added  new card OPS in EquipmentType enum for R9.2"
         
	REVISION "201205080000Z"
        DESCRIPTION " 
	   Added  AINS states in SecondaryState Enum for R9.2"
         
	REVISION "201207260000Z"
        DESCRIPTION " 
	   Added  new card EVOA in EquipmentType enum for R9.2"
         
	REVISION "201209110000Z"
        DESCRIPTION " 
	   Added  new cards EMOTR & PKTFLEX in EquipmentType enum for R9.2
	   Added  idleAndUeq states in SecondaryState Enum for R9.2"
         
	REVISION "201210050000Z"
        DESCRIPTION " 
	   Added  new cards SRA, SAM, ESAM & XLA in EquipmentType enum for Raman support in R9.3"

	REVISION "201212040000Z"
	DESCRIPTION " 
	   Added  fltAndWrksync state in SecondaryState Enum for R9.2"

	REVISION "201301230000Z"
	DESCRIPTION " 
	   Added  wrkctrl states in SecondaryState Enum for R9.3"
         
	REVISION "201304020000Z"
	DESCRIPTION " 
	   Added  ueqAndStbyh(60) and ainsAndUeqAndStbyh(61) states in SecondaryState Enum for R9.3"

	REVISION "201306090000Z"
	DESCRIPTION " 
	   Added  meaAndStbyh(62), fltAndStbyh(63), fltAndWrktrafAndWrksync(64), meaAndWrksync(65)  
                  and ueqAndWrksync(66) states in SecondaryState Enum for R10.0" 

	REVISION "201308010000Z"
        DESCRIPTION " 
	   Added  new card ISS in EquipmentType enum for R10.0"

	REVISION "201310300000Z"
	DESCRIPTION " 
	   Added actAndWrk(67), idleAndWrk(68),actAndStbyh(69), idleAndStbyh(70), stbys(71),
	   ainsAndStbys(72), ueqAndStbys(73), ainsAndUeqAndStbys(74), meaAndStbys(75),
	   fltAndStbys(76), actAndStbys(77), idleAndStbys(78) states in SecondaryState Enum for R10.0" 

	REVISION "201311190000Z"
	DESCRIPTION " 
	   Added fltAndWrk(79), fltAndUeq(80), fltAndWrktraf(81), fltAndWrktrafAndWrksyncAndWrkctrl(82),
           fltAndSgeo(83), idleAndSgeo(84), idleAndWrkAndUeq(85),
	   idleAndStbysAndUeq(86), idleAndStbysAndFlt(87), idleAndStbyhAndUeq(88), 
	   idleAndStbyhAndFlt(89)  states in SecondaryState Enum for R10.0"

	REVISION "201401140000Z"
	DESCRIPTION " 
	   Added  wrktrafAndWrkctrl(90) state in SecondaryState Enum for R10.0"

	REVISION "201405060000Z"
        DESCRIPTION " 
	   Added PQSFP Enum for R10.1"

	REVISION "201405150000Z"
        DESCRIPTION " 
	   Added new card OTR in EquipmentType enum for R10.1"

	REVISION "201405290000Z"
        DESCRIPTION " 
	   Added new card PKTOTN and PKTOTNXCIF in EquipmentType enum for R10.1"

	REVISION "201406030000Z"
        DESCRIPTION " 
	   Added FIM, PCXM, CCMD8X16 Enum for CDC support for R10.1"

	REVISION "201406230000Z"
	DESCRIPTION " 
	   Added  wrksyncAndWrkctrl(91), actAndUeq(92), wrkAndMea(93) states in SecondaryState Enum for R10.1"

	REVISION "201407220000Z"
        DESCRIPTION " 
	   Added new card BMD and GMD10 in EquipmentType enum for R10.1"

	REVISION "201408270000Z"
	DESCRIPTION " 
	   Added  idleAndMea(94) state in SecondaryState Enum for R10.1"

	REVISION "201410200000Z"
	DESCRIPTION " 
	   Added new card MOTR in EquipmentType enum for R10.2"

	REVISION "201411240000Z"
	DESCRIPTION " 
	   Added new cards OBB & OBMD8 in EquipmentType enum for R10.2"

	REVISION "201503310000Z"
	DESCRIPTION " 
	   Added new cards CTM, SM, CCMD16X12 & RLA in EquipmentType enum for R11.00"

	REVISION "201505150000Z"
	DESCRIPTION " 
	   Added new cards AMP4, PCFP2 in EquipmentType enum & secondary states viz. 
	   wrkoam(95), fltAndWrkoam(96), wrksyncAndWrkoam(97), wrkoamAndWrkctrlAndWrksync(98), fltAndWrksyncAndWrkoam(99) for R11.00"

	REVISION "201506110000Z"
	DESCRIPTION " 
	   Added new secondary state  wrkoamAndWrkctrl(100) for R11.00"

	REVISION "201507280000Z"
	DESCRIPTION " 
	   Added new secondary state  fltAndWrksyncAndWrkctrlAndWrkoam(101) for R11.10"

	REVISION "201508120000Z"
	DESCRIPTION " 
	   Added new card CMD96 and 200GOCI (OCI) for Release R11.10"

        ::= { ome6500 2 }


Boolean ::= INTEGER {
    false(0),
    true(1)
}

-- The Admin State and Primary States 
-- are doubly defined in the 40G Fac
-- module and the OME6500 Equipment
-- module. Ultimately, they need to 
-- be merged. In the meantime, they
-- need to be concurrently updated.
AdminState ::= INTEGER {
    unknown(0),
    is(1),
    oos(2)
}

PrimaryState ::= INTEGER {
    unknown(0),
    is(1),
    is-anr(2),
    oos-au(3),
    oos-ma(4),
    oos-auma(5),
    oos-maanr(6)
}

EquipmentType ::= INTEGER {
        eNil(0),
        eEMPTY(1),
        eUNKNOWN(2),
        eILAN(3),
        eODU2(4), -- AID object name for the ODU2 fac object 
        eDS1(5),
        eDS3(6),
        eOC3(7), -- OME OC3 fac AID name
        eXC(8), -- OM3K VTX or OME XC card equipment type
        eSP(9), -- OM3K and OME shelf processor equipment type
        eFC100(10),
        eOC12(11), -- OME OC12 fac AID name
        eSTS1DS3(12),
        eSTS1E3(13),
        eVT1DS1(14),
        eVT2E1(15),
        eSMUX(16), -- OME SuperMux equipment type
        eFC200(17),
        eEC1(18),
        eE1WAN(19),  -- L2 PDH E1 type "E1WAN"
        eFC400(20),
        eVCE-ETH10G(21),
        eVCEMAP-ETH10G(22),
        e40GMUX(23),  -- 4 x 10G Single Slot Client Mate Eqpt Type
        e20GL2SS(24), -- OME 20GL2SS card equipment type
        eDS1WAN(25),  -- L2 PDH DS1 type - "DS1WAN"
        eEIO(26),
        eE3WAN(27),  -- L2 PDH E3 type - "E3WAN"
        e40GOCI(28),  -- 40G Single Slot Client Mate Eqpt Type
        e40GOCLD(29),  -- 40G Single Slot Full C-band Tunable Line Eqpt Type
        eDS3V(30),
        eDS3WAN(31),  -- L2 PDH DS3 type - "DS3WAN"
        eE1(32),
        eP10GSOELFC(33),  -- Pluggable 10G+10.7G+11.05G+11.09G+11.27G XFP eqpt type
        eOTS(34),  -- Photonic OTS virtual equipment
        eWSSOPM(35), -- OME/CPL WSS card with OPM capability
        e155ME(36), -- OME STM1e card equipment type
        e155MEP(37), -- OME STM1e P card equipment type
        eOC48(38), -- OME OC48 fac AID name
        ePWR(39),
        eFILLED-IO(40),
        eBNC-IO(41),
        eFAN(42),
        eE1DS3(43), -- OME E1DS3 on Transmux
        eE1E3(44), -- OME E1E3 on Transmux
        eVT2DS3(45), -- OME VT2DS3 on Transmux
        eVT2E3(46), -- OME VT2E3 on Transmux
        ePGE(47), -- OME GE SFP equipment type
        ePGEFC200(48), -- OME GE/FC100/FC200 SFP equipment type
        eDS1TM(49),
        eDSMBP(50),
        eDSMOAMEX(51),
        eDSMFANX3(52),
        eDSMIO(53),
        eDSM(54),
        eCMD44(55), -- CPL CMD44 equipment type
        eDINPIO(56), -- OME DINP IO card equipment type
        eBackplane(57),
        e1GFOSFC(58), -- OME 1GFOS card equipment type
        eFILLED(59),
        eFC1200(60), -- FC1200
        eOC192(61), -- OME AID object name for oc192 fac obj
        eSLOT(62), -- OME used to identify a slot, non-card specific
        eMIC(63), -- OME MIC card equipment type
        eAP(64), -- OME Access Panel equipment type
        eFILLER(65), -- OME Filler card equipment type
        eFANHOUSING(66), -- OME Fan backplane/housing equipment type
        e155622M(67), -- OME OC3/OC12 combo card equipment type
        e2G5(68), -- OME 2.5G card equipment type
        e10G(69), -- OME 10G card equipment type
        e1GFOS(70), -- OME GE card equipment type
        eP155622M(71), -- OME OC3/OC12 SFP equipment type
        eP2G5(72), -- OME 2.5G SFP equipment type
        eP2G5W(73), -- OME 2.5G DWDM pluggable equipment type
        ePGEFC(74), -- OME GE/FC100 SFP equipment type
        eETH(75), -- OME AID object name for eth fac object
        eFC(76), -- OME AID object name for fc fac object
        eWAN(77), -- OME AID object name for wan object
        eSTS1(78), -- OME AID object name for sts1 fac object
        eSTS3c(79), -- OME AID object name for sts3c fac object
        eSTS12c(80), -- OME AID object name for sts12c fac object
        eSTS24c(81), -- OME AID object name for sts24c fac object
        eSTS48c(82), -- OME AID object name for sts48c fac object
        eSTS192c(83), -- OME AID object name for sts192c fac object
        eVT15(84), -- OME AID object name for vt15 fac object
        eVT2(85), -- OME AID object name for vt2 fac object
        eVT6(86), -- OME AID object name for vt6 fac object
        e2G5W(87), -- OME 2.5G DWDM card equipment type
        e10GW(88), -- OME 10G DWDM card equipment type
        eBITSIN(89), -- OME BITSIN equipment type
        eBITSOUT(90), -- OME BITSOUT equipment type
        eDS3EC1(91), -- OME DS3EC1 multi port combo card equipment type
        eE1PSM-IO(92), -- PSM(Protection sub module) IO for the E1 card
        eE1CNV-IO(93), -- E1 IO converter modules for E1 card
        eGMD(94),  -- CPL GMD equipment type
        eDOSC(95),  -- CPL DOSC equipment type
        eCMD4(96),  -- CPL CMD4 equipment type
        eLIM(97),  -- CPL LIM equipment type
        eSLA(98),  -- CPL SLA equipment type
        eMLA(99),  -- CPL MLA equipment type
        eVOA(100), -- CPL AID object name for voa fac object
        eEDFA(101), -- CPL AID object name for edfa fac object
        eOPTMON(102), -- CPL AID object name for optmon fac object
        eOSC(103), -- CPL AID object name for osc fac object
        eDOC(104), -- CPL AID object name for doc fac object
        eP155M(105), -- OME OC3 SFP equipment type
        eP622M(106), -- OME OC12 SFP equipment type
        eADJ(107), -- CPL AID object name for adj fac object
        eDS3EC1P(108), -- OME DS3EC1 protection card equipment type
        eE1P(109), -- OME E1 protection card equipment type
        eCOLAN(110), -- OME and CPL COLAN equipment type
        eWAYSIDE(111), -- CPL Wayside equipment type
        eADJTX(112), -- CPL TX Adjacency facility AID object name
        eADJRX(113), -- CPL RX Adjacency facility AID object name
        eADJLN(114), -- CPL Line Adjacency facility AID object name
        eNC(115), -- CPL Network Channel AID Object
        eVT15AU4(116), -- AU4-mapped VT15
        eVT2AU4(117), -- AU4-mapped VT2
        eVT6AU4(118), -- AU4-mapped VT6
        eSTS1AU4(119), -- AU4-mapped STS1
        eDSCM(120), -- CPL DSCM equipment type
        eSHELF(121), -- CPL SHELF
        eSWT(122), -- CPL Shelf Wavelength Topology
        eOST(123), -- CPL Optical System Topology
        eOPM(124), -- CPL Optical Power Monitor
        eWB(125), -- CPL Wavelength Blocker
        e10GOCWT(126), -- 10G SONET/SDH Single Slot Wavelength Translator (WT) eqpt type
        e10GELWT(127), -- 10G transparent Ethernet LAN PHY Single Slot WT eqpt type
        eOC768(128), -- OME AID object name for oc768 fac obj 
        e2G5MX(129), -- 4xOC-48/STM-16/OTU-1 MUX(ponder) eqpt type
        -- eOTN1(130),  obsolete - use OTM1 entry below
        eOTM1(130), -- AID object name for the otm1 fac object
        -- eOTN2(131),  obsolete - use OTM2 entry below
        eOTM2(131), -- AID object name for the otm2 fac object
        -- eOTN3(132),  obsolete - use OTM3 entry below
        eOTM3(132), -- AID object name for the otm3 fac object
        eETH10G(133), -- AID object name for the 10G eth fac object
        ePUNKNOWN(134), -- OME object name for SFP UNKNOWN type
        eP155Me(135), -- OME STM1e SFP equipment type
        eSTM1e(136), -- OME STM1e object name
        eL2SS(137), -- OME L2SS card equipment type
        eLAN(138), -- OME LAN equipment type, e.g. LAN-15
        eENV(139), -- OME ENV
        eCONT(140), -- OME CONT
        e1FN-BNC-IO(141), -- OME 1:N BNC I/O for DS3/EC1/E1 cards.
        eDEST(142), -- CPL SNMP Destination
        eUOSC(143), -- CPL UOSC equipment type
        eCMD8(144), -- CPL CMD8 equipment type
        eWSS(145), -- CPL WSS equipment type
        eCHC(146), -- CPL AID object name for channel control fac object
        eSCO(147), -- CPL SCMD Cascade Order object type
        eVCS(148), -- OME Layer 2 Virtual Circuit Segment
        eVCE(149), -- OME Layer 2 Virtual Circuit Endpoint
        eVCE-ETH(150), -- OME Layer 2 internal use
        eVCE-WAN(151), -- OME Layer 2 internal use
        eVCE-LAG(152), -- OME Layer 2 internal use
        eVCEMAP( 153), -- OME Layer 2 Virtual Circuit Endpoint Map
        eVCEMAP-ETH(154), -- OME Layer 2 internal use
        eVCEMAP-WAN(155), -- OME Layer 2 internal use
        eVCEMAP-LAG(156), -- OME Layer 2 internal use
        eBWPRF(157), -- OME Layer 2 internal use
        eDMPRF(158), -- OME Layer 2 internal use
        eCFPRF(159), -- OME Layer 2 internal use
        eFE(160), -- OME FE cards equipment type, e.g. 24xFE-SFP/IO, 24xFE-IO
        ePFE(161), -- OME FE pluggable equipment type
        eP10GS(162), -- Pluggable 10G XFP eqpt type
        eP10GEL(163), -- Pluggable 11.1G XFP eqpt type
        eP10GSEL(164), -- Pluggable 10G+11.1G XFP eqpt type
        eP10GSOEL(165), -- Pluggable 10G+10.7G+11.1G XFP eqpt type
        e10GOCLD(166), -- OME BB 10G OCLD card equipment type
        e2xOSC(167), -- OME 2 Port Optical Service Channel
        e10GOTR(168), -- OME BB 10G OTR card equipment type
        eTMUX(169), -- OME Transmux equipment type
        eDS1DS3(170), -- OME DS1 on Transmux
        eVT1DS3(171), -- OME VT15 on Transmux
        eSE(172), -- CPL Shared Eqpt
        eRPR(173), -- OME RPR card equipment type
        eMXC(174), -- OME MXC card equipment type
        eCOSST(175), -- OME COS Standard equipment type
        eCOSBR(176), -- OME COS Bronze equipment type
        eCOSSL(177), -- OME COS Silver equipment type
        eCOSGD(178), -- OME COS Gold equipment type
        eCOSPL(179), -- OME COS Platinum equipment type
        eCOSPR(180), -- OME COS Premium equipment type
        eCOSNT(181), -- OME COS Network equipment type
        eCOSCR(182), -- OME COS Critical equipment type
        eLAG(183), -- OME Link Aggregration Group equipment type
        eETH100(184), -- OME AID object name for eth100 fac object
        eCHMON(185), -- CPL CHMON equipment type
        eE1MIO75P(186), -- METRO 75 ohm protected I/O
        eE1MIO120P(187), -- METRO 120 ohm protected I/O
        eE1MIO75U(188), -- METRO 75 ohm unprotected I/O
        eE1MIO120U(189), -- METRO 120 ohm unprotected I/O
        eTNS(190), -- OME Layer 2 Tunnel
        eTNE(191), -- OME Layer 2 Tunnel Endpoint
        eTNE-ETH(192), -- OME Layer 2 Internal Use
        eTNE-WAN(193), -- OME Layer 2 Internal Use
        eTNE-RPR(194), -- OME Layer 2 Internal Use
        eTNE-LAG(195), -- OME Layer 2 Internal Use
        eTNEMAP(196), -- OME Layer 2 Tunnel Endpoint Map
        eTNEMAP-ETH(197), -- OME Layer 2 Internal Use
        eTNEMAP-WAN(198), -- OME Layer 2 Internal Use
        eTNEMAP-RPR(199), -- OME Layer 2 Internal Use
        eTNEMAP-LAG(200), -- OME Layer 2 Internal Use
        eVCE-RPR(201), -- OME Layer 2 Internal Use
        eVCEMAP-RPR(202), -- OME Layer 2 Internal Use
        eRPR-RING(203), -- OME RPR ring
        eRPR-RINGLET(204), -- OME RPR RINGLET
        eCOS(205), -- OME (all) COS equipment type
        eRPR-STATION(206), -- OME RPR station (topology)
        e10GOTNWT(207), -- 10G OTN Single Slot Wavelength Translator (WT) eqpt type
        eLNGRP(208), -- OME equipment group type
        eWTGRP(209), -- OME equipment group type
        eFE-IO(210), -- IO module for 24xFE card
        eOCH(211), -- CPL OCH eqpt type for OBM appl
        ePRTSCHED(212), -- OME Layer 2 scheduler
        eHOP(213), -- OME Layer 2 hop
        eE3(214), -- OME DS3E3x24 card E3 facility eqpt
        e10GOTSC(215), -- OME BB 10G OTSC card equipment type
        eFDB(216), -- OME Layer 2 Forwarding/Filtering Database
        eFDBSTATIC(217), -- OME Layer 2 FDB Static Entries
        eCOSA(218), -- OME Layer 2 Internal Use
        eCOSBC(219), -- OME Layer 2 Internal Use
        eCOSBE(220), -- OME Layer 2 Internal Use
        eCOSC(221), -- OME Layer 2 Internal Use
        eXGE(222), -- OME 10GE (XGE) card equipment type
        eDRA(223), -- CPL Distributed Raman Amplifier eqpt type
        eRAMAN(224), -- CPL AID object name for Raman fac object
        eVCEA(225), -- OME Layer 2 Internal Use
        eVCEBC(226), -- OME Layer 2 Internal Use
        eVCEBE(227), -- OME Layer 2 Internal Use
        eVCEC(228), -- OME Layer 2 Internal Use
        eTNEA(229), -- OME Layer 2 Internal Use
        eTNEBC(230), -- OME Layer 2 Internal Use
        eTNEBE(231), -- OME Layer 2 Internal Use
        eTNEC(232), -- OME Layer 2 Internal Use
        ePCWDMS(233), -- OME CWDM SONET|SDH OC3|OC12|OC48 SFP equipment type
        eSCHPRF(234), -- OME Layer 2 Internal Use
        eVCEST(235), -- OME Layer 2 Internal Use
        eVCESL(236), -- OME Layer 2 Internal Use
        eVCEGD(237), -- OME Layer 2 Internal Use
        eVCEPR(238), -- OME Layer 2 Internal Use
        eVCENT(239), -- OME Layer 2 Internal Use
        eTNEST(240), -- OME Layer 2 Internal Use
        eTNESL(241), -- OME Layer 2 Internal Use
        eTNEGD(242), -- OME Layer 2 Internal Use
        eTNEPR(243), -- OME Layer 2 Internal Use
        eTNENT(244), -- OME Layer 2 Internal Use
        ePFC400(245), -- OME FC100/FC200/FC400 SFP equipment type
        eDISP(246), -- OME AID object name for DISP facility object
        eHEXOCN(247), -- OME HEX OC-n card(MiF) equipment type
        eODU3(248), -- AID object name for the ODU3 fac object
        eCMDA(249), -- Photonic Channel Mux/Demux Amplifier
	e10GWT(250),
	e2G5MOTR(251),
        eGENERIC(252),   -- <== needs to be defined
	eDS3E3EC1(253),
	eDS3E3EC1P(254),
	eGE(255),
	eL2RPR(256),
	eMRO(257),
	eOTSC(258),
	eMRO2(259),  -- This is only for R5.2
	eL2MOTR(260),
	eTPT(261),
	eOMX(262),
	e40GXCIF(263),
	e100GOCLD(264),
	e100GOCI(265),
	e100GMUX(266),
	e40GUMUX(267),
	e40GUOCLD(268),
	eOSIC(269),
	eFLEXMOTR(270),
	ePCFP(271),
	ePSFP(272),
	eOTNFMOTR(273),
	eSPOTNFMOTR(274),
	eCCMD12(275),
	eSMD(276),
	eOTNFLEX(277),
	eOTNXCIF(278),
	eSLIC(279),
	ePPC6(280),
	eBS(281),
	eOMDF4(282),
	eOMDF8(283),
	eOSCF(284),
	eFGA(285),
	ePXFP(286),
	eOPS(287),
	eEVOA(288),
	eEMOTR(289),
	ePKTFLEX(290),
	eSRA(291),
	eSAM(292),
	eESAM(293),
	eXLA(294),
	eISS(295),
	ePQSFP(296),
        eOTR(297),
        ePKTOTN(298),
        ePKTOTNXCIF(299),
        eCCMD8X16(300),
        ePCXM(301),
        eFIM(302),
        eBMD(303),
        eGMD10(304),
        eMOTR(305),
        eOBB(306),
        eOBMD8(307),
        eCTM(308),
        eSM(309),
        eCCMD16X12(310),
        eRLA(311),
        eAMP4(312),
        ePCFP2(313),
        eCMD96(314),
        eOCI(315),
        eMAX(316)
}

SecondaryState ::= INTEGER {
        unknown(0),
	nil(1),
        act(2),
        idle(3),
        sgeo(4),
        psi(5),
        flt(6),
        mea(7),
        stbyh(8),
        ts(9),
        ueq(10),
        wrk(11),
        wrksync(12),
        wrktraf(13),
        faf(14),
        meaAndFlt(15),
        actAndFlt(16),
        actAndWrksync(17),
        actAndFltAndWrksync(18),
        idleAndFlt(19),
        idleAndWrksync(20),
        idleAndFltAndWrksync(21),
        wrktrafAndWrksync(22),
	ains(23),
        actAndAins(24),
        ainsAndIdle(25),
        ainsAndSgeo(26),
        ainsAndPsi(27),
        ainsAndFlt(28),
        ainsAndMea(29),
        ainsAndStbyh(30),
        ainsAndTs(31),
        ainsAndUeq(32),
        ainsAndWrk(33),
        ainsAndWrksync(34),
        ainsAndWrktraf(35),
        ainsAndFaf(36),
        ainsAndMeaAndFlt(37),
        actAndAinsAndFlt(38),
        actAndAinsAndWrksync(39),
        actAndAinsAndFltAndWrksync(40),
        ainsAndIdleAndFlt(41),
        ainsAndIdleAndWrksync(42),
        ainsAndIdleAndFltAndWrksync(43),
        ainsAndWrktrafAndWrksync(44),
        idleAndUeq(45),
	fltAndWrksync(46),
        wrkctrl(47),
        actAndWrkctrl(48),
        idleAndWrkctrl(49),
        ainsAndWrkctrl(50),
	fltAndWrkctrl(51),
        actAndFltAndWrkctrl(52),
        idleAndFltAndWrkctrl(53),
        actAndAinsAndWrkctrl(54),
        actAndAinsAndFltAndWrkctrl(55),
        ainsAndIdleAndWrkctrl(56),
        ainsAndIdleAndFltAndWrkctrl(57),
        wrktrafAndWrksyncAndWrkctrl(58),
        ainsAndWrktrafAndWrksyncAndWrkctrl(59),
	ueqAndStbyh(60),
	ainsAndUeqAndStbyh(61),
        meaAndStbyh(62),
        fltAndStbyh(63),
        fltAndWrktrafAndWrksync(64),
        meaAndWrksync(65),
        ueqAndWrksync(66),
        actAndWrk(67),
        idleAndWrk(68),
        actAndStbyh(69),
        idleAndStbyh(70),
        stbys(71),
        ainsAndStbys(72),
        ueqAndStbys(73),
        ainsAndUeqAndStbys(74),
        meaAndStbys(75),
        fltAndStbys(76),
        actAndStbys(77),
        idleAndStbys(78),
	fltAndWrk(79),
        fltAndUeq(80),
	fltAndWrktraf(81),
        fltAndWrktrafAndWrksyncAndWrkctrl(82),
        fltAndSgeo(83),
        idleAndSgeo(84),
        idleAndWrkAndUeq(85),
        idleAndStbysAndUeq(86),
        idleAndStbysAndFlt(87),
        idleAndStbyhAndUeq(88),
        idleAndStbyhAndFlt(89),
        wrktrafAndWrkctrl(90), 
        wrksyncAndWrkctrl(91), 
        actAndUeq(92),
        wrkAndMea(93),
        idleAndMea(94),
        wrkoam(95),
        fltAndWrkoam(96),
        wrksyncAndWrkoam(97),
        wrkoamAndWrkctrlAndWrksync(98),
        fltAndWrksyncAndWrkoam(99),
        wrkoamAndWrkctrl(100),
        fltAndWrksyncAndWrkctrlAndWrkoam(101)
}

EquipmentMode ::= INTEGER {
        unknown(0),
	nil(1),
	internal(2),
	mated(3),
	xconnect(4),
	internal-mated(5),
	internal-xconnect(6),
	mated-xconnect(7),
	internal-mated-xconnect(8),
	matedsym(9),
	internal-matedsym(10),
	matedsym-xc(11),
	internal-matedsym-xconnect(12),
	mate-pending(13),
	mate-pending-xconnect(14)
}

nnEqptProv       OBJECT IDENTIFIER ::= { nnOme6500Equipments 1 }
nnInventory    OBJECT IDENTIFIER ::= { nnOme6500Equipments 2 }

nnEqptProvTable    OBJECT-TYPE
	SYNTAX    SEQUENCE OF NnEqptProvEntry
	MAX-ACCESS    not-accessible
	STATUS    current
        DESCRIPTION  "This table contains entries of all the 
	              provisioned equipments."
	::= { nnEqptProv 1 }

nnEqptProvEntry   OBJECT-TYPE
	SYNTAX    NnEqptProvEntry
	MAX-ACCESS    not-accessible
	STATUS    current
        DESCRIPTION  ""
        INDEX     { entPhysicalIndex  }
	::= { nnEqptProvTable 1 }


NnEqptProvEntry ::= 
	SEQUENCE {
		provEqptType
			EquipmentType,
		provCardType
			DisplayString,
		provEqptAID
			DisplayString,
		provPec
			DisplayString,
		adminState
			AdminState,
		primaryState
			PrimaryState,
		secondaryState
			SecondaryState, 
		eqptMode
			EquipmentMode,
		mateEqpt1
			DisplayString,
		mateEqpt2
			DisplayString,
		mateEqpt3
			DisplayString,
        rowStatus
			RowStatus,
		mapMode
			INTEGER,
		timingGroupId
			DisplayString,
		dsmSiteAddress
			DisplayString
	}

provEqptType    OBJECT-TYPE
	SYNTAX   EquipmentType 
	MAX-ACCESS    read-create
	STATUS    current
    DESCRIPTION  "This is obtained from the TL1 Blueprint XML document 
                  from the AID template group for Equipment AIDs.
                  Search for aid_templategroup name=(EQPT) 
                  description=(General Equipment AID)
                  The parantheses are for strings in quotes. Make
                  sure the list is updated with the AID group in the
                  TL1 blueprint."
	::= { nnEqptProvEntry 1 }

provCardType    OBJECT-TYPE
	SYNTAX    DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "Obtained from the CTYPE TL1 parameter"
	::= { nnEqptProvEntry 2 }

provEqptAID OBJECT-TYPE
    SYNTAX	  DisplayString
	MAX-ACCESS    read-only
	STATUS    current
        DESCRIPTION  "AID from the TL1 RTRV-EQPT AID"
	::= { nnEqptProvEntry 3 }

provPec OBJECT-TYPE
	SYNTAX    DisplayString(SIZE(0..22))
	MAX-ACCESS    read-create
	STATUS    current
    DESCRIPTION  ""
	::= { nnEqptProvEntry 4 }

adminState OBJECT-TYPE
	SYNTAX    AdminState 
	MAX-ACCESS    read-write
	STATUS    current
    DESCRIPTION  "Primary State of the Equipment."
	::= { nnEqptProvEntry 5 }

primaryState OBJECT-TYPE
	SYNTAX    PrimaryState
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "Primary State of the Equipment."
	::= { nnEqptProvEntry 6 }

secondaryState OBJECT-TYPE
	SYNTAX    SecondaryState
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "Secondary State of the Equipment"
	::= { nnEqptProvEntry 7 }

eqptMode OBJECT-TYPE
	SYNTAX  EquipmentMode
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnEqptProvEntry 8 }

mateEqpt1 OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "AID of mate card"
	::= { nnEqptProvEntry 9 }

mateEqpt2 OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "AID of mate card"
	::= { nnEqptProvEntry 10 }

mateEqpt3 OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "AID of mate card"
	::= { nnEqptProvEntry 11 }

rowStatus OBJECT-TYPE
	SYNTAX    RowStatus
	MAX-ACCESS    read-write
	STATUS    current
    DESCRIPTION  "This is used to manage rows in the equipment table."
	::= { nnEqptProvEntry 12 }

mapMode OBJECT-TYPE
    SYNTAX	INTEGER {
		unknown(0),
		au3-vt15(1),
		au4-vt2(2)
	}
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "Payload Mapping Mode - FE only"
	::= { nnEqptProvEntry 13 }

timingGroupId OBJECT-TYPE
    SYNTAX	 DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "Timing Group ID - SMUX only"
	::= { nnEqptProvEntry 14 }

dsmSiteAddress OBJECT-TYPE
    SYNTAX	  DisplayString(SIZE(0..40))
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "DSM Site address"
	::= { nnEqptProvEntry 15 }



nnInventoryTable    OBJECT-TYPE
	SYNTAX    SEQUENCE OF NnInventoryEntry
	MAX-ACCESS    not-accessible
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventory 1 }

nnInventoryEntry   OBJECT-TYPE
	SYNTAX    NnInventoryEntry
	MAX-ACCESS    not-accessible
	STATUS    current
    DESCRIPTION  "This table contains unprovisionable attributes 
	              of equipments physically present on the shelf."
    INDEX     { entPhysicalIndex }
	::= { nnInventoryTable 1 }


NnInventoryEntry ::= 
	SEQUENCE {
		actualEqptType
			EquipmentType,
		actualCardType
			DisplayString,
		inventoryAID 
			DisplayString,
		productEqptCode 
			DisplayString,
		releaseLevel
			DisplayString,
		clei
			DisplayString,
		serialNumber
			DisplayString,
		manufactureDate
			DisplayString,
		inServiceAge
			DisplayString,
		onSince
			DisplayString,
		--flightRecorderInfo
			--DisplayString,
		physicallyPresent
			Boolean,
		restartCard
			INTEGER,
		dsmMate
			DisplayString,
		dsmConn
			INTEGER
	}


actualEqptType    OBJECT-TYPE
	SYNTAX        EquipmentType
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "This is obtained from the TL1 Blueprint XML document 
                  from the AID template group for Equipment AIDs.
                  Search for aid_templategroup name=(EQPT) 
                  description=(General Equipment AID)
                  The parantheses are for strings in quotes. Make
                  sure the list is updated with the AID group in the
                  TL1 blueprint."
	::= { nnInventoryEntry 1 }

actualCardType    OBJECT-TYPE
	SYNTAX    DisplayString
	MAX-ACCESS    read-only
	STATUS    current
        DESCRIPTION  "From the CTYPE of the TL1 command. Could be the same as
                      the same entry in the Admin table."
	::= { nnInventoryEntry 2 }

inventoryAID OBJECT-TYPE
    SYNTAX	  DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "TL1 AID from RTRV-INVENTORY response"
	::= { nnInventoryEntry 3 }


productEqptCode OBJECT-TYPE
	SYNTAX    DisplayString(SIZE(0..8))
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 4 }

releaseLevel OBJECT-TYPE
	SYNTAX    DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 5 }

clei OBJECT-TYPE
	SYNTAX    DisplayString(SIZE(0..10))
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  "Common Language Equipment Identifier"
	::= { nnInventoryEntry 6 }

serialNumber OBJECT-TYPE
	SYNTAX    DisplayString(SIZE(0..25))
	MAX-ACCESS    read-only
	STATUS    current
        DESCRIPTION  ""
	::= { nnInventoryEntry 7 }

manufactureDate OBJECT-TYPE
	SYNTAX    DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 8 }

inServiceAge OBJECT-TYPE
	SYNTAX    DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 9 }

onSince OBJECT-TYPE
	SYNTAX    DisplayString
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 10 }

--flightRecorderInfo OBJECT-TYPE
	--SYNTAX    DisplayString
	--MAX-ACCESS    read-only
	--STATUS    current
        --DESCRIPTION  ""
	--:: { nnInventoryEntry 11 }

physicallyPresent OBJECT-TYPE
	SYNTAX    Boolean
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 11 }

restartCard OBJECT-TYPE
	SYNTAX    INTEGER {
	     unknown(0),
		cold(1),
		warm(2)
	}
	MAX-ACCESS    read-write
	STATUS    current
        DESCRIPTION  "1 for cold start, 2 for warm start"
	::= { nnInventoryEntry 12 }

dsmMate OBJECT-TYPE
	SYNTAX    DisplayString(SIZE(0..25))
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 13 }

dsmConn OBJECT-TYPE
	SYNTAX    INTEGER {
	       unknown(0),
		direct(1),
	      indirect(2)
	}
	MAX-ACCESS    read-only
	STATUS    current
    DESCRIPTION  ""
	::= { nnInventoryEntry 14 }

END


   NORTEL-OME6500-SHELF-PARAMS-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       ome6500             FROM NORTEL-OPTICAL-OME6500-MIB
       DisplayString       FROM RFC1213-MIB
       IpAddress,
       OBJECT-TYPE,
       MODULE-IDENTITY,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

nnOme6500ShelfParams MODULE-IDENTITY
        LAST-UPDATED "200805010000Z"    
        ORGANIZATION "Nortel"
        CONTACT-INFO
           "   7035 Ridge Road
               Hanover, Maryland 21076
               United States
               Toll-free:+1- 800-921-1144
               Phone: +1-410-694-5700
               Fax: +1-410-694-5750
               www.ciena.com "
        DESCRIPTION
              "Optical Multiservice Edge (OME)
              This Module will be used to retrieve  shelf information from the NE."
   
        --Revision history
        REVISION "200702020000Z"
        DESCRIPTION "Initial Version - created for OME6500 REL 5.1"         

	REVISION "200805010000Z"
        DESCRIPTION "updated the shelfSoftwareVersion object's DESCRIPTION"      
        ::= { ome6500 1 }

nnOme6500ShelfParamsProv  OBJECT IDENTIFIER  ::= { nnOme6500ShelfParams 1 }

ErrorCodes ::= INTEGER {
    eNil(0),
    eMSG-SENT(1), -- Only for TL1 use, applications don't need to concern
    ePRTL(2),     -- Partially completed
    eCOMPLD(3),   -- Completed
    eDENY(4),     --  Only for TL1 use, applications don't need to concern
    eENEQ(5),     -- Equipage, Not EQuipped
    eENEX(6),     -- Equipage, Not equipped with EXercise capability
    eENPS(7),     -- Equipage, Not equipped with Protection Switching 
    eIBEX(8),     -- Input, Block EXtra
    eIBMS(9),     -- Input, Block MiSsing
    eICNV(10),    -- Input, Command Not Valid
    eIDNV(11),    -- Input, Data Not Valid
    eIDRG(12),    -- Input, Data, RanGe error
    eIEAE(13),    -- Input, Entity Already Exists 
    eIENE(14),    -- Input, Entity Not Exists
    eIIAC(15),    -- Input, Invalid ACcess identifier
    eIICT(16),    -- Input, Invalid Correlation Tag
    eIIPG(17),    -- Input, Invalid Parameter Grouping
    eIITA(18),    -- Input, Invalid TArget identifier
    eINUP(19),    -- Input, Non-null Unimplemented Parameter
    eIPEX(20),    -- Input, Parameter EXtra
    eIPMS(21),    -- Input, Parameter MiSsing
    eIPNV(22),    -- Input, Parameter Not Valid
    ePICC(23),    -- Privilege, Invalid Command Code
    ePIUC(24),    -- Privilege, Illegal User Code
    ePIUI(25),    -- Privilege, Illegal User Identity
    ePLNA(26),    -- Privilege, Login Not Active
    eSAAL(27),    -- Status, Already ALlowed
    eSAAS(28),    -- Status, Already ASsigned
    eSABT(29),    -- Status, ABorTed
    eSAIN(30),    -- Status, Already INhibited
    eSAIS(31),    -- Status, Already In Service
    eSAMS(32),    -- Status, Already in Maintenance State
    eSANP(33),    -- Status, Alignment Not Provisioned
    eSAOP(34),    -- Status, Already OPerated
    eSAPR(35),    -- Status, Already in PRotection state
    eSARB(36),    -- Status, All Resources Busy
    eSARL(37),    -- Status, Already ReLeased
    eSDNC(38),    -- Status, Data Not Consistent
    eSDNR(39),    -- Status, Data Not Ready
    eSLEM(40),    -- Status, List Exceeds Maximum
    eSNSR(41),    -- Status, No Switch Request outstanding
    eSNVS(42),    -- Status, Not in Valid State
    eSPFA(43),    -- Status, Protection unit FAiled
    eSPLD(44),    -- Status, Protection unit LockeD
    eSPUA(45),    -- Status, Path UnAligned
    eSRCI(46),    -- Status, Requested Command Inhibited
    eSROF(47),    -- Status, Requested Operation Failed
    eSSRD(48),    -- Status, Switch Request Denied
    eSSRE(49),    -- Status, System Resources Exceeded
    eSSTP(50),    -- Status, SToPped
    eSWFA(51),    -- Status, Working unit FAiled
    eSWLD(52),    -- Status, Working unit LockeD
    eSRPR(53),    -- Status, switch Request PReempted
    eEQWT(54),    -- EQuipage, Wrong Type
    eICNS(55),    -- Input, Command Not Supported
    eODNV(56),    -- Output, Data Not Valid
    eIATA(57),    -- Input, Ambiguous TID
    eICNI(58),    -- Input, Command Not Implemented yet
    eTL1SNA(59),  -- TL1 session Not Available
    eMERR(60),    -- Status, Multiple ERRors 
    eSFTPC-OK(61),
    eSFTPC-ERR(62),
    eLOST(63),    -- TIDC LOST member AO report
    eCANC(64),  
    --eIDNC       (4),
    --eIENA       (8),
    --eIISP       (13),
    --ePRNO       (24),
    --ePLMM       (39),
    --eTIMM       (40),
    --eUSRO       (41)
    eMAX(65)
}


shelfId OBJECT-TYPE
	SYNTAX INTEGER(1..64)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is an integer id between 1 to 64"
	::= { nnOme6500ShelfParamsProv  1 }

shelfSubId OBJECT-TYPE
	SYNTAX INTEGER(0..64)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "If it is part of OM5K ring, it will be in the range of 1..64. 
	             If it is not part of the ring, the API will return 0"
	::= { nnOme6500ShelfParamsProv  2 }

shelfTid OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is the shelf's TID"
	::= { nnOme6500ShelfParamsProv  3 }

shelfIpAddress OBJECT-TYPE
	SYNTAX IpAddress
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is the shelf's IP address"
	::= { nnOme6500ShelfParamsProv  4 }

shelfSoftwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This object gives the shelf's current Software Version
	             when it is retrieved."
	::= { nnOme6500ShelfParamsProv  5 }

shelfSiteId OBJECT-TYPE
	SYNTAX INTEGER(0..65535)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Value of 0 indicates unprovisioned"
	::= { nnOme6500ShelfParamsProv  6 }

shelfSiteName OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { nnOme6500ShelfParamsProv  7 }

shelfSnmpVersion OBJECT-TYPE
	SYNTAX INTEGER {
		v1v2c(1),
		v1v2cv3(2),
		v3(3)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This value specifies the supported SNMP versions: v1v2c, v1v2cv3, or v3"
	::= { nnOme6500ShelfParamsProv  8 }

shelfMode OBJECT-TYPE
	SYNTAX INTEGER {
		sonet(1),
		sdh(2),
		jsdh(3)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "SONET, SDH, J-SDH"
	::= { nnOme6500ShelfParamsProv  9 }

shelfIsGne OBJECT-TYPE
	SYNTAX INTEGER {
		false(0),
		true(1)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Set to true if the current shelf is a GNE.
                 If this variable is set to TRUE, query the
                 shelfIfGneIpAddress for the GNE IP."
	::= { nnOme6500ShelfParamsProv  10 }

shelfGneIpAddress OBJECT-TYPE
	SYNTAX IpAddress
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "If the shelf is a GNE, this variable shall
                 contain a valid IP address which could be
                 different from the shelf IP and serves as a
                 GNE IP."
	::= { nnOme6500ShelfParamsProv  11 }


lastErrorRc OBJECT-TYPE
	SYNTAX ErrorCodes
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This contains a reference to the 4-letter error code
                 returned by TL1 after the last set operation."
	::= { nnOme6500ShelfParamsProv  12 }

lastErrorDescription OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Some TL1 commands may have additional descriptions
                 beyond the 4-letter code. For those commands, this
                 additional info shall be available through this variable.
                 Otherwise, this is empty."
	::= { nnOme6500ShelfParamsProv  13 }


END


	CIENA-SMI DEFINITIONS ::= BEGIN

		IMPORTS 
			enterprises, MODULE-IDENTITY, OBJECT-IDENTITY			
				FROM SNMPv2-SMI;
	
		ciena MODULE-IDENTITY
			LAST-UPDATED "201009272317Z"
			ORGANIZATION
				"Ciena Corp."
			CONTACT-INFO
        	"  Mib Meister
               115 North Sullivan Road
               Spokane Valley, WA 99037
               USA            
               Phone:  +1 509 242 9000
               Email:  support@ciena.com"
               DESCRIPTION
               "Initial creation of MIB file structure for Ciena."
               REVISION "201009272317Z"
               DESCRIPTION
               "MIB Version: MIBS-CIENA-CES-XX-XX-XX-XXX"

               REVISION "201507150000Z"
               DESCRIPTION "updated for cienaGenericMIBs and cienaOpterametro." 
               ::= { enterprises 1271 }


               cienaCes OBJECT-IDENTITY
               STATUS current
               DESCRIPTION
               "Provides a root object identifier that can be
               used to define MIBs pertaining to Carrier Ethernet Solutions."
               ::= { ciena 2 }

               cienaCommon OBJECT-IDENTITY
               STATUS current
               DESCRIPTION
				"Provides a root object identifier that can be
				used to define common MIBs pertaining to Carrier Ethernet Solutions."
			::= { ciena 1 }

		cienaProducts OBJECT-IDENTITY
			STATUS current
			DESCRIPTION
				"Provides a root object identifier for all Ciena products.  
				The sysObjectID values will be assigned the OID representing the product specified in 
				CIENA-PRODUCTS-MIB.my."
			::= { cienaCommon 2 }

			                                         
		cienaCesStatistics	  OBJECT-IDENTITY
			STATUS	current
			DESCRIPTION
				"Provides a root object identifier for all the statistics MIBs pertaining to 54XX products."
			::= { cienaCes 3 }			                    
			                
		cienaCesNotifications OBJECT-IDENTITY
			STATUS	current
			DESCRIPTION
				"Provides a root object identifier for all the notifications pertaining to 54XX products."
			::= { cienaCes 2 }	
			
		cienaCesNotificationsControlModule	OBJECT-IDENTITY
			STATUS	current
			DESCRIPTION
				"Provides a root object identifier to place the state control objects for the 
				54XX notifications." 		                                    
			::= { cienaCesNotifications 1 }

		cienaCesConfig OBJECT-IDENTITY
			STATUS	current
			DESCRIPTION
				"Provides a root object identifier for all the trap MIBs pertaining to 54XX products."
			::= { cienaCes 1 }			                                    

		cienaGenericMIBs OBJECT-IDENTITY
			STATUS	current
			DESCRIPTION
                 "This module represents the top-level MIB branch for some of the generic MIBs that are common to Ciena
                 products."
			::= { ciena 29 }			                                    

		cienaOpterametro OBJECT-IDENTITY
			STATUS	current
			DESCRIPTION
                 "This module represents the top-level MIB branch for Optical MIBs."
			::= { ciena 68 }			                                    

END
			
--
-- CIENA-SMI.my
--


-- MIB Revision 4

CIENA-OME6500-ALARM-EXT-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       cienaGenericMIBs    FROM CIENA-SMI

       nlmLogName, nlmLogIndex FROM NOTIFICATION-LOG-MIB

       TEXTUAL-CONVENTION,
       DateAndTime         FROM SNMPv2-TC
        
       MODULE-IDENTITY,
       OBJECT-IDENTITY,
       OBJECT-TYPE,
       NOTIFICATION-TYPE,
       Integer32           FROM SNMPv2-SMI

       SnmpAdminString     FROM SNMP-FRAMEWORK-MIB;

ome6500ExtAlarmMIB MODULE-IDENTITY
    LAST-UPDATED "201506300000Z"
    ORGANIZATION "Ciena Corp." 
    CONTACT-INFO 
        	"  Mib Meister
               115 North Sullivan Road
               Spokane Valley, WA 99037
               USA            
               Phone:  +1 509 242 9000
               Email:  support@ciena.com" 

     DESCRIPTION  "This module contains objects that extend the IETF Alarm MIB"
     
     -- Revision history
      REVISION "201507150000Z"
      DESCRIPTION "Initial Version - created for OME6500 REL 11.1"         

     ::= { cienaGenericMIBs 6 }

ome6500ExtAlarmObjects    OBJECT IDENTIFIER ::= { ome6500ExtAlarmMIB 1 }
ome6500AlarmObjects       OBJECT IDENTIFIER ::= { ome6500ExtAlarmMIB 2 }


-- Textual Conventions

Ome6500ExtAlarmEventType ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
         "Ciena OME6500 version of IANA Event Type"
    SYNTAX       INTEGER
          {
          other  (1),
          communicationsAlarm  (2),
          qualityOfServiceAlarm  (3),
          processingErrorAlarm  (4),
          equipmentAlarm  (5),
          environmentalAlarm  (6),
          integrityViolation  (7),
          operationalViolation  (8),
          physicalViolation  (9),
          securityServiceOrMechanismViolation  (10),
          timeDomainViolation (11)
          }

-- Probable causes removed from this version, as the version we give
-- customers contains duplicate probable causes which mosy does not like
-- internally we don't use the probable cause values anyway.

Ome6500ExtAlarmProbableCause ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
         "Ciena OME6500 version of IANA Probable Cause"
    SYNTAX       INTEGER
          {
           indeterminate (0)
          }

ResourceId ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
         "Resource Identifier"
    SYNTAX       OBJECT IDENTIFIER 

-- Ciena OME6500 Extended Active Alarm Table

ome6500ExtAlarmActiveTable OBJECT-TYPE
  SYNTAX      SEQUENCE OF Ome6500ExtAlarmActiveEntry
  MAX-ACCESS  not-accessible
  STATUS      current
  DESCRIPTION
       "Ciena OME6500 Active Alarm Table Extension"
  ::= { ome6500ExtAlarmObjects 1 }

ome6500ExtAlarmActiveEntry OBJECT-TYPE
  SYNTAX      Ome6500ExtAlarmActiveEntry
  MAX-ACCESS  not-accessible
  STATUS      current
  DESCRIPTION
       "Ciena OME6500 Active Alarm Table Extension Entry"
--  AUGMENTS { alarmActiveEntry }
  INDEX { ome6500ExtAlarmActiveEventType }
  ::= { ome6500ExtAlarmActiveTable 1 }

Ome6500ExtAlarmActiveEntry ::= SEQUENCE {
  ome6500ExtAlarmActiveEventType                     Ome6500ExtAlarmEventType,
  ome6500ExtAlarmActiveProbableCause                 Ome6500ExtAlarmProbableCause,
  ome6500ExtAlarmActiveAdditionalText                SnmpAdminString,
  ome6500ExtAlarmActiveDocumentationPointer          SnmpAdminString,
  ome6500ExtAlarmActiveResourceDescription           SnmpAdminString,
  ome6500ExtAlarmActiveManualClear                   INTEGER,
  ome6500ExtAlarmActiveSequenceNumber                Integer32
  }
  

ome6500ExtAlarmActiveEventType OBJECT-TYPE
  SYNTAX       Ome6500ExtAlarmEventType
  MAX-ACCESS   read-write
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Event Type"
  ::= { ome6500ExtAlarmActiveEntry 1 }


ome6500ExtAlarmActiveProbableCause OBJECT-TYPE
  SYNTAX       Ome6500ExtAlarmProbableCause
  MAX-ACCESS   read-write
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Probable Cause"
  ::= { ome6500ExtAlarmActiveEntry 2 }

ome6500ExtAlarmActiveAdditionalText OBJECT-TYPE
  SYNTAX       SnmpAdminString
  MAX-ACCESS   read-write
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Additional Text"
  ::= { ome6500ExtAlarmActiveEntry 3 }

ome6500ExtAlarmActiveDocumentationPointer OBJECT-TYPE
  SYNTAX       SnmpAdminString
  MAX-ACCESS   read-only
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Documentation Pointer"
  ::= { ome6500ExtAlarmActiveEntry 4 }

ome6500ExtAlarmActiveResourceDescription OBJECT-TYPE
  SYNTAX       SnmpAdminString
  MAX-ACCESS   read-only
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Resource Description"
  ::= { ome6500ExtAlarmActiveEntry 5 }

ome6500ExtAlarmActiveManualClear OBJECT-TYPE
  SYNTAX       INTEGER  {
                        other (1),
                        forbidden (2),
                        required (3),
                        optional (4)
                        }
  MAX-ACCESS   read-only
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Manual Clear Indicator"
  ::= { ome6500ExtAlarmActiveEntry 6 }

ome6500ExtAlarmActiveSequenceNumber OBJECT-TYPE
  SYNTAX       Integer32
  MAX-ACCESS   read-only
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Active Alarm Table Extension Sequence Number"
  DEFVAL  { 0 }
  ::= { ome6500ExtAlarmActiveEntry 7 }

-- Definition Objects from Active Alarm Table in ALARM-MIB

ome6500AlarmActiveResourceId OBJECT-TYPE
  SYNTAX       INTEGER (0..65535)
  MAX-ACCESS   read-only
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Alarm Active Resource Id"
  ::= { ome6500AlarmObjects 1 }

ome6500AlarmActiveDateAndTime OBJECT-TYPE
  SYNTAX       DateAndTime
  MAX-ACCESS   not-accessible
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 Alarm Active Date & Time"
  ::= { ome6500AlarmObjects 2 }

ome6500AlarmActiveDescription OBJECT-TYPE
  SYNTAX       SnmpAdminString
  MAX-ACCESS   read-only
  STATUS       current
  DESCRIPTION
           "Ciena OME6500 Alarm Active Description"
  ::= { ome6500AlarmObjects 3 }


ome6500ExtNotificationPrefix OBJECT-IDENTITY
  STATUS       current
  DESCRIPTION
        "Ciena OME6500 NE alarm notifications prefix"
  ::= { ome6500ExtAlarmObjects 0 }

  -- Table of Information related to Messages
  
     ome6500ExtAlarmMessageTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF Ome6500ExtAlarmMessageEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "A table of information on messages. Entries are
          added to this table when their corresponding 
          notifications have been sent. Entires will be
          removed from this table as outlined in the
          Notification Log MIB [RFC3014]. Implementations
          that do not support the Notification Log MIB should
          provide behaviour for nlmLogName, nlmLogIndex and
          this table as if they did."
      ::= { ome6500ExtAlarmObjects 3 }

  ome6500ExtAlarmMessageEntry OBJECT-TYPE
      SYNTAX      Ome6500ExtAlarmMessageEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "An alarm message entry."               
      INDEX       { nlmLogName, nlmLogIndex }
      ::= { ome6500ExtAlarmMessageTable 1 } 
      
   Ome6500ExtAlarmMessageEntry ::= SEQUENCE {   
       ome6500ExtAlarmMessageResource             ResourceId, 
       ome6500ExtAlarmMessageResourceDescription  SnmpAdminString,
       ome6500ExtAlarmMessageDateAndTime          DateAndTime,      
       ome6500ExtAlarmMessageDocumentationPointer SnmpAdminString,
       ome6500ExtAlarmMessageInfo                 SnmpAdminString
    }        
    
    ome6500ExtAlarmMessageResource    OBJECT-TYPE
      SYNTAX      ResourceId
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "This object identifies the resource that this message pertains to

         If there is no corresponding resource, then
         the value of this object MUST be 0.0."
      ::= { ome6500ExtAlarmMessageEntry 1 }    
      
     ome6500ExtAlarmMessageResourceDescription OBJECT-TYPE
      SYNTAX      SnmpAdminString
      MAX-ACCESS  read-only
      STATUS       current
      DESCRIPTION
           "This is a textual description of the resource this message
           pertains to.
                          
            The format of the string is as follows:
		       NEtype=NEname;componentType=componentInstanceId;subcompType=subcompInstanceId;....

 	        With NE as the root, the entire containment with the list of Relative 
 	        Distinguished Names (RDNs) is presented upto the 
            point where the messaging component is clearly identified. 
            Semicolon is the delimiter between a 'category=value' pair.
            The string can only contain alphanumeric characters and 
            underscores. No commas, spaces, slashes, hyphens, or
            dollar signs are allowed
               "
       ::= { ome6500ExtAlarmMessageEntry 2 }



   ome6500ExtAlarmMessageDateAndTime OBJECT-TYPE
      SYNTAX      DateAndTime
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "The local date and time when the message originated.

          Implementations MUST include the offset from UTC,
          if available.  Implementation in environments in which
          the UTC offset is not available is NOT RECOMMENDED."
      ::= { ome6500ExtAlarmMessageEntry 3 }

    ome6500ExtAlarmMessageDocumentationPointer OBJECT-TYPE
      SYNTAX      SnmpAdminString
      MAX-ACCESS  read-only
      STATUS       current
      DESCRIPTION
               "This object servces as a pointer to documentation related to this
               problem.
               
               If there is no specific document pointer for this alarm, this object
               is a null length string."
       ::= { ome6500ExtAlarmMessageEntry 4 }
    
   ome6500ExtAlarmMessageInfo OBJECT-TYPE
    SYNTAX      SnmpAdminString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "A textual discription of the event that has occurred,
            suitable to display to an operator. "
    ::= { ome6500ExtAlarmMessageEntry 5 }
          
    
  -- all notification OIDs would be prefixed with a zero OID to 
  -- facilitate  snmp v1<->v2 conversion

-- Alarm Notifications

        ome6500ExtAlarmClear NOTIFICATION-TYPE
                        OBJECTS { ome6500AlarmActiveResourceId,
                                  ome6500AlarmActiveDateAndTime,
                                  ome6500AlarmActiveDescription,
                                  ome6500ExtAlarmActiveEventType,
                                  ome6500ExtAlarmActiveProbableCause,
                                  ome6500ExtAlarmActiveAdditionalText,
                                  ome6500ExtAlarmActiveDocumentationPointer,
                                  ome6500ExtAlarmActiveResourceDescription,
                                  ome6500ExtAlarmActiveSequenceNumber
                                 }
           STATUS current
           DESCRIPTION
             "Ciena OME6500 notification for an NE alarm clearing"
        
           ::= { ome6500ExtNotificationPrefix 301 }


        ome6500ExtAlarmWarning NOTIFICATION-TYPE
                        OBJECTS { ome6500AlarmActiveResourceId,
                                  ome6500AlarmActiveDateAndTime,
                                  ome6500AlarmActiveDescription,
                                  ome6500ExtAlarmActiveEventType,
                                  ome6500ExtAlarmActiveProbableCause,
                                  ome6500ExtAlarmActiveAdditionalText,
                                  ome6500ExtAlarmActiveDocumentationPointer,
                                  ome6500ExtAlarmActiveResourceDescription,
                                  ome6500ExtAlarmActiveManualClear,
                                  ome6500ExtAlarmActiveSequenceNumber
                                 }
           STATUS current
           DESCRIPTION
             "Ciena OME6500 notification for an NE alarm of warning severity"
        
           ::= { ome6500ExtNotificationPrefix 302 }


        ome6500ExtAlarmMinor NOTIFICATION-TYPE
                        OBJECTS { ome6500AlarmActiveResourceId,
                                  ome6500AlarmActiveDateAndTime,
                                  ome6500AlarmActiveDescription,
                                  ome6500ExtAlarmActiveEventType,
                                  ome6500ExtAlarmActiveProbableCause,
                                  ome6500ExtAlarmActiveAdditionalText,
                                  ome6500ExtAlarmActiveDocumentationPointer,
                                  ome6500ExtAlarmActiveResourceDescription,
                                  ome6500ExtAlarmActiveManualClear,
                                  ome6500ExtAlarmActiveSequenceNumber
                                 }
           STATUS current
           DESCRIPTION
             "Ciena OME6500 notification for an NE alarm of minor severity"
        
           ::= { ome6500ExtNotificationPrefix 303 }


        ome6500ExtAlarmMajor NOTIFICATION-TYPE
                        OBJECTS { ome6500AlarmActiveResourceId,
                                  ome6500AlarmActiveDateAndTime,
                                  ome6500AlarmActiveDescription,
                                  ome6500ExtAlarmActiveEventType,
                                  ome6500ExtAlarmActiveProbableCause,
                                  ome6500ExtAlarmActiveAdditionalText,
                                  ome6500ExtAlarmActiveDocumentationPointer,
                                  ome6500ExtAlarmActiveResourceDescription,
                                  ome6500ExtAlarmActiveManualClear,
                                  ome6500ExtAlarmActiveSequenceNumber
                                 }
           STATUS current
           DESCRIPTION
             "Ciena OME6500 notification for an NE alarm of major severity"
        
           ::= { ome6500ExtNotificationPrefix 304 }


        ome6500ExtAlarmCritical NOTIFICATION-TYPE
                        OBJECTS { ome6500AlarmActiveResourceId,
                                  ome6500AlarmActiveDateAndTime,
                                  ome6500AlarmActiveDescription,
                                  ome6500ExtAlarmActiveEventType,
                                  ome6500ExtAlarmActiveProbableCause,
                                  ome6500ExtAlarmActiveAdditionalText,
                                  ome6500ExtAlarmActiveDocumentationPointer,
                                  ome6500ExtAlarmActiveResourceDescription,
                                  ome6500ExtAlarmActiveManualClear,
                                  ome6500ExtAlarmActiveSequenceNumber
                                 }
           STATUS current
           DESCRIPTION
             "Ciena OME6500 notification for an NE alarm of critical severity"
           ::= { ome6500ExtNotificationPrefix 305 }

        ome6500ExtAlarmMessage NOTIFICATION-TYPE
                        OBJECTS { ome6500ExtAlarmMessageResource, 
                                  ome6500ExtAlarmMessageResourceDescription, 
                                  ome6500ExtAlarmMessageDateAndTime,
                                  ome6500ExtAlarmMessageDocumentationPointer,
                                  ome6500ExtAlarmMessageInfo                  
                                  }
          STATUS  current
          DESCRIPTION
            "An informational message. This notification does not
            correspond to an alarm so would not be stored in the
            active alarm table and it does not have a corresponing
            clear."
           ::= { ome6500ExtNotificationPrefix 306 }


END

CIENA-OME6500-OPTICAL-MIB DEFINITIONS ::= BEGIN

IMPORTS
       cienaOpterametro       FROM CIENA-SMI	
       MODULE-IDENTITY,
       OBJECT-IDENTITY   FROM SNMPv2-SMI;

cienaOme6500 MODULE-IDENTITY
        LAST-UPDATED "201507150000Z"    
        ORGANIZATION "Ciena Corp."
        CONTACT-INFO
       	   "  Mib Meister
               115 North Sullivan Road
               Spokane Valley, WA 99037
               USA            
               Phone:  +1 509 242 9000
               Email:  support@ciena.com"  
        DESCRIPTION
              "Optical Multiservice Edge (ome)
              This Module will be used to identify the top level for
              Ciena OME6500 Product MIBS."
   
        ::= { cienaOpterametro 11 }


END


   CIENA-OME6500-SHELF-PARAMS-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       cienaOme6500             FROM CIENA-OME6500-OPTICAL-MIB
       DisplayString       FROM RFC1213-MIB
       IpAddress,
       OBJECT-TYPE,
       MODULE-IDENTITY,
       OBJECT-IDENTITY   FROM SNMPv2-SMI
       InetAddress, 
       InetAddressType   FROM INET-ADDRESS-MIB;

cienaOme6500ShelfParams MODULE-IDENTITY
        LAST-UPDATED "201506300000Z"    
        ORGANIZATION "Ciena Corp."
        CONTACT-INFO
       	   "  Mib Meister
               115 North Sullivan Road
               Spokane Valley, WA 99037
               USA            
               Phone:  +1 509 242 9000
               Email:  support@ciena.com"  
        DESCRIPTION
              "Optical Multiservice Edge (OME)
              This Module will be used to retrieve  shelf information from the NE.
              The MIB content has been imported from NORTEL-OME6500-SHELF-PARAMS-MIB."
   
        --Revision history
       REVISION "201506300000Z"
       DESCRIPTION "Initial Version - created for OME6500 REL 11.1"         

        ::= { cienaOme6500 1 }

cienaOme6500ShelfParamsProv  OBJECT IDENTIFIER  ::= { cienaOme6500ShelfParams 1 }

ErrorCodes ::= INTEGER {
    eNil(0),
    eMSG-SENT(1), -- Only for TL1 use, applications don't need to concern
    ePRTL(2),     -- Partially completed
    eCOMPLD(3),   -- Completed
    eDENY(4),     --  Only for TL1 use, applications don't need to concern
    eENEQ(5),     -- Equipage, Not EQuipped
    eENEX(6),     -- Equipage, Not equipped with EXercise capability
    eENPS(7),     -- Equipage, Not equipped with Protection Switching 
    eIBEX(8),     -- Input, Block EXtra
    eIBMS(9),     -- Input, Block MiSsing
    eICNV(10),    -- Input, Command Not Valid
    eIDNV(11),    -- Input, Data Not Valid
    eIDRG(12),    -- Input, Data, RanGe error
    eIEAE(13),    -- Input, Entity Already Exists 
    eIENE(14),    -- Input, Entity Not Exists
    eIIAC(15),    -- Input, Invalid ACcess identifier
    eIICT(16),    -- Input, Invalid Correlation Tag
    eIIPG(17),    -- Input, Invalid Parameter Grouping
    eIITA(18),    -- Input, Invalid TArget identifier
    eINUP(19),    -- Input, Non-null Unimplemented Parameter
    eIPEX(20),    -- Input, Parameter EXtra
    eIPMS(21),    -- Input, Parameter MiSsing
    eIPNV(22),    -- Input, Parameter Not Valid
    ePICC(23),    -- Privilege, Invalid Command Code
    ePIUC(24),    -- Privilege, Illegal User Code
    ePIUI(25),    -- Privilege, Illegal User Identity
    ePLNA(26),    -- Privilege, Login Not Active
    eSAAL(27),    -- Status, Already ALlowed
    eSAAS(28),    -- Status, Already ASsigned
    eSABT(29),    -- Status, ABorTed
    eSAIN(30),    -- Status, Already INhibited
    eSAIS(31),    -- Status, Already In Service
    eSAMS(32),    -- Status, Already in Maintenance State
    eSANP(33),    -- Status, Alignment Not Provisioned
    eSAOP(34),    -- Status, Already OPerated
    eSAPR(35),    -- Status, Already in PRotection state
    eSARB(36),    -- Status, All Resources Busy
    eSARL(37),    -- Status, Already ReLeased
    eSDNC(38),    -- Status, Data Not Consistent
    eSDNR(39),    -- Status, Data Not Ready
    eSLEM(40),    -- Status, List Exceeds Maximum
    eSNSR(41),    -- Status, No Switch Request outstanding
    eSNVS(42),    -- Status, Not in Valid State
    eSPFA(43),    -- Status, Protection unit FAiled
    eSPLD(44),    -- Status, Protection unit LockeD
    eSPUA(45),    -- Status, Path UnAligned
    eSRCI(46),    -- Status, Requested Command Inhibited
    eSROF(47),    -- Status, Requested Operation Failed
    eSSRD(48),    -- Status, Switch Request Denied
    eSSRE(49),    -- Status, System Resources Exceeded
    eSSTP(50),    -- Status, SToPped
    eSWFA(51),    -- Status, Working unit FAiled
    eSWLD(52),    -- Status, Working unit LockeD
    eSRPR(53),    -- Status, switch Request PReempted
    eEQWT(54),    -- EQuipage, Wrong Type
    eICNS(55),    -- Input, Command Not Supported
    eODNV(56),    -- Output, Data Not Valid
    eIATA(57),    -- Input, Ambiguous TID
    eICNI(58),    -- Input, Command Not Implemented yet
    eTL1SNA(59),  -- TL1 session Not Available
    eMERR(60),    -- Status, Multiple ERRors 
    eSFTPC-OK(61),
    eSFTPC-ERR(62),
    eLOST(63),    -- TIDC LOST member AO report
    eCANC(64),  
    --eIDNC       (4),
    --eIENA       (8),
    --eIISP       (13),
    --ePRNO       (24),
    --ePLMM       (39),
    --eTIMM       (40),
    --eUSRO       (41)
    eMAX(65)
}


ome6500ShelfId OBJECT-TYPE
	SYNTAX INTEGER(1..64)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is an integer id between 1 to 64"
	::= { cienaOme6500ShelfParamsProv  1 }

ome6500ShelfSubId OBJECT-TYPE
	SYNTAX INTEGER(0..64)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "If it is part of OM5K ring, it will be in the range of 1..64. 
	             If it is not part of the ring, the API will return 0"
	::= { cienaOme6500ShelfParamsProv  2 }

ome6500ShelfTid OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is the shelf's TID"
	::= { cienaOme6500ShelfParamsProv  3 }

ome6500ShelfIpAddress OBJECT-TYPE
	SYNTAX IpAddress
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is the shelf's IPV4 address"
	::= { cienaOme6500ShelfParamsProv  4 }

ome6500ShelfSoftwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This object gives the shelf's current Software Version
	             when it is retrieved."
	::= { cienaOme6500ShelfParamsProv  5 }

ome6500ShelfSiteId OBJECT-TYPE
	SYNTAX INTEGER(0..65535)
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Value of 0 indicates unprovisioned"
	::= { cienaOme6500ShelfParamsProv  6 }

ome6500ShelfSiteName OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION ""
	::= { cienaOme6500ShelfParamsProv  7 }

ome6500ShelfSnmpVersion OBJECT-TYPE
	SYNTAX INTEGER {
		v1v2c(1),
		v1v2cv3(2),
		v3(3)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This value specifies the supported SNMP versions: v1v2c, v1v2cv3, or v3"
	::= { cienaOme6500ShelfParamsProv  8 }

ome6500shelfMode OBJECT-TYPE
	SYNTAX INTEGER {
		sonet(1),
		sdh(2),
		jsdh(3)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "SONET, SDH, J-SDH"
	::= { cienaOme6500ShelfParamsProv  9 }

ome6500ShelfIsGne OBJECT-TYPE
	SYNTAX INTEGER {
		false(0),
		true(1)
	}
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Set to true if the current shelf is a GNE.
                 If this variable is set to TRUE, query the
                 ome6500ShelfGneIpAddress for the GNE IP."
	::= { cienaOme6500ShelfParamsProv  10 }

ome6500ShelfGneIpAddress OBJECT-TYPE
	SYNTAX IpAddress
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "If the shelf is a GNE, this variable shall
                 contain a valid IP address which could be
                 different from the shelf IP and serves as a
                 GNE IP."
	::= { cienaOme6500ShelfParamsProv  11 }


ome6500LastErrorRc OBJECT-TYPE
	SYNTAX ErrorCodes
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This contains a reference to the 4-letter error code
                 returned by TL1 after the last set operation."
	::= { cienaOme6500ShelfParamsProv  12 }

ome6500LastErrorDescription OBJECT-TYPE
	SYNTAX DisplayString
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "Some TL1 commands may have additional descriptions
                 beyond the 4-letter code. For those commands, this
                 additional info shall be available through this variable.
                 Otherwise, this is empty."
	::= { cienaOme6500ShelfParamsProv  13 }

ome6500ShelfInetAddressType OBJECT-TYPE
	SYNTAX InetAddressType
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The address type of shelf. Currently, only unknown and IPv6 values are expected.
                     Value unknown will be returned, if no IPv6 address is provisioned."
	::= { cienaOme6500ShelfParamsProv  14 }

ome6500ShelfInetAddress OBJECT-TYPE
	SYNTAX InetAddress
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is the shelf's network address.Its value depends on value of shelfInetAddressType.
                     NULL value will be returned if ome6500ShelfInetAddress = unknown"
	::= { cienaOme6500ShelfParamsProv  15 }

ome6500ShelfGneInetAddressType OBJECT-TYPE
	SYNTAX InetAddressType
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "The address type of GNE. Currently, only unknown and IPv6 values are expected.
                     Value unknown will be returned, if no IPv6 address is provisioned for GNE."
	::= { cienaOme6500ShelfParamsProv  16 }

ome6500ShelfGneInetAddress OBJECT-TYPE
	SYNTAX InetAddress
	MAX-ACCESS read-only
	STATUS current
	DESCRIPTION "This is GNE network address.Its value depends on value of shelfGneInetAddressType.
                     NULL value will be returned if ome6500ShelfGneInetAddress = unknown"
	::= { cienaOme6500ShelfParamsProv  17 }

END


CIENA-OME6500-SYNOPTICS-ROOT-MIB DEFINITIONS ::= BEGIN

IMPORTS
	MODULE-IDENTITY, enterprises
		FROM SNMPv2-SMI
	TEXTUAL-CONVENTION
		FROM SNMPv2-TC
	cienaOme6500
		FROM CIENA-OME6500-OPTICAL-MIB;

cienaSynoptics MODULE-IDENTITY
	LAST-UPDATED "200510110000Z"
	ORGANIZATION 
		"Ciena Corp."
	CONTACT-INFO 
		"Ciena Corp."
	DESCRIPTION 
		"SynOptics Root MIB
		
		            The MIB content has been derived from Synoptics Root MIB."

	REVISION "200510110000Z"
	DESCRIPTION 
		"Created for R11.1 to enhance the MIB functionlity for ipv6 addresses
		and added the LLDP remaining fields."

::= { cienaOme6500 2 }

-- This type is used to specify a concentrator chassis.
-- Top Branches under "synoptics"

cienaSynopticProducts             OBJECT IDENTIFIER ::= { cienaSynoptics 1 }

-- Branches under "cienaSynopticProducts"

cienaSeries5000           OBJECT IDENTIFIER ::= { cienaSynopticProducts 6 }

END

CIENA-OME6500-S5-ROOT-MIB DEFINITIONS ::= BEGIN

IMPORTS
	MODULE-IDENTITY
		FROM SNMPv2-SMI
	cienaSeries5000
		FROM CIENA-OME6500-SYNOPTICS-ROOT-MIB;

cienaS5RootMib MODULE-IDENTITY
	LAST-UPDATED "201510200000Z"
	ORGANIZATION 
		"Ciena Corp"
	CONTACT-INFO 
		"Ciena Corp"
	DESCRIPTION 
		"5000 CIENA Root MIB
		  Created for Rel11.10.
          This MIB content has been derived from S5-ROOT MIB."


	REVISION "201510200000Z"
	DESCRIPTION 
		"Created for Rel11.10 to enhance support for ipv6 address and LLDP fields"
::= { cienaSeries5000 0 }


-- Branches under "cienaSeries5000"
-- branch for registration of values for objects
--   with syntax of OBJECT IDENTIFIER

cienaS5EnMsTop                OBJECT IDENTIFIER ::= { cienaSeries5000 13 }

END

CIENA-OME6500-S5-ETH-MULTISEG-TOPOLOGY-MIB DEFINITIONS ::= BEGIN

IMPORTS
        MODULE-IDENTITY, OBJECT-TYPE, IpAddress, Integer32, TimeTicks
            FROM SNMPv2-SMI
	SnpxChassisType, SnpxBackplaneType
		FROM SYNOPTICS-ROOT-MIB
	InetAddress, InetAddressType
		FROM INET-ADDRESS-MIB
	DisplayString
		FROM RFC1213-MIB
	cienaS5EnMsTop
		FROM CIENA-OME6500-S5-ROOT-MIB
	MacAddress
		FROM SNMPv2-TC;

ome6500S5EthMultisegTopologyMib MODULE-IDENTITY
       LAST-UPDATED    "201510200000Z"
       ORGANIZATION    "Ciena Corp"
       CONTACT-INFO    "Ciena Corp"
       DESCRIPTION
           "5000 CIENA Ethernet Multi-segment MIB
            Created for Rel11.10.
            This MIB contains objects extended from Nortel S5-ETH-MULTISEG-TOPOLOGY MIB."

       REVISION "201510200000Z" 
       DESCRIPTION "Created for Rel11.10 to enhance support for ipv6 address and LLDP fields."

       ::= { cienaS5EnMsTop 0 }

-- Groups

ome6500S5EnMsTopInfo		OBJECT IDENTIFIER ::= { cienaS5EnMsTop 1 }

ome6500S5EnMsTopNmm		OBJECT IDENTIFIER ::= { cienaS5EnMsTop 2 }

ome6500S5EnMsTopBdg		OBJECT IDENTIFIER ::= { cienaS5EnMsTop 3 }

ome6500S5EnMsTopSrcMac		OBJECT IDENTIFIER ::= { cienaS5EnMsTop 4 }

-- SECTION 2: MIB Objects

-- Topology Status and Configuration Information

ome6500S5EnMsTopIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"An IP address of the agent. This is used to fill
		in the IP address field of transmitted SONMP packets.
		The agent should be reachable through this IP address."
	::= { ome6500S5EnMsTopInfo 1 }

ome6500S5EnMsTopStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		  topOn(1),
		  topOff(2)
		}
	MAX-ACCESS	read-write
	STATUS	current
	DESCRIPTION
		"Indicates if the agent is participating in
		multi-segment topology. The values are:
		  topOn(1)....topology is on
		  topOff(2)...topology is off
		When the value is topOff(2) the status of 	
		topology table entries is undefined.  However, the
		agent should make its best attempt when the value is
		changed to topOff(2) to remove all existing instances
		of topology MIB objects. The agent must save the
		setting of this object in nonvolatile memory (i.e.,
		save across reboots)."
	DEFVAL	{ topOn }
	::= { ome6500S5EnMsTopInfo 2 }

ome6500S5EnMsTopNmmLstChg OBJECT-TYPE
	SYNTAX	TimeTicks
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The value of sysUpTime the last time an entry in the
		NMM topology table was added, deleted, or modified.  If
		the NMM topology table has not changed since cold/warm
		start of the agent, then the value is zero."
	::= { ome6500S5EnMsTopInfo 3 }

ome6500S5EnMsTopBdgLstChg OBJECT-TYPE
	SYNTAX	TimeTicks
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The value of sysUpTime the last time an entry in the
		bridge topology table was added, deleted, or modified.
		If the bridge topology table has not changed since
		cold/warm start of the agent, then the value is zero."
	::= { ome6500S5EnMsTopInfo 4 }

ome6500S5EnMsTopNmmMaxNum OBJECT-TYPE
	SYNTAX	INTEGER (0..65535)
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The maximum number of entries in the NMM topology
		table."
	::= { ome6500S5EnMsTopInfo 5 }

ome6500S5EnMsTopNmmCurNum OBJECT-TYPE
	SYNTAX	INTEGER (0..65535)
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The current number of entries in the NMM topology
		table."
	::= { ome6500S5EnMsTopInfo 6 }

ome6500S5EnMsTopBdgMaxNum OBJECT-TYPE
	SYNTAX	INTEGER (0..65535)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The maximum number of entries in the bridge topology
		table."
	::= { ome6500S5EnMsTopInfo 7 }

ome6500S5EnMsTopBdgCurNum OBJECT-TYPE
	SYNTAX	INTEGER (0..65535)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The current number of entries in the bridge topology
		table."
	::= { ome6500S5EnMsTopInfo 8 }

ome6500S5EnMsTopInetAddressType OBJECT-TYPE
	SYNTAX	InetAddressType
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The address type of shelf.Currently only unknown and ipv6 values are expected.
		Value unknown will be returned if no ipv6 address is provisioned."
	::= { ome6500S5EnMsTopInfo 9 }

ome6500S5EnMsTopInetAddress OBJECT-TYPE
	SYNTAX	InetAddress
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"This is Shelf's network address. Its value depends on the value of ome6500S5EnMsTopInetAddressType
		NULL value will be returned in case no ipv6 address is provisioned."
	::= { ome6500S5EnMsTopInfo 10 }

-- Network Management Module (NMM) Topology Table

ome6500S5EnMsTopNmmTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Ome6500S5EnMsTopNmmEntry
	MAX-ACCESS	not-accessible
	STATUS	current
	DESCRIPTION
		"A table of topology information from each topology
		agent that sends out NMM topology messages, and that
		has been heard by the reporting topology agent.  The
		number of entries is determined by the number of
		distinct topology messages received.  A topology
		message is identified by a combination of the IP
		address and segment-identifier contained in the
		message, and the slot-port on which it is received.
		Entries in the table are created by reception of a
		'new' NMM topology message.  An entry is removed from
		the table after no messages are received from the
		corresponding topology agent in the required time
		interval.

		NOTE: there is an entry for the reporting agent with
		the values of slot and port set to zero."
	::= { ome6500S5EnMsTopNmm 1 }

ome6500S5EnMsTopNmmEntry OBJECT-TYPE
	SYNTAX	Ome6500S5EnMsTopNmmEntry
	MAX-ACCESS	not-accessible
	STATUS	current
	DESCRIPTION
		"A row in the NMM topology table. Entries in the table
		can not be created or deleted via SNMP."
	INDEX	{ ome6500S5EnMsTopNmmSlot,
		  ome6500S5EnMsTopNmmPort,
		  ome6500S5EnMsTopNmmIpAddr,
		  ome6500S5EnMsTopNmmSegId }
	::= { ome6500S5EnMsTopNmmTable 1 }

Ome6500S5EnMsTopNmmEntry ::= SEQUENCE {
	ome6500S5EnMsTopNmmSlot INTEGER,
	ome6500S5EnMsTopNmmPort INTEGER,
	ome6500S5EnMsTopNmmIpAddr IpAddress,
	ome6500S5EnMsTopNmmSegId INTEGER,
	ome6500S5EnMsTopNmmMacAddr  MacAddress, 
	ome6500S5EnMsTopNmmChassisType SnpxChassisType,
	ome6500S5EnMsTopNmmBkplType SnpxBackplaneType,
	ome6500S5EnMsTopNmmLocalSeg INTEGER,
	ome6500S5EnMsTopNmmCurState INTEGER,
	ome6500S5EnMsTopNmmInetAddressType InetAddressType,
	ome6500S5EnMsTopNmmInetAddress InetAddress,
	ome6500S5EnMsTopNmmSystemDescr DisplayString,
	ome6500S5EnMsTopNmmPortString DisplayString,
	ome6500S5EnMsTopNmmRxActualData DisplayString
	}

ome6500S5EnMsTopNmmSlot OBJECT-TYPE
	SYNTAX	INTEGER (0..255)
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The slot on which the topology message
		was received.

		NOTE: There is an artificial 'row' for the reporting
		agent with slot and port equal to zero.

		NOTE: Non-modular devices that do not have multiple
		slots should set this value to 1."
	::= { ome6500S5EnMsTopNmmEntry 1 }

ome6500S5EnMsTopNmmPort OBJECT-TYPE
	SYNTAX	INTEGER (0..255)
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The port on which the topology message 
		was received.

		NOTE: there is an artificial 'row' for the reporting
		agent with slot and port equal to zero."
	::= { ome6500S5EnMsTopNmmEntry 2 }

ome6500S5EnMsTopNmmIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The IP address of the sender of the topology message."
	::= { ome6500S5EnMsTopNmmEntry 3 }

ome6500S5EnMsTopNmmSegId OBJECT-TYPE
	SYNTAX	INTEGER (0..'FFFFFF'H)
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The 'segment identifier' of the segment from which
		the remote agent sent the topology message.  The value
		is extracted from the received topology message.
		Different devices may use different methods for
		representing the segment identifier.  For example,
		system 5000 NMMs that run multi-segment autotopology use
		the SrcIndx of the segment as the segment identifier;
                switches use a computed a value equal to '(256 * s) + p'
                where 's' is the board, card or slot number and 'p' is
                the port number on and as seen by the switch sending the 
                topology message;
		system 3000 NMMs use the lower three bytes of the MAC
		address of the NMM as the segment identifier.  In any
		case, the 'segment identifier' uniquely identifies the
		network segment in the remote device from which
		the topology message was sent."
	::= { ome6500S5EnMsTopNmmEntry 4 }

ome6500S5EnMsTopNmmMacAddr OBJECT-TYPE
	SYNTAX	MacAddress
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The MAC address of the sender of the topology message."
	::= { ome6500S5EnMsTopNmmEntry 5 }

ome6500S5EnMsTopNmmChassisType OBJECT-TYPE
	SYNTAX	SnpxChassisType
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The chassis type of the device that sent the topology
		message."
	::= { ome6500S5EnMsTopNmmEntry 6 }

ome6500S5EnMsTopNmmBkplType OBJECT-TYPE
	SYNTAX	SnpxBackplaneType
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The backplane type of the device that sent the
		topology message."
	::= { ome6500S5EnMsTopNmmEntry 7 }

ome6500S5EnMsTopNmmLocalSeg OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
		}
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"Indicates if the sender of the topology message is on
		the same Ethernet segment (i.e., NOT across a bridge)
		as the reporting agent."
	::= { ome6500S5EnMsTopNmmEntry 8 }

ome6500S5EnMsTopNmmCurState OBJECT-TYPE
	SYNTAX	INTEGER {
		topChanged(1),
		heartbeat(2),
		new(3)
		}
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The current state of sender of the
		topology message. The values are:
		  topChanged(1)...topology information has
		                    recently changed
		  heartbeat(2)....topology information unchanged
		  new(3)..........sending agent is in new state."
	::= { ome6500S5EnMsTopNmmEntry 9 }

ome6500S5EnMsTopNmmInetAddressType OBJECT-TYPE
	SYNTAX	InetAddressType
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The address type of shelf.Currently only unknown and ipv6 values are expected.
		Value unknown will be returned if no ipv6 address is provisioned."
	::= { ome6500S5EnMsTopNmmEntry 10 }

ome6500S5EnMsTopNmmInetAddress OBJECT-TYPE
	SYNTAX	InetAddress
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"This is Shelf's network address. Its value depends on the value of object
		ome6500S5EnMsTopNmmInetAddressType."
	::= { ome6500S5EnMsTopNmmEntry 11 }

ome6500S5EnMsTopNmmSystemDescr OBJECT-TYPE
	SYNTAX	DisplayString
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"This is system_description string. Its max length shall be always
		40 characters."
	::= { ome6500S5EnMsTopNmmEntry 12 }

ome6500S5EnMsTopNmmPortString OBJECT-TYPE
	SYNTAX	DisplayString
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"This is Port String value from LLDP data. Its max length shall be 12
		characters."
	::= { ome6500S5EnMsTopNmmEntry 13 }

ome6500S5EnMsTopNmmRxActualData OBJECT-TYPE
	SYNTAX	DisplayString
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"This is the String containing LLDP information received in Rx_Actual field.
		This will contain the complete information for LLDP output."
	::= { ome6500S5EnMsTopNmmEntry 14 }

-- Encoded Octet Strings for NMM Topology Table

ome6500S5EnMsTopNmmEosSize OBJECT-TYPE
	SYNTAX	INTEGER (0..1440)
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"The current size of a 'row' in the table
		ome6500S5EnMsTopNmmEosTable.  This allows applications
		to be able to break apart 'rows' in the table."
	::= { ome6500S5EnMsTopNmm 2 }

ome6500S5EnMsTopNmmEosTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Ome6500S5EnMsTopNmmEosEntry
	MAX-ACCESS	not-accessible
	STATUS	current
	DESCRIPTION
		"A table of encoded octet strings of
		entries in table ome6500S5EnMsTopNmmTable.
		The number of entries is determined by
		packing of 'rows' from ome6500S5EnMsTopNmmTable."
	::= { ome6500S5EnMsTopNmm 3 }

ome6500S5EnMsTopNmmEosEntry OBJECT-TYPE
	SYNTAX	Ome6500S5EnMsTopNmmEosEntry
	MAX-ACCESS	not-accessible
	STATUS	current
	DESCRIPTION
		"A row in the table of encoded octet
		strings for table ome6500S5EnMsTopNmmTable.
		Instance returned in Response PDU:
		  On GETs: instance specified is the
		           instance returned.
		  On GET-NEXTs: instance returned is the
		                instance of the last record
		                contained in the octet string.

		Entries in the table can not be created
		or deleted via SNMP."
	INDEX	{ ome6500S5EnMsTopNmmSlot,
		  ome6500S5EnMsTopNmmPort,
		  ome6500S5EnMsTopNmmIpAddr,
		  ome6500S5EnMsTopNmmSegId }
	::= { ome6500S5EnMsTopNmmEosTable 1 }

Ome6500S5EnMsTopNmmEosEntry ::= SEQUENCE {
	ome6500S5EnMsTopNmmEos OCTET STRING
	}

ome6500S5EnMsTopNmmEos OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(0..1400))
	MAX-ACCESS	read-only
	STATUS	current
	DESCRIPTION
		"An encoded octet string. On reads it contains
		an integral number of 'rows' from table
		ome6500S5EnMsTopNmmTable. All 'rows' are the same size
		which is defined by object ome6500S5EnMsTopNmmEosSize."
	::= { ome6500S5EnMsTopNmmEosEntry 1 }

-- Bridge Topology Table

ome6500S5EnMsTopBdgTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Ome6500S5EnMsTopBdgEntry
	MAX-ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		"A table of topology information from each Bridge in
		the network that is sending bridge topology messages
		that have been heard by the reporting agent.  The
		number of entries is determined by the number of
		detected (and active) bridges.  Entries in the table
		are created by reception of a topology message from a
		'new' bridge.  An entry is removed from the table
		after no messages are received from the corresponding
		bridge in the required time interval."
	::= { ome6500S5EnMsTopBdg 1 }

ome6500S5EnMsTopBdgEntry OBJECT-TYPE
	SYNTAX	Ome6500S5EnMsTopBdgEntry
	MAX-ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		"A row in the bridge topology table.  Entries in the
		table can not be created or deleted via SNMP."
	INDEX	{ ome6500S5EnMsTopBdgSlotNum,
		  ome6500S5EnMsTopBdgPortNum,
		  ome6500S5EnMsTopBdgIpAddr }
	::= { ome6500S5EnMsTopBdgTable 1 }

Ome6500S5EnMsTopBdgEntry ::= SEQUENCE {
	ome6500S5EnMsTopBdgSlotNum INTEGER,
	ome6500S5EnMsTopBdgPortNum INTEGER,
	ome6500S5EnMsTopBdgIpAddr IpAddress,
	ome6500S5EnMsTopBdgNumber INTEGER,
	ome6500S5EnMsTopBdgMacAddr MacAddress,
	ome6500S5EnMsTopBdgType INTEGER,
	ome6500S5EnMsTopBdgStatus INTEGER,
	ome6500S5EnMsTopBdgNumPorts Integer32,
	ome6500S5EnMsTopBdgHelloPortNum INTEGER,
	ome6500S5EnMsTopBdgHelloPortType INTEGER,
	ome6500S5EnMsTopBdgHelloPortStatus INTEGER,
	ome6500S5EnMsTopBdgCompBdgMac1 MacAddress,
	ome6500S5EnMsTopBdgCompBdgMac2 MacAddress
	}

ome6500S5EnMsTopBdgSlotNum OBJECT-TYPE
	SYNTAX	INTEGER (0..255)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The slot on which the topology message was
		received.

		NOTE: Non-modular devices that do not have multiple
		slots should set this value to 1."
	::= { ome6500S5EnMsTopBdgEntry 1 }

ome6500S5EnMsTopBdgPortNum OBJECT-TYPE
	SYNTAX	INTEGER (0..255)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The port on which the topology message was received."
	::= { ome6500S5EnMsTopBdgEntry 2 }

ome6500S5EnMsTopBdgIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The IP address of the bridge that sent the
		topology message."
	::= { ome6500S5EnMsTopBdgEntry 3 }

ome6500S5EnMsTopBdgNumber OBJECT-TYPE
	SYNTAX	INTEGER (0..65535)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The 'Bridge Number' of the bridge that sent
		the topology message.  This is the IEEE 802.1
		bridge number."
	::= { ome6500S5EnMsTopBdgEntry 4 }

ome6500S5EnMsTopBdgMacAddr OBJECT-TYPE
	SYNTAX	MacAddress
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The MAC Address of the bridge that sent the
		topology message."
	::= { ome6500S5EnMsTopBdgEntry 5 }

ome6500S5EnMsTopBdgType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		localSyn(2),
		remoteSyn(3),
		kalpana(4)
		}
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The 'kind of bridge' that sent the topology
		message. The values are:
		  other(1).....unknown or other type
		  locSyn(2)....local SynOptics bridge
		  remSyn(3)....remote SynOptics bridge
		  kalpana(4)...Kalpana bridge(switch)
		"
	::= { ome6500S5EnMsTopBdgEntry 6 }

ome6500S5EnMsTopBdgNumPorts OBJECT-TYPE
	SYNTAX	Integer32
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The number of ports on the bridge."
	::= { ome6500S5EnMsTopBdgEntry 7 }

ome6500S5EnMsTopBdgStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		active(2),
		standby(3)
		}
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The current operational status from the bridge
		that sent the topology message.  The values are:
		  other(1).....unknown or other
		  active(2)....bridge is active
		  standby(3)...bridge is in standby

		A value of standby(3) means that at least ONE port
		is in standby mode.  A value of active(2) means NO
		port is in standby mode."
	::= { ome6500S5EnMsTopBdgEntry 8 }

ome6500S5EnMsTopBdgHelloPortNum OBJECT-TYPE
	SYNTAX	INTEGER (0..255)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The port number used by the bridge to
		send the topology message.  This port may
		or may not be in standby mode."
	::= { ome6500S5EnMsTopBdgEntry 9 }

ome6500S5EnMsTopBdgHelloPortType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		eth(2),
		tok4(3),
		tok16(4),
		fddi(5),
		t1(6)
		}
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The type of the port used by the bridge to
		send the topology message.  The values are:
		  other(1)...other or unknown type
		  eth(2).....ethernet
		  tok4(3)....4 Mbit token ring
		  tok16(4)...16 Mbit token ring
		  fddi(5)....fddi
		  t1(6)......t1

		Note: These enumerations were done for
		'completeness'. No other value than eth(2)
		should ever be received by an ethernet agent."
	::= { ome6500S5EnMsTopBdgEntry 10 }

ome6500S5EnMsTopBdgHelloPortStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		active(2),
		standby(3)
		}
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The status of the port used by the bridge
		to send the topology message. The values are:
		  other(1).....unknown or other
		  active(2)....port is active
		  standby(3)...port is in standby"
	::= { ome6500S5EnMsTopBdgEntry 11 }

ome6500S5EnMsTopBdgCompBdgMac1 OBJECT-TYPE
	SYNTAX	MacAddress
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The first MAC address of a companion bridge
		of the bridge that sent the topology message.
		The value is 00:00:00:00:00:00 for local
		bridges (since there is no companion bridge)
		and also when the companion MAC address
		is unknown for remote bridges."
	::= { ome6500S5EnMsTopBdgEntry 12 }

ome6500S5EnMsTopBdgCompBdgMac2 OBJECT-TYPE
	SYNTAX	MacAddress
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The second MAC address of a companion bridge
		of the bridge that sent the topology message.
		The value is 00:00:00:00:00:00 for local
		bridges (since there is no companion bridge)
		and also when the companion MAC address
		is unknown for remote bridges."
	::= { ome6500S5EnMsTopBdgEntry 13 }

-- Encoded Octet Strings for Bridge Topology Table

ome6500S5EnMsTopBdgEosSize OBJECT-TYPE
	SYNTAX	INTEGER (0..1440)
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The current size of a 'row' in the table
		ome6500S5EnMsTopBdgEosTable.  This allows applications
		to be able to break apart 'rows' in the table."
	::= { ome6500S5EnMsTopBdg 2 }

ome6500S5EnMsTopBdgEosTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Ome6500S5EnMsTopBdgEosEntry
	MAX-ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		"A table of encoded octet strings of
		entries in table ome6500S5EnMsTopBdgTable.
		The number of entries is determined by
		packing of 'rows' from ome6500S5EnMsTopBdgTable."
	::= { ome6500S5EnMsTopBdg 3 }

ome6500S5EnMsTopBdgEosEntry OBJECT-TYPE
	SYNTAX	Ome6500S5EnMsTopBdgEosEntry
	MAX-ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		"A row in the table of encoded octet
		strings for table ome6500S5EnMsTopBdgTable.
		Instance returned in Response PDU:
		  On GETs: instance specified is the
		             instance returned.
		  On GET-NEXTs: instance returned is the
		                  instance of the last record
		                  contained in the octet string.

		Entries in the table can not be created
		or deleted via SNMP."
	INDEX	{ ome6500S5EnMsTopBdgSlotNum,
		  ome6500S5EnMsTopBdgPortNum,
		  ome6500S5EnMsTopBdgIpAddr }
	::= { ome6500S5EnMsTopBdgEosTable 1 }

Ome6500S5EnMsTopBdgEosEntry ::= SEQUENCE {
	ome6500S5EnMsTopBdgEos OCTET STRING
	}

ome6500S5EnMsTopBdgEos OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(0..1400))
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"An encoded octet string. On reads it contains
		an integral number of 'rows' from table
		ome6500S5EnMsTopBdgTable.  All 'rows' are the same size
		which is defined by object ome6500S5EnMsTopBdgEosSize."
	::= { ome6500S5EnMsTopBdgEosEntry 1 }

-- MAC Address-to-Segment Mapping Table

-- Implementation of this group is optional. It is supported by those
-- devices that use different source MAC addresses to transmit
-- topology messages on different segments.

ome6500S5EnMsTopSrcMacAddrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Ome6500S5EnMsTopSrcMacAddrEntry
	MAX-ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		"A table describing the source MAC addresses that the
		agent uses to transmit topology messages on different
		segments in the device.  The MAC addresses are
		preallocated and remain unchanged for the agent.
		However, the mapping between a MAC address and segment
		may change, since it can depend on the current
		physical and/or logical configuration of the device.

		Implementation of this group is required for those
		devices that use different source MAC addresses to
		transmit topology messages on different segments.
		Implementation of this group is optional otherwise."
	::= { ome6500S5EnMsTopSrcMac 1 }

ome6500S5EnMsTopSrcMacAddrEntry OBJECT-TYPE
	SYNTAX	Ome6500S5EnMsTopSrcMacAddrEntry
	MAX-ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		"A row in the table of MAC address-to-segment mappings. 
		Entries in the table can not be created or deleted
		via SNMP."
	INDEX	{ ome6500S5EnMsTopSrcMacAddr }
	::= { ome6500S5EnMsTopSrcMacAddrTable 1 }

Ome6500S5EnMsTopSrcMacAddrEntry ::= SEQUENCE {
	ome6500S5EnMsTopSrcMacAddr   MacAddress,
	ome6500S5EnMsTopSrcMacSegId  INTEGER
	}

ome6500S5EnMsTopSrcMacAddr OBJECT-TYPE
	SYNTAX	MacAddress
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The MAC address used to transmit topology messages."
	::= { ome6500S5EnMsTopSrcMacAddrEntry 1 }

ome6500S5EnMsTopSrcMacSegId OBJECT-TYPE
	SYNTAX	INTEGER (0..16777215) 
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The 'segment-identifier' of the segment 
		on which topology messages were transmitted."
	::= { ome6500S5EnMsTopSrcMacAddrEntry 2 }

ome6500S5EnMsTopSrcMacAddrLstChg OBJECT-TYPE
	SYNTAX	TimeTicks
	MAX-ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The value of sysUpTime when an entry in the 
		table ome6500S5EnMsTopSrcMacAddrTable was last changed.
		If no changes have been done since cold/warm start
		of the agent, then the value is zero."
	::= { ome6500S5EnMsTopSrcMac 2 }

END

